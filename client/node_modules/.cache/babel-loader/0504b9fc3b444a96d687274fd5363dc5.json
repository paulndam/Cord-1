{"ast":null,"code":"import _regeneratorRuntime from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Avatar,Box,Button,Flex,Input,LightMode,Modal,ModalBody,ModalContent,ModalFooter,ModalHeader,ModalOverlay,Text}from\"@chakra-ui/react\";import{editMessage}from\"api/handler/messages\";import React,{useState}from\"react\";import{getTime}from\"utils/dateUtils\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function EditMessageModal(_ref){var message=_ref.message,isOpen=_ref.isOpen,onClose=_ref.onClose;var _useState=useState(message.text),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];function handleEditMessage(){return _handleEditMessage.apply(this,arguments);}function _handleEditMessage(){_handleEditMessage=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!text||!text.trim())){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.next=4;return editMessage(message.id,text.trim());case 4:onClose();case 5:case\"end\":return _context.stop();}}},_callee);}));return _handleEditMessage.apply(this,arguments);}return/*#__PURE__*/_jsxs(Modal,{isOpen:isOpen,onClose:onClose,isCentered:true,children:[/*#__PURE__*/_jsx(ModalOverlay,{}),/*#__PURE__*/_jsxs(ModalContent,{bg:\"brandGray.light\",children:[/*#__PURE__*/_jsx(ModalHeader,{fontWeight:\"bold\",mb:0,pb:0,children:\"Edit Message\"}),/*#__PURE__*/_jsx(ModalBody,{children:/*#__PURE__*/_jsx(Flex,{alignItems:\"center\",my:\"2\",mr:\"1\",justify:\"space-between\",boxShadow:\"dark-lg\",py:2,children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(Avatar,{h:\"40px\",w:\"40px\",ml:\"4\",src:message.user.image}),/*#__PURE__*/_jsxs(Box,{ml:\"3\",children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{children:message.user.username}),/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"brandGray.accent\",ml:\"3\",children:getTime(message.createdAt)})]}),/*#__PURE__*/_jsx(Input,{value:text,onChange:function onChange(e){return setText(e.target.value);},bg:\"brandGray.dark\",borderColor:\"black\",borderRadius:\"3px\",focusBorderColor:\"none\"})]})]})})}),/*#__PURE__*/_jsxs(ModalFooter,{bg:\"brandGray.dark\",children:[/*#__PURE__*/_jsx(Button,{onClick:onClose,mr:6,variant:\"link\",fontSize:\"14px\",children:\"Cancel\"}),/*#__PURE__*/_jsx(LightMode,{children:/*#__PURE__*/_jsx(Button,{colorScheme:\"green\",fontSize:\"14px\",onClick:handleEditMessage,children:\"Save\"})})]})]})]});}","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/modals/EditMessageModal.js"],"names":["Avatar","Box","Button","Flex","Input","LightMode","Modal","ModalBody","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Text","editMessage","React","useState","getTime","EditMessageModal","message","isOpen","onClose","text","setText","handleEditMessage","trim","id","user","image","username","createdAt","e","target","value"],"mappings":"ykBAAA,OACEA,MADF,CAEEC,GAFF,CAGEC,MAHF,CAIEC,IAJF,CAKEC,KALF,CAMEC,SANF,CAOEC,KAPF,CAQEC,SARF,CASEC,YATF,CAUEC,WAVF,CAWEC,WAXF,CAYEC,YAZF,CAaEC,IAbF,KAcO,kBAdP,CAeA,OAASC,WAAT,KAA4B,sBAA5B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,OAAT,KAAwB,iBAAxB,C,wFAEA,cAAe,SAASC,CAAAA,gBAAT,MAAwD,IAA5BC,CAAAA,OAA4B,MAA5BA,OAA4B,CAAnBC,MAAmB,MAAnBA,MAAmB,CAAXC,OAAW,MAAXA,OAAW,eAC7CL,QAAQ,CAACG,OAAO,CAACG,IAAT,CADqC,wCAC9DA,IAD8D,eACxDC,OADwD,uBAGtDC,CAAAA,iBAHsD,6JAGrE,wIACM,CAACF,IAAD,EAAS,CAACA,IAAI,CAACG,IAAL,EADhB,wFAEQX,CAAAA,WAAW,CAACK,OAAO,CAACO,EAAT,CAAaJ,IAAI,CAACG,IAAL,EAAb,CAFnB,QAGEJ,OAAO,GAHT,sDAHqE,oDASrE,mBACE,MAAC,KAAD,EAAO,MAAM,CAAED,MAAf,CAAuB,OAAO,CAAEC,OAAhC,CAAyC,UAAU,KAAnD,wBACE,KAAC,YAAD,IADF,cAGE,MAAC,YAAD,EAAc,EAAE,CAAC,iBAAjB,wBACE,KAAC,WAAD,EAAa,UAAU,CAAC,MAAxB,CAA+B,EAAE,CAAE,CAAnC,CAAsC,EAAE,CAAE,CAA1C,0BADF,cAIE,KAAC,SAAD,wBACE,KAAC,IAAD,EACE,UAAU,CAAC,QADb,CAEE,EAAE,CAAC,GAFL,CAGE,EAAE,CAAC,GAHL,CAIE,OAAO,CAAC,eAJV,CAKE,SAAS,CAAE,SALb,CAME,EAAE,CAAE,CANN,uBAQE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,wBACE,KAAC,MAAD,EAAQ,CAAC,CAAC,MAAV,CAAiB,CAAC,CAAC,MAAnB,CAA0B,EAAE,CAAC,GAA7B,CAAiC,GAAG,CAAEF,OAAO,CAACQ,IAAR,CAAaC,KAAnD,EADF,cAEE,MAAC,GAAD,EAAK,EAAE,CAAC,GAAR,wBACE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,wBACE,KAAC,IAAD,WAAOT,OAAO,CAACQ,IAAR,CAAaE,QAApB,EADF,cAEE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,KAAK,CAAC,kBAA5B,CAA+C,EAAE,CAAC,GAAlD,UACGZ,OAAO,CAACE,OAAO,CAACW,SAAT,CADV,EAFF,GADF,cAOE,KAAC,KAAD,EACE,KAAK,CAAER,IADT,CAEE,QAAQ,CAAE,kBAACS,CAAD,QAAOR,CAAAA,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,EAFZ,CAGE,EAAE,CAAC,gBAHL,CAIE,WAAW,CAAC,OAJd,CAKE,YAAY,CAAC,KALf,CAME,gBAAgB,CAAC,MANnB,EAPF,GAFF,GARF,EADF,EAJF,cAmCE,MAAC,WAAD,EAAa,EAAE,CAAC,gBAAhB,wBACE,KAAC,MAAD,EAAQ,OAAO,CAAEZ,OAAjB,CAA0B,EAAE,CAAE,CAA9B,CAAiC,OAAO,CAAC,MAAzC,CAAgD,QAAQ,CAAE,MAA1D,oBADF,cAIE,KAAC,SAAD,wBACE,KAAC,MAAD,EACE,WAAW,CAAC,OADd,CAEE,QAAQ,CAAE,MAFZ,CAGE,OAAO,CAAEG,iBAHX,kBADF,EAJF,GAnCF,GAHF,GADF,CAwDD","sourcesContent":["import {\n  Avatar,\n  Box,\n  Button,\n  Flex,\n  Input,\n  LightMode,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from \"@chakra-ui/react\";\nimport { editMessage } from \"api/handler/messages\";\nimport React, { useState } from \"react\";\nimport { getTime } from \"utils/dateUtils\";\n\nexport default function EditMessageModal({ message, isOpen, onClose }) {\n  const [text, setText] = useState(message.text);\n\n  async function handleEditMessage() {\n    if (!text || !text.trim()) return;\n    await editMessage(message.id, text.trim());\n    onClose();\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n\n      <ModalContent bg=\"brandGray.light\">\n        <ModalHeader fontWeight=\"bold\" mb={0} pb={0}>\n          Edit Message\n        </ModalHeader>\n        <ModalBody>\n          <Flex\n            alignItems=\"center\"\n            my=\"2\"\n            mr=\"1\"\n            justify=\"space-between\"\n            boxShadow={\"dark-lg\"}\n            py={2}\n          >\n            <Flex alignItems=\"center\">\n              <Avatar h=\"40px\" w=\"40px\" ml=\"4\" src={message.user.image} />\n              <Box ml=\"3\">\n                <Flex alignItems=\"center\">\n                  <Text>{message.user.username}</Text>\n                  <Text fontSize=\"12px\" color=\"brandGray.accent\" ml=\"3\">\n                    {getTime(message.createdAt)}\n                  </Text>\n                </Flex>\n                <Input\n                  value={text}\n                  onChange={(e) => setText(e.target.value)}\n                  bg=\"brandGray.dark\"\n                  borderColor=\"black\"\n                  borderRadius=\"3px\"\n                  focusBorderColor=\"none\"\n                />\n              </Box>\n            </Flex>\n          </Flex>\n        </ModalBody>\n\n        <ModalFooter bg=\"brandGray.dark\">\n          <Button onClick={onClose} mr={6} variant=\"link\" fontSize={\"14px\"}>\n            Cancel\n          </Button>\n          <LightMode>\n            <Button\n              colorScheme=\"green\"\n              fontSize={\"14px\"}\n              onClick={handleEditMessage}\n            >\n              Save\n            </Button>\n          </LightMode>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}