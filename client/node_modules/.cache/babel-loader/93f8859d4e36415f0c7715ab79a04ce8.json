{"ast":null,"code":"import _objectSpread from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useEffect}from\"react\";import{useQueryClient}from\"react-query\";import{useHistory,useLocation}from\"react-router-dom\";import userStore from\"stores/userStore\";import{gKey}from\"utils/querykeys\";import getSocket from\"../getSocket\";export default function useGuildSocket(){var history=useHistory();var cache=useQueryClient();var current=userStore(function(state){return state.current;});var location=useLocation();useEffect(function(){var socket=getSocket();socket.emit(\"joinUser\",current===null||current===void 0?void 0:current.id);socket.on(\"edit_guild\",function(editedGuild){cache.setQueryData(gKey,function(d){var index=d===null||d===void 0?void 0:d.findIndex(function(c){return c.id===editedGuild.id;});if(index!==-1){d[index]=_objectSpread(_objectSpread({},d[index]),{},{name:editedGuild.name,icon:editedGuild.icon});}return d;});});socket.on(\"delete_guild\",function(deleteId){cache.setQueryData(gKey,function(d){var isActive=location.pathname.includes(deleteId);if(isActive){history.replace(\"/channels/me\");}return d===null||d===void 0?void 0:d.filter(function(g){return g.id!==deleteId;});});});socket.on(\"remove_from_guild\",function(guildId){cache.setQueryData(gKey,function(d){var isActive=location.pathname.includes(guildId);if(isActive){history.replace(\"/channels/me\");}return d.filter(function(g){return g.id!==guildId;});});});socket.on(\"new_notification\",function(id){if(!location.pathname.includes(id)){cache.setQueryData(gKey,function(d){var index=d===null||d===void 0?void 0:d.findIndex(function(c){return c.id===id;});if(index!==-1){d[index]=_objectSpread(_objectSpread({},d[index]),{},{hasNotification:true});}return d;});}});return function(){socket.emit(\"leaveRoom\",current===null||current===void 0?void 0:current.id);socket.disconnect();};},[current,cache,history,location]);}","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/api/ws/useGuildSocket.js"],"names":["useEffect","useQueryClient","useHistory","useLocation","userStore","gKey","getSocket","useGuildSocket","history","cache","current","state","location","socket","emit","id","on","editedGuild","setQueryData","d","index","findIndex","c","name","icon","deleteId","isActive","pathname","includes","replace","filter","g","guildId","hasNotification","disconnect"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport { gKey } from \"utils/querykeys\";\nimport getSocket from \"../getSocket\";\n\nexport default function useGuildSocket() {\n  const history = useHistory();\n  const cache = useQueryClient();\n  const current = userStore((state) => state.current);\n  const location = useLocation();\n\n  useEffect(() => {\n    const socket = getSocket();\n    socket.emit(\"joinUser\", current?.id);\n\n    socket.on(\"edit_guild\", (editedGuild) => {\n      cache.setQueryData(gKey, (d) => {\n        const index = d?.findIndex((c) => c.id === editedGuild.id);\n        if (index !== -1) {\n          d[index] = {\n            ...d[index],\n            name: editedGuild.name,\n            icon: editedGuild.icon,\n          };\n        }\n        return d;\n      });\n    });\n\n    socket.on(\"delete_guild\", (deleteId) => {\n      cache.setQueryData(gKey, (d) => {\n        const isActive = location.pathname.includes(deleteId);\n        if (isActive) {\n          history.replace(\"/channels/me\");\n        }\n        return d?.filter((g) => g.id !== deleteId);\n      });\n    });\n\n    socket.on(\"remove_from_guild\", (guildId) => {\n      cache.setQueryData(gKey, (d) => {\n        const isActive = location.pathname.includes(guildId);\n        if (isActive) {\n          history.replace(\"/channels/me\");\n        }\n        return d.filter((g) => g.id !== guildId);\n      });\n    });\n\n    socket.on(\"new_notification\", (id) => {\n      if (!location.pathname.includes(id)) {\n        cache.setQueryData(gKey, (d) => {\n          const index = d?.findIndex((c) => c.id === id);\n          if (index !== -1) {\n            d[index] = { ...d[index], hasNotification: true };\n          }\n          return d;\n        });\n      }\n    });\n\n    return () => {\n      socket.emit(\"leaveRoom\", current?.id);\n      socket.disconnect();\n    };\n  }, [current, cache, history, location]);\n}\n"]},"metadata":{},"sourceType":"module"}