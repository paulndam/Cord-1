{"ast":null,"code":"import _regeneratorRuntime from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{Button,Divider,Modal,ModalBody,ModalCloseButton,ModalContent,ModalFooter,ModalHeader,ModalOverlay,Text}from\"@chakra-ui/react\";import{changeGuildMemberSettings,getGuildMemberSettings}from\"api/handler/guilds\";import{Form,Formik}from\"formik\";import React from\"react\";import{TwitterPicker}from\"react-color\";import{useQuery}from\"react-query\";import userStore from\"stores/userStore\";import toErrorMap from\"utils/toErrorMap\";import{MemberSchema}from\"validation/member.schema\";import InputField from\"components/shared/InputField\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function EditMemberModal(_ref){var guildId=_ref.guildId,isOpen=_ref.isOpen,onClose=_ref.onClose;var current=userStore(function(state){return state.current;});var _useQuery=useQuery(\"settings-\".concat(guildId),function(){return getGuildMemberSettings(guildId).then(function(res){return res.data;});}),data=_useQuery.data;function handleEditMemberAppearance(_x,_x2){return _handleEditMemberAppearance.apply(this,arguments);}function _handleEditMemberAppearance(){_handleEditMemberAppearance=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref2){var setErrors,setFieldValue,_yield$changeGuildMem,_data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setErrors=_ref2.setErrors,setFieldValue=_ref2.setFieldValue;_context.prev=1;if(values.color===\"#fff\"){setFieldValue(\"color\",null);}_context.next=5;return changeGuildMemberSettings(guildId,values);case 5:_yield$changeGuildMem=_context.sent;_data=_yield$changeGuildMem.data;if(_data){onClose();}_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);setErrors(toErrorMap(_context.t0));case 13:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));return _handleEditMemberAppearance.apply(this,arguments);}if(!data)return null;return/*#__PURE__*/_jsxs(Modal,{isOpen:isOpen,onClose:onClose,isCentered:true,children:[/*#__PURE__*/_jsx(ModalOverlay,{}),/*#__PURE__*/_jsx(ModalContent,{bg:\"brandGray.light\",children:/*#__PURE__*/_jsx(Formik,{initialValues:{color:data.color,nickname:data.nickname},validationSchema:MemberSchema,onSubmit:handleEditMemberAppearance,children:function children(_ref3){var _values$color,_values$nickname;var isSubmitting=_ref3.isSubmitting,setFieldValue=_ref3.setFieldValue,values=_ref3.values;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(ModalHeader,{fontWeight:\"bold\",pb:0,children:\"Change Appearance\"}),/*#__PURE__*/_jsx(ModalCloseButton,{}),/*#__PURE__*/_jsxs(ModalBody,{children:[/*#__PURE__*/_jsx(InputField,{color:(_values$color=values.color)!==null&&_values$color!==void 0?_values$color:undefined,label:\"nickname\",name:\"nickname\",value:(_values$nickname=values.nickname)!==null&&_values$nickname!==void 0?_values$nickname:current.username}),/*#__PURE__*/_jsx(Text,{mt:\"2\",ml:\"1\",color:\"brandGray.accent\",_hover:{cursor:\"pointer\",color:\"highlight.standard\"},fontSize:\"14px\",onClick:function onClick(){return setFieldValue(\"nickname\",null);},children:\"Reset Nickname\"}),/*#__PURE__*/_jsx(Divider,{my:\"4\"}),/*#__PURE__*/_jsx(TwitterPicker,{color:values.color||\"#fff\",onChangeComplete:function onChangeComplete(color){if(color)setFieldValue(\"color\",color.hex);},className:\"picker\"}),/*#__PURE__*/_jsx(Text,{mt:\"2\",ml:\"1\",color:\"brandGray.accent\",_hover:{cursor:\"pointer\",color:\"highlight.standard\"},fontSize:\"14px\",onClick:function onClick(){return setFieldValue(\"color\",\"#fff\");},children:\"Reset Color\"})]}),/*#__PURE__*/_jsxs(ModalFooter,{bg:\"brandGray.dark\",children:[/*#__PURE__*/_jsx(Button,{onClick:onClose,mr:6,variant:\"link\",fontSize:\"14px\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{background:\"highlight.standard\",color:\"white\",type:\"submit\",_hover:{bg:\"highlight.hover\"},_active:{bg:\"highlight.active\"},_focus:{boxShadow:\"none\"},isLoading:isSubmitting,fontSize:\"14px\",children:\"Save\"})]})]});}})})]});}","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/modals/EditMemberModal.js"],"names":["Button","Divider","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Text","changeGuildMemberSettings","getGuildMemberSettings","Form","Formik","React","TwitterPicker","useQuery","userStore","toErrorMap","MemberSchema","InputField","EditMemberModal","guildId","isOpen","onClose","current","state","then","res","data","handleEditMemberAppearance","values","setErrors","setFieldValue","color","nickname","isSubmitting","undefined","username","cursor","hex","bg","boxShadow"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Divider,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from \"@chakra-ui/react\";\nimport {\n  changeGuildMemberSettings,\n  getGuildMemberSettings,\n} from \"api/handler/guilds\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { TwitterPicker } from \"react-color\";\nimport { useQuery } from \"react-query\";\nimport userStore from \"stores/userStore\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport { MemberSchema } from \"validation/member.schema\";\nimport InputField from \"components/shared/InputField\";\n\nexport default function EditMemberModal({ guildId, isOpen, onClose }) {\n  const current = userStore((state) => state.current);\n  const { data } = useQuery(`settings-${guildId}`, () =>\n    getGuildMemberSettings(guildId).then((res) => res.data)\n  );\n\n  async function handleEditMemberAppearance(\n    values,\n    { setErrors, setFieldValue }\n  ) {\n    try {\n      if (values.color === \"#fff\") {\n        setFieldValue(\"color\", null);\n      }\n      const { data } = await changeGuildMemberSettings(guildId, values);\n      if (data) {\n        onClose();\n      }\n    } catch (error) {\n      setErrors(toErrorMap(error));\n    }\n  }\n\n  if (!data) return null;\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent bg=\"brandGray.light\">\n        <Formik\n          initialValues={{\n            color: data.color,\n            nickname: data.nickname,\n          }}\n          validationSchema={MemberSchema}\n          onSubmit={handleEditMemberAppearance}\n        >\n          {({ isSubmitting, setFieldValue, values }) => (\n            <Form>\n              <ModalHeader fontWeight=\"bold\" pb={0}>\n                Change Appearance\n              </ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <InputField\n                  color={values.color ?? undefined}\n                  label=\"nickname\"\n                  name=\"nickname\"\n                  value={values.nickname ?? current.username}\n                />\n                <Text\n                  mt={\"2\"}\n                  ml={\"1\"}\n                  color={\"brandGray.accent\"}\n                  _hover={{\n                    cursor: \"pointer\",\n                    color: \"highlight.standard\",\n                  }}\n                  fontSize={\"14px\"}\n                  onClick={() => setFieldValue(\"nickname\", null)}\n                >\n                  Reset Nickname\n                </Text>\n\n                <Divider my={\"4\"} />\n\n                <TwitterPicker\n                  color={values.color || \"#fff\"}\n                  onChangeComplete={(color) => {\n                    if (color) setFieldValue(\"color\", color.hex);\n                  }}\n                  className={\"picker\"}\n                />\n\n                <Text\n                  mt={\"2\"}\n                  ml={\"1\"}\n                  color={\"brandGray.accent\"}\n                  _hover={{\n                    cursor: \"pointer\",\n                    color: \"highlight.standard\",\n                  }}\n                  fontSize={\"14px\"}\n                  onClick={() => setFieldValue(\"color\", \"#fff\")}\n                >\n                  Reset Color\n                </Text>\n              </ModalBody>\n\n              <ModalFooter bg=\"brandGray.dark\">\n                <Button\n                  onClick={onClose}\n                  mr={6}\n                  variant=\"link\"\n                  fontSize={\"14px\"}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  background=\"highlight.standard\"\n                  color=\"white\"\n                  type=\"submit\"\n                  _hover={{ bg: \"highlight.hover\" }}\n                  _active={{ bg: \"highlight.active\" }}\n                  _focus={{ boxShadow: \"none\" }}\n                  isLoading={isSubmitting}\n                  fontSize={\"14px\"}\n                >\n                  Save\n                </Button>\n              </ModalFooter>\n            </Form>\n          )}\n        </Formik>\n      </ModalContent>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}