{"ast":null,"code":"import{Box,GridItem,UnorderedList,useDisclosure}from\"@chakra-ui/react\";import{getUserGuilds}from\"api/handler/guilds\";import useGuildSocket from\"api/ws/useGuildSocket\";import GuildListItem from\"components/items/GuildListItem\";import AddGuildModal from\"components/modals/AddGuildModal\";import AddGuildIcon from\"components/sections/AddGuildIcon\";import HomeIcon from\"components/sections/HomeIcon\";import React from\"react\";import{useQuery}from\"react-query\";import{gKey}from\"utils/querykeys\";import guildScrollbarCss from\"./css/GuildScrollerCSS\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function GuildList(){var _useQuery=useQuery(gKey,function(){return getUserGuilds().then(function(res){return res.data;});}),data=_useQuery.data;var _useDisclosure=useDisclosure(),isOpen=_useDisclosure.isOpen,onOpen=_useDisclosure.onOpen,onClose=_useDisclosure.onClose;useGuildSocket();return/*#__PURE__*/_jsxs(GridItem,{gridColumn:1,gridRow:\"1 / 4\",bg:\"brandGray.darker\",overflowY:\"auto\",css:guildScrollbarCss,zIndex:2,children:[/*#__PURE__*/_jsx(HomeIcon,{}),/*#__PURE__*/_jsx(UnorderedList,{listStyleType:\"none\",ml:\"0\",children:data===null||data===void 0?void 0:data.map(function(guild){return/*#__PURE__*/_jsx(GuildListItem,{guild:guild},guild.id);})}),/*#__PURE__*/_jsx(AddGuildIcon,{onOpen:onOpen}),isOpen&&/*#__PURE__*/_jsx(AddGuildModal,{isOpen:isOpen,onClose:onClose}),/*#__PURE__*/_jsx(Box,{h:\"20px\"})]});}","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/layouts/guild/GuildList.js"],"names":["Box","GridItem","UnorderedList","useDisclosure","getUserGuilds","useGuildSocket","GuildListItem","AddGuildModal","AddGuildIcon","HomeIcon","React","useQuery","gKey","guildScrollbarCss","GuildList","then","res","data","isOpen","onOpen","onClose","map","guild","id"],"mappings":"AAAA,OAASA,GAAT,CAAcC,QAAd,CAAwBC,aAAxB,CAAuCC,aAAvC,KAA4D,kBAA5D,CACA,OAASC,aAAT,KAA8B,oBAA9B,CACA,MAAOC,CAAAA,cAAP,KAA2B,uBAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,gCAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,YAAP,KAAyB,kCAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,8BAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,IAAT,KAAqB,iBAArB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,wBAA9B,C,wFAEA,cAAe,SAASC,CAAAA,SAAT,EAAqB,eACjBH,QAAQ,CAACC,IAAD,CAAO,iBAC9BR,CAAAA,aAAa,GAAGW,IAAhB,CAAqB,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAb,EAArB,CAD8B,EAAP,CADS,CAC1BA,IAD0B,WAC1BA,IAD0B,oBAKEd,aAAa,EALf,CAK1Be,MAL0B,gBAK1BA,MAL0B,CAKlBC,MALkB,gBAKlBA,MALkB,CAKVC,OALU,gBAKVA,OALU,CAOlCf,cAAc,GAEd,mBACE,MAAC,QAAD,EACE,UAAU,CAAE,CADd,CAEE,OAAO,CAAE,OAFX,CAGE,EAAE,CAAC,kBAHL,CAIE,SAAS,CAAC,MAJZ,CAKE,GAAG,CAAEQ,iBALP,CAME,MAAM,CAAE,CANV,wBAQE,KAAC,QAAD,IARF,cASE,KAAC,aAAD,EAAe,aAAa,CAAC,MAA7B,CAAoC,EAAE,CAAC,GAAvC,UACGI,IADH,SACGA,IADH,iBACGA,IAAI,CAAEI,GAAN,CAAU,SAACC,KAAD,qBACT,KAAC,aAAD,EAA8B,KAAK,CAAEA,KAArC,EAAoBA,KAAK,CAACC,EAA1B,CADS,EAAV,CADH,EATF,cAcE,KAAC,YAAD,EAAc,MAAM,CAAEJ,MAAtB,EAdF,CAeGD,MAAM,eAAI,KAAC,aAAD,EAAe,MAAM,CAAEA,MAAvB,CAA+B,OAAO,CAAEE,OAAxC,EAfb,cAgBE,KAAC,GAAD,EAAK,CAAC,CAAC,MAAP,EAhBF,GADF,CAoBD","sourcesContent":["import { Box, GridItem, UnorderedList, useDisclosure } from \"@chakra-ui/react\";\nimport { getUserGuilds } from \"api/handler/guilds\";\nimport useGuildSocket from \"api/ws/useGuildSocket\";\nimport GuildListItem from \"components/items/GuildListItem\";\nimport AddGuildModal from \"components/modals/AddGuildModal\";\nimport AddGuildIcon from \"components/sections/AddGuildIcon\";\nimport HomeIcon from \"components/sections/HomeIcon\";\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { gKey } from \"utils/querykeys\";\nimport guildScrollbarCss from \"./css/GuildScrollerCSS\";\n\nexport default function GuildList() {\n  const { data } = useQuery(gKey, () =>\n    getUserGuilds().then((res) => res.data)\n  );\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  useGuildSocket();\n\n  return (\n    <GridItem\n      gridColumn={1}\n      gridRow={\"1 / 4\"}\n      bg=\"brandGray.darker\"\n      overflowY=\"auto\"\n      css={guildScrollbarCss}\n      zIndex={2}\n    >\n      <HomeIcon />\n      <UnorderedList listStyleType=\"none\" ml=\"0\">\n        {data?.map((guild) => (\n          <GuildListItem key={guild.id} guild={guild} />\n        ))}\n      </UnorderedList>\n      <AddGuildIcon onOpen={onOpen} />\n      {isOpen && <AddGuildModal isOpen={isOpen} onClose={onClose} />}\n      <Box h=\"20px\" />\n    </GridItem>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}