{"ast":null,"code":"\"use strict\";\n\nfunction e(e) {\n  return e && \"object\" == typeof e && \"default\" in e ? e.default : e;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nvar t = require(\"react\"),\n    n = require(\"downshift\"),\n    r = e(require(\"match-sorter\")),\n    a = e(require(\"react-highlight-words\")),\n    l = e(require(\"react-use/lib/useDeepCompareEffect\")),\n    o = require(\"@chakra-ui/form-control\"),\n    i = require(\"@chakra-ui/layout\"),\n    s = require(\"@chakra-ui/button\"),\n    u = require(\"@chakra-ui/input\"),\n    c = require(\"@chakra-ui/icons\"),\n    p = require(\"@chakra-ui/tag\");\n\nfunction g() {\n  return (g = Object.assign || function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n\n      for (var r in n) {\n        Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);\n      }\n    }\n\n    return e;\n  }).apply(this, arguments);\n}\n\nfunction m(e, t) {\n  return r(e, t, {\n    keys: [\"value\", \"label\"]\n  });\n}\n\nexports.CUIAutoComplete = function (e) {\n  var r = e.items,\n      b = e.optionFilterFunc,\n      h = void 0 === b ? m : b,\n      d = e.itemRenderer,\n      I = e.highlightItemBg,\n      f = void 0 === I ? \"gray.100\" : I,\n      y = e.placeholder,\n      x = e.label,\n      C = e.listStyleProps,\n      S = e.labelStyleProps,\n      P = e.inputStyleProps,\n      E = e.toggleButtonStyleProps,\n      v = e.tagStyleProps,\n      k = e.selectedIconProps,\n      O = e.listItemStyleProps,\n      w = e.onCreateItem,\n      j = e.icon,\n      B = function (e, t) {\n    if (null == e) return {};\n    var n,\n        r,\n        a = {},\n        l = Object.keys(e);\n\n    for (r = 0; r < l.length; r++) {\n      t.indexOf(n = l[r]) >= 0 || (a[n] = e[n]);\n    }\n\n    return a;\n  }(e, [\"items\", \"optionFilterFunc\", \"itemRenderer\", \"highlightItemBg\", \"placeholder\", \"label\", \"listStyleProps\", \"labelStyleProps\", \"inputStyleProps\", \"toggleButtonStyleProps\", \"tagStyleProps\", \"selectedIconProps\", \"listItemStyleProps\", \"onCreateItem\", \"icon\"]),\n      T = t.useState(!1),\n      q = T[0],\n      F = T[1],\n      L = t.useState(\"\"),\n      R = L[0],\n      V = L[1],\n      D = t.useState(r),\n      M = D[0],\n      W = D[1],\n      A = t.useRef(null),\n      H = n.useMultipleSelection(B),\n      K = H.getSelectedItemProps,\n      _ = H.getDropdownProps,\n      U = H.addSelectedItem,\n      z = H.removeSelectedItem,\n      G = H.selectedItems,\n      J = G.map(function (e) {\n    return e.value;\n  }),\n      N = n.useCombobox({\n    inputValue: R,\n    selectedItem: void 0,\n    items: M,\n    onInputValueChange: function onInputValueChange(e) {\n      var t = e.selectedItem,\n          n = h(r, e.inputValue || \"\");\n      q && n.length > 0 && F(!1), t || W(n);\n    },\n    stateReducer: function stateReducer(e, t) {\n      var r = t.changes;\n\n      switch (t.type) {\n        case n.useCombobox.stateChangeTypes.InputBlur:\n          return g({}, r, {\n            isOpen: !1\n          });\n\n        case n.useCombobox.stateChangeTypes.InputKeyDownEnter:\n        case n.useCombobox.stateChangeTypes.ItemClick:\n          return g({}, r, {\n            highlightedIndex: e.highlightedIndex,\n            inputValue: R,\n            isOpen: !0\n          });\n\n        case n.useCombobox.stateChangeTypes.FunctionSelectItem:\n          return g({}, r, {\n            inputValue: R\n          });\n\n        default:\n          return r;\n      }\n    },\n    onStateChange: function onStateChange(e) {\n      var t = e.inputValue,\n          a = e.selectedItem;\n\n      switch (e.type) {\n        case n.useCombobox.stateChangeTypes.InputChange:\n          V(t || \"\");\n          break;\n\n        case n.useCombobox.stateChangeTypes.InputKeyDownEnter:\n        case n.useCombobox.stateChangeTypes.ItemClick:\n          a && (J.includes(a.value) ? z(a) : w && q ? (w(a), F(!1), W(r), V(\"\")) : U(a), ae(null));\n      }\n    }\n  }),\n      Q = N.isOpen,\n      X = N.getToggleButtonProps,\n      Y = N.getLabelProps,\n      Z = N.getMenuProps,\n      $ = N.getInputProps,\n      ee = N.getComboboxProps,\n      te = N.highlightedIndex,\n      ne = N.getItemProps,\n      re = N.openMenu,\n      ae = N.selectItem,\n      le = N.setHighlightedIndex;\n\n  return t.useEffect(function () {\n    0 === M.length && (F(!0), W([{\n      label: \"\" + R,\n      value: R\n    }]), le(0));\n  }, [M, F, le, R]), l(function () {\n    W(r);\n  }, [r]), t.createElement(i.Stack, null, t.createElement(o.FormLabel, Object.assign({}, g({}, S, Y({}))), x), G && t.createElement(i.Stack, {\n    spacing: 2,\n    isInline: !0,\n    flexWrap: \"wrap\"\n  }, G.map(function (e, n) {\n    return t.createElement(p.Tag, Object.assign({\n      mb: 1\n    }, v, {\n      key: \"selected-item-\" + n\n    }, K({\n      selectedItem: e,\n      index: n\n    })), t.createElement(p.TagLabel, null, e.label), t.createElement(p.TagCloseButton, {\n      onClick: function onClick(t) {\n        t.stopPropagation(), z(e);\n      },\n      \"aria-label\": \"Remove menu selection badge\"\n    }));\n  })), t.createElement(i.Stack, Object.assign({\n    isInline: !0\n  }, ee()), t.createElement(u.Input, Object.assign({}, P, $(_({\n    placeholder: y,\n    onClick: Q ? function () {} : re,\n    onFocus: Q ? function () {} : re,\n    ref: A\n  })))), t.createElement(s.Button, Object.assign({}, E, X(), {\n    \"aria-label\": \"toggle menu\"\n  }), t.createElement(c.ArrowDownIcon, null))), t.createElement(i.Box, {\n    pb: 4,\n    mb: 4\n  }, t.createElement(i.List, Object.assign({\n    bg: \"white\",\n    borderRadius: \"4px\",\n    border: Q && \"1px solid rgba(0,0,0,0.1)\",\n    boxShadow: \"6px 5px 8px rgba(0,50,30,0.02)\"\n  }, C, Z()), Q && M.map(function (e, n) {\n    return t.createElement(i.ListItem, Object.assign({\n      px: 2,\n      py: 1,\n      borderBottom: \"1px solid rgba(0,0,0,0.01)\"\n    }, O, {\n      bg: te === n ? f : \"inherit\",\n      key: \"\" + e.value + n\n    }, ne({\n      item: e,\n      index: n\n    })), q ? t.createElement(i.Text, null, t.createElement(i.Box, {\n      as: \"span\"\n    }, \"Create\"), \" \", t.createElement(i.Box, {\n      as: \"span\",\n      bg: \"yellow.300\",\n      fontWeight: \"bold\"\n    }, '\"', e.label, '\"')) : t.createElement(i.Box, {\n      display: \"inline-flex\",\n      alignItems: \"center\"\n    }, J.includes(e.value) && t.createElement(i.ListIcon, Object.assign({\n      as: j || c.CheckCircleIcon,\n      color: \"green.500\",\n      role: \"img\",\n      display: \"inline\",\n      \"aria-label\": \"Selected\"\n    }, k)), d ? d(e) : t.createElement(a, {\n      autoEscape: !0,\n      searchWords: [R || \"\"],\n      textToHighlight: (r = e, r.label)\n    })));\n    var r;\n  }))));\n};","map":{"version":3,"sources":["../src/index.tsx"],"names":["defaultOptionFilterFunc","items","inputValue","matchSorter","keys","props","optionFilterFunc","itemRenderer","highlightItemBg","placeholder","label","listStyleProps","labelStyleProps","inputStyleProps","toggleButtonStyleProps","tagStyleProps","selectedIconProps","listItemStyleProps","onCreateItem","icon","downshiftProps","isCreating","setIsCreating","React","setInputValue","inputItems","setInputItems","disclosureRef","getSelectedItemProps","getDropdownProps","addSelectedItem","removeSelectedItem","selectedItems","useMultipleSelection","selectedItemValues","map","item","value","isOpen","getToggleButtonProps","getLabelProps","getMenuProps","getInputProps","getComboboxProps","highlightedIndex","getItemProps","openMenu","selectItem","setHighlightedIndex","useCombobox","selectedItem","undefined","onInputValueChange","filteredItems","length","stateReducer","state","actionAndChanges","changes","type","stateChangeTypes","InputBlur","InputKeyDownEnter","ItemClick","FunctionSelectItem","onStateChange","InputChange","includes","useDeepCompareEffect","selected","Stack","FormLabel","spacing","isInline","flexWrap","index","Tag","mb","key","TagLabel","TagCloseButton","onClick","e","stopPropagation","Input","onFocus","ref","Button","ArrowDownIcon","Box","pb","List","bg","borderRadius","border","boxShadow","ListItem","px","py","borderBottom","Text","as","fontWeight","display","alignItems","ListIcon","CheckCircleIcon","color","role","Highlighter","autoEscape","searchWords","textToHighlight"],"mappings":"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","sourcesContent":["/* eslint-disable prettier/prettier */\nimport * as React from 'react'\nimport {\n  useCombobox,\n  useMultipleSelection,\n  UseMultipleSelectionProps\n} from 'downshift'\nimport matchSorter from 'match-sorter'\nimport Highlighter from 'react-highlight-words'\nimport useDeepCompareEffect from 'react-use/lib/useDeepCompareEffect'\nimport { FormLabel, FormLabelProps } from '@chakra-ui/form-control'\nimport { Text, Stack, Box, BoxProps, List, ListItem, ListIcon } from '@chakra-ui/layout'\nimport { Button, ButtonProps } from '@chakra-ui/button'\nimport { Input, InputProps } from '@chakra-ui/input'\nimport { IconProps, CheckCircleIcon, ArrowDownIcon } from '@chakra-ui/icons'\nimport { Tag, TagCloseButton, TagLabel, TagProps } from '@chakra-ui/tag'\nimport { ComponentWithAs } from '@chakra-ui/react'\n\nexport interface Item {\n  label: string\n  value: string\n}\n\nexport interface CUIAutoCompleteProps<T extends Item>\n  extends UseMultipleSelectionProps<T> {\n  items: T[]\n  placeholder: string\n  label: string\n  highlightItemBg?: string\n  onCreateItem?: (item: T) => void\n  optionFilterFunc?: (items: T[], inputValue: string) => T[]\n  itemRenderer?: (item: T) => string | JSX.Element\n  labelStyleProps?: FormLabelProps\n  inputStyleProps?: InputProps\n  toggleButtonStyleProps?: ButtonProps\n  tagStyleProps?: TagProps\n  listStyleProps?: BoxProps\n  listItemStyleProps?: BoxProps\n  emptyState?: (inputValue: string) => React.ReactNode\n  selectedIconProps?: Omit<IconProps, 'name'> & {\n    icon: IconProps['name'] | React.ComponentType\n  }\n  icon?: ComponentWithAs<\"svg\", IconProps>;\n}\n\nfunction defaultOptionFilterFunc<T>(items: T[], inputValue: string) {\n  return matchSorter(items, inputValue, { keys: ['value', 'label'] })\n}\n\nexport const CUIAutoComplete = <T extends Item>(\n  props: CUIAutoCompleteProps<T>\n): React.ReactElement<CUIAutoCompleteProps<T>> => {\n  const {\n    items,\n    optionFilterFunc = defaultOptionFilterFunc,\n    itemRenderer,\n    highlightItemBg = 'gray.100',\n    placeholder,\n    label,\n    listStyleProps,\n    labelStyleProps,\n    inputStyleProps,\n    toggleButtonStyleProps,\n    tagStyleProps,\n    selectedIconProps,\n    listItemStyleProps,\n    onCreateItem,\n    icon,\n    ...downshiftProps\n  } = props\n\n  /* States */\n  const [isCreating, setIsCreating] = React.useState(false)\n  const [inputValue, setInputValue] = React.useState('')\n  const [inputItems, setInputItems] = React.useState<T[]>(items)\n\n  /* Refs */\n  const disclosureRef = React.useRef(null)\n\n  /* Downshift Props */\n  const {\n    getSelectedItemProps,\n    getDropdownProps,\n    addSelectedItem,\n    removeSelectedItem,\n    selectedItems\n  } = useMultipleSelection(downshiftProps)\n  const selectedItemValues = selectedItems.map((item) => item.value)\n\n  const {\n    isOpen,\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    highlightedIndex,\n    getItemProps,\n    openMenu,\n    selectItem,\n    setHighlightedIndex\n  } = useCombobox({\n    inputValue,\n    selectedItem: undefined,\n    items: inputItems,\n    onInputValueChange: ({ inputValue, selectedItem }) => {\n      const filteredItems = optionFilterFunc(items, inputValue || '')\n\n      if (isCreating && filteredItems.length > 0) {\n        setIsCreating(false)\n      }\n\n      if (!selectedItem) {\n        setInputItems(filteredItems)\n      }\n    },\n    stateReducer: (state, actionAndChanges) => {\n      const { changes, type } = actionAndChanges\n      switch (type) {\n        case useCombobox.stateChangeTypes.InputBlur:\n          return {\n            ...changes,\n            isOpen: false\n          }\n        case useCombobox.stateChangeTypes.InputKeyDownEnter:\n        case useCombobox.stateChangeTypes.ItemClick:\n          return {\n            ...changes,\n            highlightedIndex: state.highlightedIndex,\n            inputValue,\n            isOpen: true\n          }\n        case useCombobox.stateChangeTypes.FunctionSelectItem:\n          return {\n            ...changes,\n            inputValue\n          }\n        default:\n          return changes\n      }\n    },\n    // @ts-ignore\n    onStateChange: ({ inputValue, type, selectedItem }) => {\n      switch (type) {\n        case useCombobox.stateChangeTypes.InputChange:\n          setInputValue(inputValue || '')\n          break\n        case useCombobox.stateChangeTypes.InputKeyDownEnter:\n        case useCombobox.stateChangeTypes.ItemClick:\n          if (selectedItem) {\n            if (selectedItemValues.includes(selectedItem.value)) {\n              removeSelectedItem(selectedItem)\n            } else {\n              if (onCreateItem && isCreating) {\n                onCreateItem(selectedItem)\n                setIsCreating(false)\n                setInputItems(items)\n                setInputValue('')\n              } else {\n                addSelectedItem(selectedItem)\n              }\n            }\n\n            // @ts-ignore\n            selectItem(null)\n          }\n          break\n        default:\n          break\n      }\n    }\n  })\n\n  React.useEffect(() => {\n    if (inputItems.length === 0) {\n      setIsCreating(true)\n      // @ts-ignore\n      setInputItems([{ label: `${inputValue}`, value: inputValue }])\n      setHighlightedIndex(0)\n    }\n  }, [inputItems, setIsCreating, setHighlightedIndex, inputValue])\n\n  useDeepCompareEffect(() => {\n    setInputItems(items)\n  }, [items])\n\n  /* Default Items Renderer */\n  function defaultItemRenderer<T extends Item>(selected: T) {\n    return selected.label\n  }\n\n  return (\n    <Stack>\n      <FormLabel {...{...labelStyleProps, ...getLabelProps({})}}>{label}</FormLabel>\n\n      {/* ---------Stack with Selected Menu Tags above the Input Box--------- */}\n      {selectedItems && (\n        <Stack spacing={2} isInline flexWrap='wrap'>\n          {selectedItems.map((selectedItem, index) => (\n            <Tag\n              mb={1}\n              {...tagStyleProps}\n              key={`selected-item-${index}`}\n              {...getSelectedItemProps({ selectedItem, index })}\n            >\n              <TagLabel>{selectedItem.label}</TagLabel>\n              <TagCloseButton\n                onClick={(e) => {\n                  e.stopPropagation()\n                  removeSelectedItem(selectedItem)\n                }}\n                aria-label='Remove menu selection badge'\n              />\n            </Tag>\n          ))}\n        </Stack>\n      )}\n      {/* ---------Stack with Selected Menu Tags above the Input Box--------- */}\n\n      {/* -----------Section that renders the input element ----------------- */}\n      <Stack isInline {...getComboboxProps()}>\n        <Input\n          {...inputStyleProps}\n          {...getInputProps(\n            getDropdownProps({\n              placeholder,\n              onClick: isOpen ? () => { } : openMenu,\n              onFocus: isOpen ? () => { } : openMenu,\n              ref: disclosureRef\n            })\n          )}\n        />\n        <Button\n          {...toggleButtonStyleProps}\n          {...getToggleButtonProps()}\n          aria-label='toggle menu'\n        >\n          <ArrowDownIcon />\n        </Button>\n      </Stack>\n      {/* -----------Section that renders the input element ----------------- */}\n\n      {/* -----------Section that renders the Menu Lists Component ----------------- */}\n      <Box pb={4} mb={4}>\n        <List\n          bg='white'\n          borderRadius='4px'\n          border={isOpen && '1px solid rgba(0,0,0,0.1)'}\n          boxShadow='6px 5px 8px rgba(0,50,30,0.02)'\n          {...listStyleProps}\n          {...getMenuProps()}\n        >\n          {isOpen &&\n            inputItems.map((item, index) => (\n              <ListItem\n                px={2}\n                py={1}\n                borderBottom='1px solid rgba(0,0,0,0.01)'\n                {...listItemStyleProps}\n                bg={highlightedIndex === index ? highlightItemBg : 'inherit'}\n                key={`${item.value}${index}`}\n                {...getItemProps({ item, index })}\n              >\n                {isCreating ? (\n                  <Text>\n                    <Box as='span'>Create</Box>{' '}\n                    <Box as='span' bg='yellow.300' fontWeight='bold'>\n                      \"{item.label}\"\n                    </Box>\n                  </Text>\n                ) : (\n                    <Box display='inline-flex' alignItems='center'>\n                      {selectedItemValues.includes(item.value) && (\n                        <ListIcon\n                          as={icon || CheckCircleIcon}\n                          color='green.500'\n                          role='img'\n                          display='inline'\n                          aria-label='Selected'\n                          {...selectedIconProps}\n                        />\n                      )}\n\n                      {itemRenderer ? (\n                        itemRenderer(item)\n                      ) : (\n                          <Highlighter\n                            autoEscape\n                            searchWords={[inputValue || '']}\n                            textToHighlight={defaultItemRenderer(item)}\n                          />\n                        )}\n                    </Box>\n                  )}\n              </ListItem>\n            ))}\n        </List>\n      </Box>\n      {/* ----------- End Section that renders the Menu Lists Component ----------------- */}\n    </Stack>\n  )\n}\n"]},"metadata":{},"sourceType":"script"}