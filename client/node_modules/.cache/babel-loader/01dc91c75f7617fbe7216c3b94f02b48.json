{"ast":null,"code":"import _regeneratorRuntime from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{Box,Button,Flex,Heading,Image,Link,Text}from\"@chakra-ui/react\";import{login}from\"api/handler/auth\";import{Form,Formik}from\"formik\";import React from\"react\";import{Link as RLink,useHistory}from\"react-router-dom\";import userStore from\"stores/userStore\";import toErrorMap from\"utils/toErrorMap\";import InputField from\"components/shared/InputField\";import{LoginSchema}from\"validation/auth.schema\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Login(){var history=useHistory();var setUser=userStore(function(state){return state.setUser;});var handleLogIn=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref){var setErrors,_yield$login,data,_error$response,_error$response2;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setErrors=_ref.setErrors;_context.prev=1;_context.next=4;return login(values);case 4:_yield$login=_context.sent;data=_yield$login.data;if(data){setUser(data);history.push(\"/channels/me\");}_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);if((_context.t0===null||_context.t0===void 0?void 0:(_error$response=_context.t0.response)===null||_error$response===void 0?void 0:_error$response.status)===401){setErrors({password:\"Invalid email or password ðŸ˜¢\"});}else if((_context.t0===null||_context.t0===void 0?void 0:(_error$response2=_context.t0.response)===null||_error$response2===void 0?void 0:_error$response2.status)===404){setErrors({email:\"No user found with this email ðŸ˜Ÿ \"});}else{console.log(_context.t0);setErrors(toErrorMap(_context.t0));}case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function handleLogIn(_x,_x2){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Flex,{minHeight:\"100vh\",width:\"full\",align:\"center\",justifyContent:\"center\",children:/*#__PURE__*/_jsxs(Box,{px:4,width:\"full\",maxWidth:\"500px\",textAlign:\"center\",children:[/*#__PURE__*/_jsx(Flex,{mb:\"4\",justify:\"center\",children:/*#__PURE__*/_jsx(Image,{src:\"/discord-logo.png\",w:\"80px\"})}),/*#__PURE__*/_jsxs(Box,{p:4,borderRadius:4,background:\"brandGray.light\",children:[/*#__PURE__*/_jsx(Box,{textAlign:\"center\",children:/*#__PURE__*/_jsx(Heading,{fontSize:\"24px\",children:\"Welcome Back\"})}),/*#__PURE__*/_jsx(Box,{my:4,textAlign:\"left\",children:/*#__PURE__*/_jsx(Formik,{initialValues:{email:\"\",password:\"\"},validationSchema:LoginSchema,onSubmit:handleLogIn,children:function children(_ref3){var isSubmitting=_ref3.isSubmitting;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(InputField,{label:\"Email\",name:\"email\",autoComplete:\"email\",type:\"email\"}),/*#__PURE__*/_jsx(InputField,{label:\"password\",name:\"password\",autoComplete:\"password\",type:\"password\"}),/*#__PURE__*/_jsx(Box,{mt:4,children:/*#__PURE__*/_jsx(Link,{as:RLink,to:\"/forgot-password\",textColor:\"highlight.standard\",children:\"Forgot Password?\"})}),/*#__PURE__*/_jsx(Button,{background:\"highlight.standard\",color:\"white\",width:\"full\",mt:4,type:\"submit\",isLoading:isSubmitting,_hover:{bg:\"highlight.hover\"},_active:{bg:\"highlight.active\"},_focus:{boxShadow:\"none\"},children:\"Login\"}),/*#__PURE__*/_jsxs(Text,{mt:\"4\",children:[\"Don't have an account yet?\",\" \",/*#__PURE__*/_jsx(Link,{as:RLink,to:\"/register\",textColor:\"highlight.standard\",children:\"Sign Up\"})]})]});}})})]})]})});}","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/pages/Login.js"],"names":["Box","Button","Flex","Heading","Image","Link","Text","login","Form","Formik","React","RLink","useHistory","userStore","toErrorMap","InputField","LoginSchema","Login","history","setUser","state","handleLogIn","values","setErrors","data","push","response","status","password","email","console","log","isSubmitting","bg","boxShadow"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Button,\n  Flex,\n  Heading,\n  Image,\n  Link,\n  Text,\n} from \"@chakra-ui/react\";\nimport { login } from \"api/handler/auth\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { Link as RLink, useHistory } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport InputField from \"components/shared/InputField\";\nimport { LoginSchema } from \"validation/auth.schema\";\n\nexport default function Login() {\n  const history = useHistory();\n  const setUser = userStore((state) => state.setUser);\n\n  const handleLogIn = async (values, { setErrors }) => {\n    try {\n      const { data } = await login(values);\n      if (data) {\n        setUser(data);\n        history.push(\"/channels/me\");\n      }\n    } catch (error) {\n      if (error?.response?.status === 401) {\n        setErrors({ password: \"Invalid email or password ðŸ˜¢\" });\n      } else if (error?.response?.status === 404) {\n        setErrors({ email: \"No user found with this email ðŸ˜Ÿ \" });\n      } else {\n        console.log(error);\n        setErrors(toErrorMap(error));\n      }\n    }\n  };\n\n  return (\n    <Flex minHeight=\"100vh\" width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box px={4} width=\"full\" maxWidth=\"500px\" textAlign=\"center\">\n        <Flex mb=\"4\" justify=\"center\">\n          <Image src=\"/discord-logo.png\" w=\"80px\" />\n        </Flex>\n        <Box p={4} borderRadius={4} background=\"brandGray.light\">\n          <Box textAlign=\"center\">\n            <Heading fontSize=\"24px\">Welcome Back</Heading>\n          </Box>\n          <Box my={4} textAlign=\"left\">\n            <Formik\n              initialValues={{ email: \"\", password: \"\" }}\n              validationSchema={LoginSchema}\n              onSubmit={handleLogIn}\n            >\n              {({ isSubmitting }) => (\n                <Form>\n                  <InputField\n                    label=\"Email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    type=\"email\"\n                  />\n                  <InputField\n                    label=\"password\"\n                    name=\"password\"\n                    autoComplete=\"password\"\n                    type=\"password\"\n                  />\n\n                  <Box mt={4}>\n                    <Link\n                      as={RLink}\n                      to=\"/forgot-password\"\n                      textColor=\"highlight.standard\"\n                    >\n                      Forgot Password?\n                    </Link>\n                  </Box>\n\n                  <Button\n                    background=\"highlight.standard\"\n                    color=\"white\"\n                    width=\"full\"\n                    mt={4}\n                    type=\"submit\"\n                    isLoading={isSubmitting}\n                    _hover={{ bg: \"highlight.hover\" }}\n                    _active={{ bg: \"highlight.active\" }}\n                    _focus={{ boxShadow: \"none\" }}\n                  >\n                    Login\n                  </Button>\n                  <Text mt=\"4\">\n                    Don't have an account yet?{\" \"}\n                    <Link\n                      as={RLink}\n                      to=\"/register\"\n                      textColor=\"highlight.standard\"\n                    >\n                      Sign Up\n                    </Link>\n                  </Text>\n                </Form>\n              )}\n            </Formik>\n          </Box>\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}