{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport { gKey } from \"utils/querykeys\";\nimport getSocket from \"../getSocket\";\nexport default function useGuildSocket() {\n  _s();\n\n  const history = useHistory();\n  const cache = useQueryClient();\n  const current = userStore(state => state.current);\n  const location = useLocation();\n  useEffect(() => {\n    const socket = getSocket();\n    socket.emit(\"joinUser\", current === null || current === void 0 ? void 0 : current.id);\n    socket.on(\"edit_guild\", editedGuild => {\n      cache.setQueryData(gKey, d => {\n        const index = d === null || d === void 0 ? void 0 : d.findIndex(c => c.id === editedGuild.id);\n\n        if (index !== -1) {\n          d[index] = { ...d[index],\n            name: editedGuild.name,\n            icon: editedGuild.icon\n          };\n        }\n\n        return d;\n      });\n    });\n    socket.on(\"delete_guild\", deleteId => {\n      cache.setQueryData(gKey, d => {\n        const isActive = location.pathname.includes(deleteId);\n\n        if (isActive) {\n          history.replace(\"/channels/me\");\n        }\n\n        return d === null || d === void 0 ? void 0 : d.filter(g => g.id !== deleteId);\n      });\n    });\n    socket.on(\"remove_from_guild\", guildId => {\n      cache.setQueryData(gKey, d => {\n        const isActive = location.pathname.includes(guildId);\n\n        if (isActive) {\n          history.replace(\"/channels/me\");\n        }\n\n        return d.filter(g => g.id !== guildId);\n      });\n    });\n    socket.on(\"new_notification\", id => {\n      if (!location.pathname.includes(id)) {\n        cache.setQueryData(gKey, d => {\n          const index = d === null || d === void 0 ? void 0 : d.findIndex(c => c.id === id);\n\n          if (index !== -1) {\n            d[index] = { ...d[index],\n              hasNotification: true\n            };\n          }\n\n          return d;\n        });\n      }\n    });\n    return () => {\n      socket.emit(\"leaveRoom\", current === null || current === void 0 ? void 0 : current.id);\n      socket.disconnect();\n    };\n  }, [current, cache, history, location]);\n}\n\n_s(useGuildSocket, \"cehs3udhVRAyd8uM/J5UiePZzR4=\", false, function () {\n  return [useHistory, useQueryClient, useLocation];\n});","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/api/ws/useGuildSocket.js"],"names":["useEffect","useQueryClient","useHistory","useLocation","userStore","gKey","getSocket","useGuildSocket","history","cache","current","state","location","socket","emit","id","on","editedGuild","setQueryData","d","index","findIndex","c","name","icon","deleteId","isActive","pathname","includes","replace","filter","g","guildId","hasNotification","disconnect"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport { gKey } from \"utils/querykeys\";\nimport getSocket from \"../getSocket\";\n\nexport default function useGuildSocket() {\n  const history = useHistory();\n  const cache = useQueryClient();\n  const current = userStore((state) => state.current);\n  const location = useLocation();\n\n  useEffect(() => {\n    const socket = getSocket();\n    socket.emit(\"joinUser\", current?.id);\n\n    socket.on(\"edit_guild\", (editedGuild) => {\n      cache.setQueryData(gKey, (d) => {\n        const index = d?.findIndex((c) => c.id === editedGuild.id);\n        if (index !== -1) {\n          d[index] = {\n            ...d[index],\n            name: editedGuild.name,\n            icon: editedGuild.icon,\n          };\n        }\n        return d;\n      });\n    });\n\n    socket.on(\"delete_guild\", (deleteId) => {\n      cache.setQueryData(gKey, (d) => {\n        const isActive = location.pathname.includes(deleteId);\n        if (isActive) {\n          history.replace(\"/channels/me\");\n        }\n        return d?.filter((g) => g.id !== deleteId);\n      });\n    });\n\n    socket.on(\"remove_from_guild\", (guildId) => {\n      cache.setQueryData(gKey, (d) => {\n        const isActive = location.pathname.includes(guildId);\n        if (isActive) {\n          history.replace(\"/channels/me\");\n        }\n        return d.filter((g) => g.id !== guildId);\n      });\n    });\n\n    socket.on(\"new_notification\", (id) => {\n      if (!location.pathname.includes(id)) {\n        cache.setQueryData(gKey, (d) => {\n          const index = d?.findIndex((c) => c.id === id);\n          if (index !== -1) {\n            d[index] = { ...d[index], hasNotification: true };\n          }\n          return d;\n        });\n      }\n    });\n\n    return () => {\n      socket.emit(\"leaveRoom\", current?.id);\n      socket.disconnect();\n    };\n  }, [current, cache, history, location]);\n}\n"]},"metadata":{},"sourceType":"module"}