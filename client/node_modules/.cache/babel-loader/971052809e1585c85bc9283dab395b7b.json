{"ast":null,"code":"import _objectSpread from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Avatar,Box,Button,Divider,Flex,FormControl,FormLabel,LightMode,Modal,ModalBody,ModalCloseButton,ModalContent,ModalFooter,ModalHeader,ModalOverlay,Switch,Text}from\"@chakra-ui/react\";import{deleteChannel,editChannel,getPrivateChannelMembers}from\"api/handler/channel\";import{getGuildMembers}from\"api/handler/guilds\";import{CUIAutoComplete}from\"chakra-ui-autocomplete\";import{Form,Formik}from\"formik\";import React,{useState}from\"react\";import{AiOutlineLock}from\"react-icons/ai\";import{FaRegTrashAlt}from\"react-icons/fa\";import{useQuery}from\"react-query\";import useGetCurrentChannel from\"hooks/useGetCurrentChannel\";import{cKey,mKey}from\"utils/querykeys\";import toErrorMap from\"utils/toErrorMap\";import{ChannelSchema}from\"validation/channel.schema\";import InputField from\"components/shared/InputField\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ChannelSettingsModal(_ref){var guildId=_ref.guildId,channelId=_ref.channelId,isOpen=_ref.isOpen,onClose=_ref.onClose;var key=mKey(guildId);var _useQuery=useQuery(key,function(){return getGuildMembers(guildId).then(function(res){return res.data;});}),data=_useQuery.data;var channel=useGetCurrentChannel(channelId,cKey(guildId));var members=[];var _useState=useState([]),_useState2=_slicedToArray(_useState,2),selectedItems=_useState2[0],setSelectedItems=_useState2[1];var _useState3=useState(\"START\"),_useState4=_slicedToArray(_useState3,2),screen=_useState4[0],setScreen=_useState4[1];var goBack=function goBack(){return setScreen(\"START\");};var submitClose=function submitClose(){setScreen(\"START\");onClose();};function handleEditChannel(_x,_x2){return _handleEditChannel.apply(this,arguments);}function _handleEditChannel(){_handleEditChannel=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values,_ref2){var setErrors,resetForm,ids,_yield$editChannel,_data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setErrors=_ref2.setErrors,resetForm=_ref2.resetForm;_context2.prev=1;ids=[];selectedItems.map(function(item){return ids.push(item.value);});_context2.next=6;return editChannel(guildId,channelId,_objectSpread(_objectSpread({},values),{},{members:ids}));case 6:_yield$editChannel=_context2.sent;_data=_yield$editChannel.data;if(_data){resetForm();onClose();}_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](1);setErrors(toErrorMap(_context2.t0));case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[1,11]]);}));return _handleEditChannel.apply(this,arguments);}data===null||data===void 0?void 0:data.map(function(m){return members.push({label:m.username,value:m.id,image:m.image});});// eslint-disable-next-line\nvar _useQuery2=useQuery(\"\".concat(channelId,\"-members\"),/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$getPrivateChan,data,current;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getPrivateChannelMembers(channelId);case 2:_yield$getPrivateChan=_context.sent;data=_yield$getPrivateChan.data;current=members.filter(function(m){return data.includes(m.value);});setSelectedItems(current);return _context.abrupt(\"return\",current);case 7:case\"end\":return _context.stop();}}},_callee);}))),current=_useQuery2.data;var handleCreateItem=function handleCreateItem(item){setSelectedItems(function(curr){return[].concat(_toConsumableArray(curr),[item]);});};var handleSelectedItemsChange=function handleSelectedItemsChange(selectedItems){if(selectedItems){setSelectedItems(selectedItems);}};var ListItem=function ListItem(selected){return/*#__PURE__*/_jsxs(Flex,{align:\"center\",children:[/*#__PURE__*/_jsx(Avatar,{mr:2,size:\"sm\",src:selected.image}),/*#__PURE__*/_jsx(Text,{textColor:\"#000\",children:selected.label})]});};if(!channel)return null;return/*#__PURE__*/_jsxs(Modal,{isOpen:isOpen,onClose:onClose,isCentered:true,children:[/*#__PURE__*/_jsx(ModalOverlay,{}),screen===\"START\"&&/*#__PURE__*/_jsx(ModalContent,{bg:\"brandGray.light\",children:/*#__PURE__*/_jsx(Formik,{initialValues:{name:channel.name,isPublic:channel.isPublic},validationSchema:ChannelSchema,onSubmit:handleEditChannel,children:function children(_ref4){var isSubmitting=_ref4.isSubmitting,setFieldValue=_ref4.setFieldValue,values=_ref4.values;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(ModalHeader,{textAlign:\"center\",fontWeight:\"bold\",children:\"Channel Settings\"}),/*#__PURE__*/_jsx(ModalCloseButton,{}),/*#__PURE__*/_jsxs(ModalBody,{children:[/*#__PURE__*/_jsx(InputField,{label:\"channel name\",name:\"name\"}),/*#__PURE__*/_jsxs(FormControl,{display:\"flex\",alignItems:\"center\",justifyContent:\"space-between\",mt:\"4\",children:[/*#__PURE__*/_jsx(FormLabel,{mb:\"0\",children:/*#__PURE__*/_jsxs(Flex,{align:\"center\",children:[/*#__PURE__*/_jsx(AiOutlineLock,{}),/*#__PURE__*/_jsx(Text,{ml:\"2\",children:\"Private Channel\"})]})}),/*#__PURE__*/_jsx(Switch,{defaultChecked:!values.isPublic,onChange:function onChange(e){setFieldValue(\"isPublic\",!e.target.checked);}})]}),/*#__PURE__*/_jsx(Text,{mt:\"4\",fontSize:\"14px\",textColor:\"brandGray.accent\",children:\"By making a channel private, only selected members will be able to view this channel\"}),!values.isPublic&&/*#__PURE__*/_jsx(Box,{mt:\"2\",pb:0,children:/*#__PURE__*/_jsx(CUIAutoComplete,{label:\"Who can access this channel\",placeholder:\"\",onCreateItem:handleCreateItem,items:members,selectedItems:selectedItems,itemRenderer:ListItem,onSelectedItemsChange:function onSelectedItemsChange(changes){return handleSelectedItemsChange(changes.selectedItems);}})}),/*#__PURE__*/_jsx(Divider,{my:\"2\"}),/*#__PURE__*/_jsx(LightMode,{children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return setScreen(\"CONFIRM\");},colorScheme:\"red\",variant:\"ghost\",fontSize:\"14px\",rightIcon:/*#__PURE__*/_jsx(FaRegTrashAlt,{}),children:\"Delete Channel\"})})]}),/*#__PURE__*/_jsxs(ModalFooter,{bg:\"brandGray.dark\",children:[/*#__PURE__*/_jsx(Button,{onClick:onClose,mr:6,variant:\"link\",fontSize:\"14px\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{background:\"highlight.standard\",color:\"white\",type:\"submit\",_hover:{bg:\"highlight.hover\"},_active:{bg:\"highlight.active\"},_focus:{boxShadow:\"none\"},isLoading:isSubmitting,fontSize:\"14px\",children:\"Save Changes\"})]})]});}})}),screen===\"CONFIRM\"&&/*#__PURE__*/_jsx(DeleteChannelModal,{goBack:goBack,submitClose:submitClose,name:channel.name,channelId:channel.id,guildId:guildId})]});}function DeleteChannelModal(_ref5){var goBack=_ref5.goBack,submitClose=_ref5.submitClose,name=_ref5.name,channelId=_ref5.channelId,guildId=_ref5.guildId;function handleDeleteChannel(){return _handleDeleteChannel.apply(this,arguments);}function _handleDeleteChannel(){_handleDeleteChannel=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:submitClose();_context3.next=3;return deleteChannel(guildId,channelId);case 3:case\"end\":return _context3.stop();}}},_callee3);}));return _handleDeleteChannel.apply(this,arguments);}return/*#__PURE__*/_jsxs(ModalContent,{bg:\"brandGray.light\",children:[/*#__PURE__*/_jsx(ModalHeader,{fontWeight:\"bold\",pb:\"0\",children:\"Delete Channel\"}),/*#__PURE__*/_jsx(ModalBody,{pb:3,children:/*#__PURE__*/_jsxs(Text,{children:[\"Are you sure you want to delete #\",name,\"? This cannot be undone.\"]})}),/*#__PURE__*/_jsxs(ModalFooter,{bg:\"brandGray.dark\",children:[/*#__PURE__*/_jsx(Button,{mr:6,variant:\"link\",onClick:goBack,fontSize:\"14px\",children:\"Cancel\"}),/*#__PURE__*/_jsx(LightMode,{children:/*#__PURE__*/_jsx(Button,{colorScheme:\"red\",fontSize:\"14px\",onClick:handleDeleteChannel,children:\"Delete Channel\"})})]})]});}","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/modals/ChannelSettingsModal.js"],"names":["Avatar","Box","Button","Divider","Flex","FormControl","FormLabel","LightMode","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Switch","Text","deleteChannel","editChannel","getPrivateChannelMembers","getGuildMembers","CUIAutoComplete","Form","Formik","React","useState","AiOutlineLock","FaRegTrashAlt","useQuery","useGetCurrentChannel","cKey","mKey","toErrorMap","ChannelSchema","InputField","ChannelSettingsModal","guildId","channelId","isOpen","onClose","key","then","res","data","channel","members","selectedItems","setSelectedItems","screen","setScreen","goBack","submitClose","handleEditChannel","values","setErrors","resetForm","ids","map","item","push","value","m","label","username","id","image","current","filter","includes","handleCreateItem","curr","handleSelectedItemsChange","ListItem","selected","name","isPublic","isSubmitting","setFieldValue","e","target","checked","changes","bg","boxShadow","DeleteChannelModal","handleDeleteChannel"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Flex,\n  FormControl,\n  FormLabel,\n  LightMode,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Switch,\n  Text,\n} from \"@chakra-ui/react\";\nimport {\n  deleteChannel,\n  editChannel,\n  getPrivateChannelMembers,\n} from \"api/handler/channel\";\nimport { getGuildMembers } from \"api/handler/guilds\";\nimport { CUIAutoComplete } from \"chakra-ui-autocomplete\";\nimport { Form, Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { AiOutlineLock } from \"react-icons/ai\";\nimport { FaRegTrashAlt } from \"react-icons/fa\";\nimport { useQuery } from \"react-query\";\nimport useGetCurrentChannel from \"hooks/useGetCurrentChannel\";\nimport { cKey, mKey } from \"utils/querykeys\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport { ChannelSchema } from \"validation/channel.schema\";\nimport InputField from \"components/shared/InputField\";\n\nexport default function ChannelSettingsModal({\n  guildId,\n  channelId,\n  isOpen,\n  onClose,\n}) {\n  const key = mKey(guildId);\n  const { data } = useQuery(key, () =>\n    getGuildMembers(guildId).then((res) => res.data)\n  );\n\n  const channel = useGetCurrentChannel(channelId, cKey(guildId));\n\n  const members = [];\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [screen, setScreen] = useState(\"START\");\n\n  const goBack = () => setScreen(\"START\");\n  const submitClose = () => {\n    setScreen(\"START\");\n    onClose();\n  };\n\n  async function handleEditChannel(values, { setErrors, resetForm }) {\n    try {\n      const ids = [];\n      selectedItems.map((item) => ids.push(item.value));\n      const { data } = await editChannel(guildId, channelId, {\n        ...values,\n        members: ids,\n      });\n      if (data) {\n        resetForm();\n        onClose();\n      }\n    } catch (error) {\n      setErrors(toErrorMap(error));\n    }\n  }\n\n  data?.map((m) =>\n    members.push({ label: m.username, value: m.id, image: m.image })\n  );\n\n  // eslint-disable-next-line\n  const { data: current } = useQuery(`${channelId}-members`, async () => {\n    const { data } = await getPrivateChannelMembers(channelId);\n    const current = members.filter((m) => data.includes(m.value));\n    setSelectedItems(current);\n    return current;\n  });\n\n  const handleCreateItem = (item) => {\n    setSelectedItems((curr) => [...curr, item]);\n  };\n\n  const handleSelectedItemsChange = (selectedItems) => {\n    if (selectedItems) {\n      setSelectedItems(selectedItems);\n    }\n  };\n\n  const ListItem = (selected) => {\n    return (\n      <Flex align=\"center\">\n        <Avatar mr={2} size=\"sm\" src={selected.image} />\n        <Text textColor={\"#000\"}>{selected.label}</Text>\n      </Flex>\n    );\n  };\n\n  if (!channel) return null;\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      {screen === \"START\" && (\n        <ModalContent bg=\"brandGray.light\">\n          <Formik\n            initialValues={{\n              name: channel.name,\n              isPublic: channel.isPublic,\n            }}\n            validationSchema={ChannelSchema}\n            onSubmit={handleEditChannel}\n          >\n            {({ isSubmitting, setFieldValue, values }) => (\n              <Form>\n                <ModalHeader textAlign=\"center\" fontWeight=\"bold\">\n                  Channel Settings\n                </ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                  <InputField label=\"channel name\" name=\"name\" />\n\n                  <FormControl\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"space-between\"\n                    mt=\"4\"\n                  >\n                    <FormLabel mb=\"0\">\n                      <Flex align=\"center\">\n                        <AiOutlineLock />\n                        <Text ml=\"2\">Private Channel</Text>\n                      </Flex>\n                    </FormLabel>\n                    <Switch\n                      defaultChecked={!values.isPublic}\n                      onChange={(e) => {\n                        setFieldValue(\"isPublic\", !e.target.checked);\n                      }}\n                    />\n                  </FormControl>\n                  <Text mt=\"4\" fontSize=\"14px\" textColor=\"brandGray.accent\">\n                    By making a channel private, only selected members will be\n                    able to view this channel\n                  </Text>\n                  {!values.isPublic && (\n                    <Box mt={\"2\"} pb={0}>\n                      <CUIAutoComplete\n                        label=\"Who can access this channel\"\n                        placeholder=\"\"\n                        onCreateItem={handleCreateItem}\n                        items={members}\n                        selectedItems={selectedItems}\n                        itemRenderer={ListItem}\n                        onSelectedItemsChange={(changes) =>\n                          handleSelectedItemsChange(changes.selectedItems)\n                        }\n                      />\n                    </Box>\n                  )}\n\n                  <Divider my={\"2\"} />\n\n                  <LightMode>\n                    <Button\n                      onClick={() => setScreen(\"CONFIRM\")}\n                      colorScheme={\"red\"}\n                      variant=\"ghost\"\n                      fontSize={\"14px\"}\n                      rightIcon={<FaRegTrashAlt />}\n                    >\n                      Delete Channel\n                    </Button>\n                  </LightMode>\n                </ModalBody>\n\n                <ModalFooter bg=\"brandGray.dark\">\n                  <Button\n                    onClick={onClose}\n                    mr={6}\n                    variant=\"link\"\n                    fontSize={\"14px\"}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    background=\"highlight.standard\"\n                    color=\"white\"\n                    type=\"submit\"\n                    _hover={{ bg: \"highlight.hover\" }}\n                    _active={{ bg: \"highlight.active\" }}\n                    _focus={{ boxShadow: \"none\" }}\n                    isLoading={isSubmitting}\n                    fontSize={\"14px\"}\n                  >\n                    Save Changes\n                  </Button>\n                </ModalFooter>\n              </Form>\n            )}\n          </Formik>\n        </ModalContent>\n      )}\n      {screen === \"CONFIRM\" && (\n        <DeleteChannelModal\n          goBack={goBack}\n          submitClose={submitClose}\n          name={channel.name}\n          channelId={channel.id}\n          guildId={guildId}\n        />\n      )}\n    </Modal>\n  );\n}\n\nfunction DeleteChannelModal({ goBack, submitClose, name, channelId, guildId }) {\n  async function handleDeleteChannel() {\n    submitClose();\n    await deleteChannel(guildId, channelId);\n  }\n\n  return (\n    <ModalContent bg=\"brandGray.light\">\n      <ModalHeader fontWeight=\"bold\" pb=\"0\">\n        Delete Channel\n      </ModalHeader>\n      <ModalBody pb={3}>\n        <Text>\n          Are you sure you want to delete #{name}? This cannot be undone.\n        </Text>\n      </ModalBody>\n\n      <ModalFooter bg=\"brandGray.dark\">\n        <Button mr={6} variant=\"link\" onClick={goBack} fontSize={\"14px\"}>\n          Cancel\n        </Button>\n        <LightMode>\n          <Button\n            colorScheme=\"red\"\n            fontSize={\"14px\"}\n            onClick={handleDeleteChannel}\n          >\n            Delete Channel\n          </Button>\n        </LightMode>\n      </ModalFooter>\n    </ModalContent>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}