{"ast":null,"code":"var _jsxFileName = \"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/pages/ForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Flex, Heading, Image, useToast } from \"@chakra-ui/react\";\nimport { forgotPassword } from \"api/handler/auth\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport InputField from \"components/shared/InputField\";\nimport { ForgotPasswordSchema } from \"validation/auth.schema\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForgotPassword() {\n  _s();\n\n  const history = useHistory();\n  const toast = useToast();\n\n  const handleSubmit = async (values, {\n    setErrors\n  }) => {\n    try {\n      const {\n        data\n      } = await forgotPassword(values.email);\n\n      if (data) {\n        toast({\n          title: \"Reset Password\",\n          description: \"If account with that email is in DataBase, they get the email\",\n          status: \"success\",\n          duration: 5000,\n          isClosable: true\n        });\n        history.push(\"/\");\n      }\n    } catch (error) {\n      setErrors(toErrorMap(error));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    minHeight: \"100vh\",\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      px: 4,\n      width: \"full\",\n      maxWidth: \"500px\",\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        mb: \"4\",\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/logo.png\",\n          w: \"80px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 4,\n        borderRadius: 4,\n        background: \"brandGray.light\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            fontSize: \"24px\",\n            children: \"Forgot Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          my: 4,\n          textAlign: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              email: \"\"\n            },\n            validationSchema: ForgotPasswordSchema,\n            onSubmit: handleSubmit,\n            children: ({\n              isSubmitting\n            }) => /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(InputField, {\n                label: \"Email\",\n                name: \"email\",\n                autoComplete: \"email\",\n                type: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                background: \"highlight.standard\",\n                color: \"white\",\n                width: \"full\",\n                mt: 4,\n                type: \"submit\",\n                isLoading: isSubmitting,\n                _hover: {\n                  bg: \"highlight.hover\"\n                },\n                _active: {\n                  bg: \"highlight.active\"\n                },\n                _focus: {\n                  boxShadow: \"none\"\n                },\n                fontSize: \"14px\",\n                children: \"Send Mail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgotPassword, \"c8S/89kr/CI4R58rkhj0z238hYk=\", false, function () {\n  return [useHistory, useToast];\n});\n\n_c = ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/pages/ForgotPassword.js"],"names":["Box","Button","Flex","Heading","Image","useToast","forgotPassword","Form","Formik","React","useHistory","toErrorMap","InputField","ForgotPasswordSchema","ForgotPassword","history","toast","handleSubmit","values","setErrors","data","email","title","description","status","duration","isClosable","push","error","isSubmitting","bg","boxShadow"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, Heading, Image, useToast } from \"@chakra-ui/react\";\nimport { forgotPassword } from \"api/handler/auth\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport InputField from \"components/shared/InputField\";\nimport { ForgotPasswordSchema } from \"validation/auth.schema\";\n\nexport default function ForgotPassword() {\n  const history = useHistory();\n  const toast = useToast();\n\n  const handleSubmit = async (values, { setErrors }) => {\n    try {\n      const { data } = await forgotPassword(values.email);\n      if (data) {\n        toast({\n          title: \"Reset Password\",\n          description:\n            \"If account with that email is in DataBase, they get the email\",\n          status: \"success\",\n          duration: 5000,\n          isClosable: true,\n        });\n\n        history.push(\"/\");\n      }\n    } catch (error) {\n      setErrors(toErrorMap(error));\n    }\n  };\n\n  return (\n    <Flex minHeight=\"100vh\" width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box px={4} width=\"full\" maxWidth=\"500px\" textAlign=\"center\">\n        <Flex mb=\"4\" justify=\"center\">\n          <Image src=\"/logo.png\" w=\"80px\" />\n        </Flex>\n        <Box p={4} borderRadius={4} background=\"brandGray.light\">\n          <Box textAlign=\"center\">\n            <Heading fontSize=\"24px\">Forgot Password</Heading>\n          </Box>\n          <Box my={4} textAlign=\"left\">\n            <Formik\n              initialValues={{ email: \"\" }}\n              validationSchema={ForgotPasswordSchema}\n              onSubmit={handleSubmit}\n            >\n              {({ isSubmitting }) => (\n                <Form>\n                  <InputField\n                    label=\"Email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    type=\"email\"\n                  />\n\n                  <Button\n                    background=\"highlight.standard\"\n                    color=\"white\"\n                    width=\"full\"\n                    mt={4}\n                    type=\"submit\"\n                    isLoading={isSubmitting}\n                    _hover={{ bg: \"highlight.hover\" }}\n                    _active={{ bg: \"highlight.active\" }}\n                    _focus={{ boxShadow: \"none\" }}\n                    fontSize={\"14px\"}\n                  >\n                    Send Mail\n                  </Button>\n                </Form>\n              )}\n            </Formik>\n          </Box>\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}