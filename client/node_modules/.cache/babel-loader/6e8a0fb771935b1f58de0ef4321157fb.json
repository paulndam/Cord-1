{"ast":null,"code":"import _regeneratorRuntime from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Avatar,Box,Button,Divider,Flex,Heading,LightMode,Spacer,Tooltip,useDisclosure,useToast}from\"@chakra-ui/react\";import{getAccount,updateAccount}from\"api/handler/account\";import{logout}from\"api/handler/auth\";import{Form,Formik}from\"formik\";import React,{useRef,useState}from\"react\";import{useQuery,useQueryClient}from\"react-query\";import{useHistory}from\"react-router-dom\";import userStore from\"stores/userStore\";import{aKey}from\"utils/querykeys\";import toErrorMap from\"utils/toErrorMap\";import ChangePasswordModal from\"components/modals/ChangePasswordModal\";import CropImageModal from\"components/modals/CropImageModal\";import InputField from\"components/shared/InputField\";import{UserSchema}from\"validation/auth.schema\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Account(){var _useQuery=useQuery(aKey,function(){return getAccount().then(function(res){return res.data;});}),user=_useQuery.data;var cache=useQueryClient();var logOutUser=userStore(function(state){return state.logout;});var setUser=userStore(function(state){return state.setUser;});var history=useHistory();var toast=useToast();var _useDisclosure=useDisclosure(),isOpen=_useDisclosure.isOpen,onOpen=_useDisclosure.onOpen,onClose=_useDisclosure.onClose;var _useDisclosure2=useDisclosure(),cropperIsOpen=_useDisclosure2.isOpen,cropperOnOpen=_useDisclosure2.onOpen,cropperOnClose=_useDisclosure2.onClose;var inputFile=useRef(null);var _useState=useState((user===null||user===void 0?void 0:user.image)||\"\"),_useState2=_slicedToArray(_useState,2),imageUrl=_useState2[0],setImageUrl=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),cropImage=_useState4[0],setCropImage=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),croppedImage=_useState6[0],setCroppedImage=_useState6[1];function handleLogout(){return _handleLogout.apply(this,arguments);}function _handleLogout(){_handleLogout=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$logout,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return logout();case 2:_yield$logout=_context.sent;data=_yield$logout.data;if(data){cache.clear();logOutUser();history.push(\"/\");}case 5:case\"end\":return _context.stop();}}},_callee);}));return _handleLogout.apply(this,arguments);}function handleUpdateAccount(_x,_x2){return _handleUpdateAccount.apply(this,arguments);}function _handleUpdateAccount(){_handleUpdateAccount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values,_ref){var setErrors,formData,_yield$updateAccount,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setErrors=_ref.setErrors;_context2.prev=1;formData=new FormData();formData.append(\"email\",values.email);formData.append(\"username\",values.username);formData.append(\"image\",croppedImage!==null&&croppedImage!==void 0?croppedImage:imageUrl);_context2.next=8;return updateAccount(formData);case 8:_yield$updateAccount=_context2.sent;data=_yield$updateAccount.data;if(data){setUser(data);toast({title:\"Account Updated ðŸ˜Ž \",status:\"success\",duration:4000,isClosable:true});}_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](1);setErrors(toErrorMap(_context2.t0));case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[1,13]]);}));return _handleUpdateAccount.apply(this,arguments);}function handleSelectImage(event){if(!event.currentTarget.files)return;setCropImage(URL.createObjectURL(event.currentTarget.files[0]));cropperOnOpen();}function applyCrop(file){setImageUrl(URL.createObjectURL(file));setCropImage(new File([file],\"avatar\"));cropperOnClose();}if(!user){return null;}return/*#__PURE__*/_jsxs(Flex,{minHeight:\"100vh\",width:\"full\",align:\"center\",justifyContent:\"center\",children:[/*#__PURE__*/_jsxs(Box,{px:4,width:\"full\",maxWidth:\"500px\",children:[/*#__PURE__*/_jsx(Flex,{mb:\"4\",justify:\"center\",children:/*#__PURE__*/_jsx(Heading,{fontSize:\"24px\",children:\"MY ACCOUNT\"})}),/*#__PURE__*/_jsxs(Box,{p:4,borderRadius:4,background:\"brandGray.light\",children:[/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{email:user.email,username:user.username,image:null},validationSchema:UserSchema,onSubmit:handleUpdateAccount,children:function children(_ref2){var isSubmitting=_ref2.isSubmitting,values=_ref2.values;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Flex,{mb:\"4\",justify:\"center\",children:[/*#__PURE__*/_jsx(Tooltip,{label:\"Change Avatar\",\"aria-label\":\"Change Avatar\",children:/*#__PURE__*/_jsx(Avatar,{size:\"xl\",name:user.username,src:imageUrl||user.image,_hover:{cursor:\"pointer\",opacity:0.5},onClick:function onClick(){return inputFile.current.click();}})}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"image\",accept:\"image/*\",ref:inputFile,hidden:true,onChange:handleSelectImage})]}),/*#__PURE__*/_jsxs(Box,{my:4,children:[/*#__PURE__*/_jsx(InputField,{value:values.email,type:\"email\",placeholder:\"Email\",label:\"Email\",name:\"email\",autoComplete:\"email\"}),/*#__PURE__*/_jsx(InputField,{value:values.username,placeholder:\"Username\",label:\"Username\",name:\"username\",autoComplete:\"username\"}),/*#__PURE__*/_jsxs(Flex,{my:8,align:\"end\",children:[/*#__PURE__*/_jsx(Spacer,{}),/*#__PURE__*/_jsx(Button,{mr:4,colorScheme:\"white\",variant:\"outline\",onClick:history.goBack,fontSize:\"14px\",children:\"Close\"}),/*#__PURE__*/_jsx(LightMode,{children:/*#__PURE__*/_jsx(Button,{type:\"submit\",colorScheme:\"green\",isLoading:isSubmitting,fontSize:\"14px\",children:\"Update\"})})]})]})]});}})}),/*#__PURE__*/_jsx(Divider,{my:\"4\"}),/*#__PURE__*/_jsx(Flex,{children:/*#__PURE__*/_jsx(Heading,{fontSize:\"18px\",children:\"PASSWORD AND AUTHENTICATION\"})}),/*#__PURE__*/_jsxs(Flex,{mt:\"4\",children:[/*#__PURE__*/_jsx(Button,{background:\"highlight.standard\",color:\"white\",type:\"submit\",_hover:{bg:\"highlight.hover\"},_active:{bg:\"highlight.active\"},_focus:{boxShadow:\"none\"},onClick:onOpen,fontSize:\"14px\",children:\"Change Password\"}),/*#__PURE__*/_jsx(Spacer,{}),/*#__PURE__*/_jsx(Button,{colorScheme:\"red\",variant:\"outline\",onClick:handleLogout,fontSize:\"14px\",children:\"Logout\"})]})]})]}),isOpen&&/*#__PURE__*/_jsx(ChangePasswordModal,{isOpen:isOpen,onClose:onClose}),cropperIsOpen&&/*#__PURE__*/_jsx(CropImageModal,{isOpen:cropperIsOpen,onClose:cropperOnClose,initialImage:cropImage,applyCrop:applyCrop})]});}","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/pages/Account.js"],"names":["Avatar","Box","Button","Divider","Flex","Heading","LightMode","Spacer","Tooltip","useDisclosure","useToast","getAccount","updateAccount","logout","Form","Formik","React","useRef","useState","useQuery","useQueryClient","useHistory","userStore","aKey","toErrorMap","ChangePasswordModal","CropImageModal","InputField","UserSchema","Account","then","res","data","user","cache","logOutUser","state","setUser","history","toast","isOpen","onOpen","onClose","cropperIsOpen","cropperOnOpen","cropperOnClose","inputFile","image","imageUrl","setImageUrl","cropImage","setCropImage","croppedImage","setCroppedImage","handleLogout","clear","push","handleUpdateAccount","values","setErrors","formData","FormData","append","email","username","title","status","duration","isClosable","handleSelectImage","event","currentTarget","files","URL","createObjectURL","applyCrop","file","File","isSubmitting","cursor","opacity","current","click","goBack","bg","boxShadow"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Flex,\n  Heading,\n  LightMode,\n  Spacer,\n  Tooltip,\n  useDisclosure,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { getAccount, updateAccount } from \"api/handler/account\";\nimport { logout } from \"api/handler/auth\";\nimport { Form, Formik } from \"formik\";\nimport React, { useRef, useState } from \"react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useHistory } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport { aKey } from \"utils/querykeys\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport ChangePasswordModal from \"components/modals/ChangePasswordModal\";\nimport CropImageModal from \"components/modals/CropImageModal\";\nimport InputField from \"components/shared/InputField\";\nimport { UserSchema } from \"validation/auth.schema\";\n\nexport default function Account() {\n  const { data: user } = useQuery(aKey, () =>\n    getAccount().then((res) => res.data)\n  );\n  const cache = useQueryClient();\n\n  const logOutUser = userStore((state) => state.logout);\n  const setUser = userStore((state) => state.setUser);\n\n  const history = useHistory();\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const {\n    isOpen: cropperIsOpen,\n    onOpen: cropperOnOpen,\n    onClose: cropperOnClose,\n  } = useDisclosure();\n\n  const inputFile = useRef(null);\n  const [imageUrl, setImageUrl] = useState(user?.image || \"\");\n  const [cropImage, setCropImage] = useState(\"\");\n  const [croppedImage, setCroppedImage] = useState(null);\n\n  async function handleLogout() {\n    const { data } = await logout();\n    if (data) {\n      cache.clear();\n      logOutUser();\n      history.push(\"/\");\n    }\n  }\n\n  async function handleUpdateAccount(values, { setErrors }) {\n    try {\n      const formData = new FormData();\n      formData.append(\"email\", values.email);\n      formData.append(\"username\", values.username);\n      formData.append(\"image\", croppedImage ?? imageUrl);\n      const { data } = await updateAccount(formData);\n\n      if (data) {\n        setUser(data);\n        toast({\n          title: \"Account Updated ðŸ˜Ž \",\n          status: \"success\",\n          duration: 4000,\n          isClosable: true,\n        });\n      }\n    } catch (error) {\n      setErrors(toErrorMap(error));\n    }\n  }\n\n  function handleSelectImage(event) {\n    if (!event.currentTarget.files) return;\n\n    setCropImage(URL.createObjectURL(event.currentTarget.files[0]));\n    cropperOnOpen();\n  }\n\n  function applyCrop(file) {\n    setImageUrl(URL.createObjectURL(file));\n    setCropImage(new File([file], \"avatar\"));\n    cropperOnClose();\n  }\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <Flex minHeight=\"100vh\" width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box px={4} width=\"full\" maxWidth=\"500px\">\n        <Flex mb=\"4\" justify=\"center\">\n          <Heading fontSize=\"24px\">MY ACCOUNT</Heading>\n        </Flex>\n        <Box p={4} borderRadius={4} background=\"brandGray.light\">\n          <Box>\n            <Formik\n              initialValues={{\n                email: user.email,\n                username: user.username,\n                image: null,\n              }}\n              validationSchema={UserSchema}\n              onSubmit={handleUpdateAccount}\n            >\n              {({ isSubmitting, values }) => (\n                <Form>\n                  <Flex mb=\"4\" justify=\"center\">\n                    <Tooltip label=\"Change Avatar\" aria-label=\"Change Avatar\">\n                      <Avatar\n                        size=\"xl\"\n                        name={user.username}\n                        src={imageUrl || user.image}\n                        _hover={{ cursor: \"pointer\", opacity: 0.5 }}\n                        onClick={() => inputFile.current.click()}\n                      />\n                    </Tooltip>\n                    <input\n                      type=\"file\"\n                      name=\"image\"\n                      accept=\"image/*\"\n                      ref={inputFile}\n                      hidden\n                      onChange={handleSelectImage}\n                    />\n                  </Flex>\n                  <Box my={4}>\n                    <InputField\n                      value={values.email}\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      label=\"Email\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                    />\n\n                    <InputField\n                      value={values.username}\n                      placeholder=\"Username\"\n                      label=\"Username\"\n                      name=\"username\"\n                      autoComplete=\"username\"\n                    />\n\n                    <Flex my={8} align={\"end\"}>\n                      <Spacer />\n                      <Button\n                        mr={4}\n                        colorScheme=\"white\"\n                        variant=\"outline\"\n                        onClick={history.goBack}\n                        fontSize={\"14px\"}\n                      >\n                        Close\n                      </Button>\n\n                      <LightMode>\n                        <Button\n                          type=\"submit\"\n                          colorScheme=\"green\"\n                          isLoading={isSubmitting}\n                          fontSize={\"14px\"}\n                        >\n                          Update\n                        </Button>\n                      </LightMode>\n                    </Flex>\n                  </Box>\n                </Form>\n              )}\n            </Formik>\n          </Box>\n          <Divider my={\"4\"} />\n          <Flex>\n            <Heading fontSize=\"18px\">PASSWORD AND AUTHENTICATION</Heading>\n          </Flex>\n          <Flex mt=\"4\">\n            <Button\n              background=\"highlight.standard\"\n              color=\"white\"\n              type=\"submit\"\n              _hover={{ bg: \"highlight.hover\" }}\n              _active={{ bg: \"highlight.active\" }}\n              _focus={{ boxShadow: \"none\" }}\n              onClick={onOpen}\n              fontSize={\"14px\"}\n            >\n              Change Password\n            </Button>\n\n            <Spacer />\n            <Button\n              colorScheme=\"red\"\n              variant=\"outline\"\n              onClick={handleLogout}\n              fontSize={\"14px\"}\n            >\n              Logout\n            </Button>\n          </Flex>\n        </Box>\n      </Box>\n      {isOpen && <ChangePasswordModal isOpen={isOpen} onClose={onClose} />}\n      {cropperIsOpen && (\n        <CropImageModal\n          isOpen={cropperIsOpen}\n          onClose={cropperOnClose}\n          initialImage={cropImage}\n          applyCrop={applyCrop}\n        />\n      )}\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}