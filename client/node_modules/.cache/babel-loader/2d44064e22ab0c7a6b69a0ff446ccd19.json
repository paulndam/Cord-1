{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport homeStore from \"stores/homeStore\";\nimport userStore from \"stores/userStore\";\nimport { fKey } from \"utils/querykeys\";\nimport getSocket from \"../getSocket\";\nexport default function useFriendSocket() {\n  _s();\n\n  const current = userStore(state => state.current);\n  const setRequests = homeStore(state => state.setRequests);\n  const cache = useQueryClient();\n  useEffect(() => {\n    const socket = getSocket();\n    socket.emit(\"joinUser\", current === null || current === void 0 ? void 0 : current.id);\n    socket.emit(\"getRequestCount\");\n    socket.on(\"add_friend\", newFriend => {\n      cache.setQueryData(fKey, data => {\n        return [...data, newFriend].sort((a, b) => a.username.localeCompare(b.username));\n      });\n    });\n    socket.on(\"remove_friend\", memberId => {\n      cache.setQueryData(fKey, data => {\n        return [...(data === null || data === void 0 ? void 0 : data.filter(m => m.id !== memberId))];\n      });\n    });\n    socket.on(\"toggle_online\", memberId => {\n      cache.setQueryData(fKey, data => {\n        const index = data === null || data === void 0 ? void 0 : data.findIndex(m => m.id === memberId);\n\n        if (index !== -1) {\n          data[index].isOnline = true;\n        }\n\n        return data;\n      });\n    });\n    socket.on(\"toggle_offline\", memberId => {\n      cache.setQueryData(fKey, data => {\n        const index = data === null || data === void 0 ? void 0 : data.findIndex(m => m.id === memberId);\n\n        if (index !== -1) {\n          data[index].isOnline = false;\n        }\n\n        return data;\n      });\n    });\n    socket.on(\"requestCount\", count => {\n      setRequests(count);\n    });\n    return () => {\n      socket.emit(\"leaveRoom\", current === null || current === void 0 ? void 0 : current.id);\n      socket.disconnect();\n    };\n  }, [cache, current, setRequests]);\n}\n\n_s(useFriendSocket, \"yKPUtBryQjcykj4wN076+QCSH/g=\", false, function () {\n  return [useQueryClient];\n});","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/api/ws/useFriendSocket.js"],"names":["useEffect","useQueryClient","homeStore","userStore","fKey","getSocket","useFriendSocket","current","state","setRequests","cache","socket","emit","id","on","newFriend","setQueryData","data","sort","a","b","username","localeCompare","memberId","filter","m","index","findIndex","isOnline","count","disconnect"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport homeStore from \"stores/homeStore\";\nimport userStore from \"stores/userStore\";\nimport { fKey } from \"utils/querykeys\";\nimport getSocket from \"../getSocket\";\n\nexport default function useFriendSocket() {\n  const current = userStore((state) => state.current);\n  const setRequests = homeStore((state) => state.setRequests);\n  const cache = useQueryClient();\n\n  useEffect(() => {\n    const socket = getSocket();\n    socket.emit(\"joinUser\", current?.id);\n    socket.emit(\"getRequestCount\");\n    socket.on(\"add_friend\", (newFriend) => {\n      cache.setQueryData(fKey, (data) => {\n        return [...data, newFriend].sort((a, b) =>\n          a.username.localeCompare(b.username)\n        );\n      });\n    });\n\n    socket.on(\"remove_friend\", (memberId) => {\n      cache.setQueryData(fKey, (data) => {\n        return [...data?.filter((m) => m.id !== memberId)];\n      });\n    });\n\n    socket.on(\"toggle_online\", (memberId) => {\n      cache.setQueryData(fKey, (data) => {\n        const index = data?.findIndex((m) => m.id === memberId);\n        if (index !== -1) {\n          data[index].isOnline = true;\n        }\n        return data;\n      });\n    });\n\n    socket.on(\"toggle_offline\", (memberId) => {\n      cache.setQueryData(fKey, (data) => {\n        const index = data?.findIndex((m) => m.id === memberId);\n        if (index !== -1) {\n          data[index].isOnline = false;\n        }\n        return data;\n      });\n    });\n\n    socket.on(\"requestCount\", (count) => {\n      setRequests(count);\n    });\n\n    return () => {\n      socket.emit(\"leaveRoom\", current?.id);\n      socket.disconnect();\n    };\n  }, [cache, current, setRequests]);\n}\n"]},"metadata":{},"sourceType":"module"}