{"ast":null,"code":"var _jsxFileName = \"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/modals/CropImageModal.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Slider, SliderFilledTrack, SliderThumb, SliderTrack } from \"@chakra-ui/react\";\nimport React, { useCallback, useState } from \"react\";\nimport Cropper from \"react-easy-crop\";\nimport getCroppedImg from \"utils/cropImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CropImageModal({\n  isOpen,\n  onClose,\n  applyCrop,\n  initialImage\n}) {\n  _s();\n\n  const [crop, setCrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n  const showCroppedImage = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImg(initialImage, croppedAreaPixels);\n      applyCrop(croppedImage);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [croppedAreaPixels, initialImage, applyCrop]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    isCentered: true,\n    closeOnOverlayClick: false,\n    children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n      bg: \"brandGray.light\",\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        fontWeight: \"bold\",\n        children: \"EDIT MEDIA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          h: \"400px\",\n          overflow: \"hidden\",\n          position: \"relative\",\n          children: /*#__PURE__*/_jsxDEV(Cropper, {\n            image: initialImage,\n            crop: crop,\n            zoom: zoom,\n            aspect: 1,\n            cropShape: \"round\",\n            onCropChange: setCrop,\n            onCropComplete: onCropComplete,\n            onZoomChange: setZoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          \"aria-label\": \"zoom\",\n          min: 1,\n          max: 3,\n          step: 0.01,\n          value: zoom,\n          onChange: value => setZoom(value),\n          my: \"4\",\n          children: [/*#__PURE__*/_jsxDEV(SliderTrack, {\n            children: /*#__PURE__*/_jsxDEV(SliderFilledTrack, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SliderThumb, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        bg: \"brandGray.dark\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClose,\n          fontSize: \"14px\",\n          mr: 6,\n          variant: \"link\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          background: \"highlight.standard\",\n          color: \"white\",\n          type: \"submit\",\n          fontSize: \"14px\",\n          _hover: {\n            bg: \"highlight.hover\"\n          },\n          _active: {\n            bg: \"highlight.active\"\n          },\n          _focus: {\n            boxShadow: \"none\"\n          },\n          onClick: showCroppedImage,\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CropImageModal, \"oATkfceQ1xAfPA0UZwQ8RGuC/rU=\");\n\n_c = CropImageModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CropImageModal\");","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/modals/CropImageModal.js"],"names":["Box","Button","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Slider","SliderFilledTrack","SliderThumb","SliderTrack","React","useCallback","useState","Cropper","getCroppedImg","CropImageModal","isOpen","onClose","applyCrop","initialImage","crop","setCrop","x","y","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","onCropComplete","croppedArea","showCroppedImage","croppedImage","e","console","error","value","bg","boxShadow"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Slider,\n  SliderFilledTrack,\n  SliderThumb,\n  SliderTrack,\n} from \"@chakra-ui/react\";\nimport React, { useCallback, useState } from \"react\";\nimport Cropper from \"react-easy-crop\";\nimport getCroppedImg from \"utils/cropImage\";\n\nexport default function CropImageModal({\n  isOpen,\n  onClose,\n  applyCrop,\n  initialImage,\n}) {\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n\n  const showCroppedImage = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImg(initialImage, croppedAreaPixels);\n      applyCrop(croppedImage);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [croppedAreaPixels, initialImage, applyCrop]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      isCentered\n      closeOnOverlayClick={false}\n    >\n      <ModalOverlay />\n\n      <ModalContent bg=\"brandGray.light\">\n        <ModalHeader fontWeight=\"bold\">EDIT MEDIA</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Box h=\"400px\" overflow=\"hidden\" position=\"relative\">\n            <Cropper\n              image={initialImage}\n              crop={crop}\n              zoom={zoom}\n              aspect={1}\n              cropShape=\"round\"\n              onCropChange={setCrop}\n              onCropComplete={onCropComplete}\n              onZoomChange={setZoom}\n            />\n          </Box>\n          <Slider\n            aria-label=\"zoom\"\n            min={1}\n            max={3}\n            step={0.01}\n            value={zoom}\n            onChange={(value) => setZoom(value)}\n            my=\"4\"\n          >\n            <SliderTrack>\n              <SliderFilledTrack />\n            </SliderTrack>\n            <SliderThumb />\n          </Slider>\n        </ModalBody>\n\n        <ModalFooter bg=\"brandGray.dark\">\n          <Button onClick={onClose} fontSize={\"14px\"} mr={6} variant=\"link\">\n            Cancel\n          </Button>\n          <Button\n            background=\"highlight.standard\"\n            color=\"white\"\n            type=\"submit\"\n            fontSize={\"14px\"}\n            _hover={{ bg: \"highlight.hover\" }}\n            _active={{ bg: \"highlight.active\" }}\n            _focus={{ boxShadow: \"none\" }}\n            onClick={showCroppedImage}\n          >\n            Apply\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}