{"ast":null,"code":"import{useEffect}from\"react\";import{useQueryClient}from\"react-query\";import channelStore from\"stores/channelStore\";import userStore from\"stores/userStore\";import getSocket from\"../getSocket\";export default function useMessageSocket(channelId,key){var current=userStore(function(state){return state.current;});var store=channelStore();var cache=useQueryClient();useEffect(function(){store.reset();var socket=getSocket();socket.emit(\"joinChannel\",channelId);socket.on(\"new_message\",function(newMessage){cache.setQueryData(key,function(d){d===null||d===void 0?void 0:d.pages[0].unshift(newMessage);return d;});});socket.on(\"edit_message\",function(editMessage){cache.setQueryData(key,function(d){var index=-1;var editId=-1;d===null||d===void 0?void 0:d.pages.forEach(function(p,i){editId=p.findIndex(function(m){return m.id===editMessage.id;});if(editId!==-1)index=i;});if(index!==-1&&editId!==-1){d.pages[index][editId]=editMessage;}return d;});});socket.on(\"delete_message\",function(toBeRemoved){cache.setQueryData(key,function(d){var index=-1;d===null||d===void 0?void 0:d.pages.forEach(function(p,i){if(p.findIndex(function(m){return m.id===toBeRemoved.id;})!==-1)index=i;});if(index!==-1){d.pages[index]=d===null||d===void 0?void 0:d.pages[index].filter(function(m){return m.id!==toBeRemoved.id;});}return d;});});socket.on(\"addToTyping\",function(username){if(username!==(current===null||current===void 0?void 0:current.username)){store.addTyping(username);}});socket.on(\"removeFromTyping\",function(username){if(username!==(current===null||current===void 0?void 0:current.username)){store.removeTyping(username);}});return function(){socket.emit(\"leaveRoom\",channelId);socket.disconnect();};// eslint-disable-next-line\n},[channelId,cache,key,current]);}","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/api/ws/useMessageSocket.js"],"names":["useEffect","useQueryClient","channelStore","userStore","getSocket","useMessageSocket","channelId","key","current","state","store","cache","reset","socket","emit","on","newMessage","setQueryData","d","pages","unshift","editMessage","index","editId","forEach","p","i","findIndex","m","id","toBeRemoved","filter","username","addTyping","removeTyping","disconnect"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,cAAT,KAA+B,aAA/B,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,kBAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CAEA,cAAe,SAASC,CAAAA,gBAAT,CAA0BC,SAA1B,CAAqCC,GAArC,CAA0C,CACvD,GAAMC,CAAAA,OAAO,CAAGL,SAAS,CAAC,SAACM,KAAD,QAAWA,CAAAA,KAAK,CAACD,OAAjB,EAAD,CAAzB,CACA,GAAME,CAAAA,KAAK,CAAGR,YAAY,EAA1B,CACA,GAAMS,CAAAA,KAAK,CAAGV,cAAc,EAA5B,CAEAD,SAAS,CAAC,UAAM,CACdU,KAAK,CAACE,KAAN,GACA,GAAMC,CAAAA,MAAM,CAAGT,SAAS,EAAxB,CACAS,MAAM,CAACC,IAAP,CAAY,aAAZ,CAA2BR,SAA3B,EAEAO,MAAM,CAACE,EAAP,CAAU,aAAV,CAAyB,SAACC,UAAD,CAAgB,CACvCL,KAAK,CAACM,YAAN,CAAmBV,GAAnB,CAAwB,SAACW,CAAD,CAAO,CAC7BA,CAAC,OAAD,EAAAA,CAAC,SAAD,QAAAA,CAAC,CAAEC,KAAH,CAAS,CAAT,EAAYC,OAAZ,CAAoBJ,UAApB,EACA,MAAOE,CAAAA,CAAP,CACD,CAHD,EAID,CALD,EAOAL,MAAM,CAACE,EAAP,CAAU,cAAV,CAA0B,SAACM,WAAD,CAAiB,CACzCV,KAAK,CAACM,YAAN,CAAmBV,GAAnB,CAAwB,SAACW,CAAD,CAAO,CAC7B,GAAII,CAAAA,KAAK,CAAG,CAAC,CAAb,CACA,GAAIC,CAAAA,MAAM,CAAG,CAAC,CAAd,CACAL,CAAC,OAAD,EAAAA,CAAC,SAAD,QAAAA,CAAC,CAAEC,KAAH,CAASK,OAAT,CAAiB,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACzBH,MAAM,CAAGE,CAAC,CAACE,SAAF,CAAY,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,EAAF,GAASR,WAAW,CAACQ,EAA5B,EAAZ,CAAT,CACA,GAAIN,MAAM,GAAK,CAAC,CAAhB,CAAmBD,KAAK,CAAGI,CAAR,CACpB,CAHD,EAKA,GAAIJ,KAAK,GAAK,CAAC,CAAX,EAAgBC,MAAM,GAAK,CAAC,CAAhC,CAAmC,CACjCL,CAAC,CAACC,KAAF,CAAQG,KAAR,EAAeC,MAAf,EAAyBF,WAAzB,CACD,CACD,MAAOH,CAAAA,CAAP,CACD,CAZD,EAaD,CAdD,EAgBAL,MAAM,CAACE,EAAP,CAAU,gBAAV,CAA4B,SAACe,WAAD,CAAiB,CAC3CnB,KAAK,CAACM,YAAN,CAAmBV,GAAnB,CAAwB,SAACW,CAAD,CAAO,CAC7B,GAAII,CAAAA,KAAK,CAAG,CAAC,CAAb,CACAJ,CAAC,OAAD,EAAAA,CAAC,SAAD,QAAAA,CAAC,CAAEC,KAAH,CAASK,OAAT,CAAiB,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACzB,GAAID,CAAC,CAACE,SAAF,CAAY,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,EAAF,GAASC,WAAW,CAACD,EAA5B,EAAZ,IAAgD,CAAC,CAArD,CAAwDP,KAAK,CAAGI,CAAR,CACzD,CAFD,EAGA,GAAIJ,KAAK,GAAK,CAAC,CAAf,CAAkB,CAChBJ,CAAC,CAACC,KAAF,CAAQG,KAAR,EAAiBJ,CAAjB,SAAiBA,CAAjB,iBAAiBA,CAAC,CAAEC,KAAH,CAASG,KAAT,EAAgBS,MAAhB,CACf,SAACH,CAAD,QAAOA,CAAAA,CAAC,CAACC,EAAF,GAASC,WAAW,CAACD,EAA5B,EADe,CAAjB,CAGD,CACD,MAAOX,CAAAA,CAAP,CACD,CAXD,EAYD,CAbD,EAeAL,MAAM,CAACE,EAAP,CAAU,aAAV,CAAyB,SAACiB,QAAD,CAAc,CACrC,GAAIA,QAAQ,IAAKxB,OAAL,SAAKA,OAAL,iBAAKA,OAAO,CAAEwB,QAAd,CAAZ,CAAoC,CAClCtB,KAAK,CAACuB,SAAN,CAAgBD,QAAhB,EACD,CACF,CAJD,EAMAnB,MAAM,CAACE,EAAP,CAAU,kBAAV,CAA8B,SAACiB,QAAD,CAAc,CAC1C,GAAIA,QAAQ,IAAKxB,OAAL,SAAKA,OAAL,iBAAKA,OAAO,CAAEwB,QAAd,CAAZ,CAAoC,CAClCtB,KAAK,CAACwB,YAAN,CAAmBF,QAAnB,EACD,CACF,CAJD,EAMA,MAAO,WAAM,CACXnB,MAAM,CAACC,IAAP,CAAY,WAAZ,CAAyBR,SAAzB,EACAO,MAAM,CAACsB,UAAP,GACD,CAHD,CAIA;AACD,CA5DQ,CA4DN,CAAC7B,SAAD,CAAYK,KAAZ,CAAmBJ,GAAnB,CAAwBC,OAAxB,CA5DM,CAAT,CA6DD","sourcesContent":["import { useEffect } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport channelStore from \"stores/channelStore\";\nimport userStore from \"stores/userStore\";\nimport getSocket from \"../getSocket\";\n\nexport default function useMessageSocket(channelId, key) {\n  const current = userStore((state) => state.current);\n  const store = channelStore();\n  const cache = useQueryClient();\n\n  useEffect(() => {\n    store.reset();\n    const socket = getSocket();\n    socket.emit(\"joinChannel\", channelId);\n\n    socket.on(\"new_message\", (newMessage) => {\n      cache.setQueryData(key, (d) => {\n        d?.pages[0].unshift(newMessage);\n        return d;\n      });\n    });\n\n    socket.on(\"edit_message\", (editMessage) => {\n      cache.setQueryData(key, (d) => {\n        let index = -1;\n        let editId = -1;\n        d?.pages.forEach((p, i) => {\n          editId = p.findIndex((m) => m.id === editMessage.id);\n          if (editId !== -1) index = i;\n        });\n\n        if (index !== -1 && editId !== -1) {\n          d.pages[index][editId] = editMessage;\n        }\n        return d;\n      });\n    });\n\n    socket.on(\"delete_message\", (toBeRemoved) => {\n      cache.setQueryData(key, (d) => {\n        let index = -1;\n        d?.pages.forEach((p, i) => {\n          if (p.findIndex((m) => m.id === toBeRemoved.id) !== -1) index = i;\n        });\n        if (index !== -1) {\n          d.pages[index] = d?.pages[index].filter(\n            (m) => m.id !== toBeRemoved.id\n          );\n        }\n        return d;\n      });\n    });\n\n    socket.on(\"addToTyping\", (username) => {\n      if (username !== current?.username) {\n        store.addTyping(username);\n      }\n    });\n\n    socket.on(\"removeFromTyping\", (username) => {\n      if (username !== current?.username) {\n        store.removeTyping(username);\n      }\n    });\n\n    return () => {\n      socket.emit(\"leaveRoom\", channelId);\n      socket.disconnect();\n    };\n    // eslint-disable-next-line\n  }, [channelId, cache, key, current]);\n}\n"]},"metadata":{},"sourceType":"module"}