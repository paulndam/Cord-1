{"ast":null,"code":"import _regeneratorRuntime from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{Button,Input,InputGroup,InputLeftAddon,InputRightElement,Modal,ModalBody,ModalCloseButton,ModalContent,ModalFooter,ModalHeader,ModalOverlay,Text,useClipboard}from\"@chakra-ui/react\";import{sendFriendRequest}from\"api/handler/account\";import{Form,Formik}from\"formik\";import React from\"react\";import{useQueryClient}from\"react-query\";import userStore from\"stores/userStore\";import{rKey}from\"utils/querykeys\";import toErrorMap from\"utils/toErrorMap\";import InputField from\"components/shared/InputField\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AddFriendModal(_ref){var isOpen=_ref.isOpen,onClose=_ref.onClose;var current=userStore(function(state){return state.current;});var cache=useQueryClient();var _useClipboard=useClipboard((current===null||current===void 0?void 0:current.id)||\"\"),hasCopied=_useClipboard.hasCopied,onCopy=_useClipboard.onCopy;function handleAddFriend(_x,_x2){return _handleAddFriend.apply(this,arguments);}function _handleAddFriend(){_handleAddFriend=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref2){var setErrors,_yield$sendFriendRequ,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setErrors=_ref2.setErrors;if(!(values.id===\"\"&&values.id.length!==20)){_context.next=5;break;}setErrors({id:\"Enter valid ID \"});_context.next=16;break;case 5:_context.prev=5;_context.next=8;return sendFriendRequest(values.id);case 8:_yield$sendFriendRequ=_context.sent;data=_yield$sendFriendRequ.data;if(data){onClose();cache.invalidateQueries(rKey);}_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](5);setErrors(toErrorMap(_context.t0));case 16:case\"end\":return _context.stop();}}},_callee,null,[[5,13]]);}));return _handleAddFriend.apply(this,arguments);}return/*#__PURE__*/_jsxs(Modal,{isOpen:isOpen,onClose:onClose,isCentered:true,children:[/*#__PURE__*/_jsx(ModalOverlay,{}),/*#__PURE__*/_jsx(ModalContent,{bg:\"brandGray.light\",children:/*#__PURE__*/_jsx(Formik,{initialValues:{id:\"\"},onSubmit:handleAddFriend,children:function children(_ref3){var isSubmitting=_ref3.isSubmitting;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(ModalHeader,{fontWeight:\"bold\",pb:\"0\",children:\"ADD FRIEND\"}),/*#__PURE__*/_jsx(ModalCloseButton,{}),/*#__PURE__*/_jsxs(ModalBody,{children:[/*#__PURE__*/_jsx(Text,{mb:\"4\",children:\"You can add a friend with their UID.\"}),/*#__PURE__*/_jsxs(InputGroup,{mb:2,children:[/*#__PURE__*/_jsx(InputLeftAddon,{bg:\"#202225\",borderColor:\"black\",children:\"UID\"}),/*#__PURE__*/_jsx(Input,{bg:\"brandGray.dark\",borderColor:hasCopied?\"brandGreen\":\"black\",borderRadius:\"3px\",focusBorderColor:\"highlight.standard\",value:(current===null||current===void 0?void 0:current.id)||\"\",isReadOnly:true}),/*#__PURE__*/_jsx(InputRightElement,{width:\"4.5rem\",children:/*#__PURE__*/_jsx(Button,{h:\"1.75rem\",size:\"sm\",bg:hasCopied?\"brandGreen\":\"highlight.standard\",color:\"white\",_hover:{bg:\"highlight.hover\"},_active:{bg:\"highlight.active\"},_focus:{boxShadow:\"none\"},onClick:onCopy,children:hasCopied?\"Copied\":\"Copy\"})})]}),/*#__PURE__*/_jsx(InputField,{label:\"Enter a user ID\",name:\"id\"})]}),/*#__PURE__*/_jsxs(ModalFooter,{bg:\"brandGray.dark\",mt:\"2\",children:[/*#__PURE__*/_jsx(Button,{mr:6,variant:\"link\",onClick:onClose,fontSize:\"14px\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{background:\"highlight.standard\",color:\"white\",type:\"submit\",_hover:{bg:\"highlight.hover\"},_active:{bg:\"highlight.active\"},_focus:{boxShadow:\"none\"},isLoading:isSubmitting,fontSize:\"14px\",children:\"Send Friend Request\"})]})]});}})})]});}","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/modals/AddFriendModal.js"],"names":["Button","Input","InputGroup","InputLeftAddon","InputRightElement","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Text","useClipboard","sendFriendRequest","Form","Formik","React","useQueryClient","userStore","rKey","toErrorMap","InputField","AddFriendModal","isOpen","onClose","current","state","cache","id","hasCopied","onCopy","handleAddFriend","values","setErrors","length","data","invalidateQueries","isSubmitting","bg","boxShadow"],"mappings":"qYAAA,OACEA,MADF,CAEEC,KAFF,CAGEC,UAHF,CAIEC,cAJF,CAKEC,iBALF,CAMEC,KANF,CAOEC,SAPF,CAQEC,gBARF,CASEC,YATF,CAUEC,WAVF,CAWEC,WAXF,CAYEC,YAZF,CAaEC,IAbF,CAcEC,YAdF,KAeO,kBAfP,CAgBA,OAASC,iBAAT,KAAkC,qBAAlC,CACA,OAASC,IAAT,CAAeC,MAAf,KAA6B,QAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,aAA/B,CACA,MAAOC,CAAAA,SAAP,KAAsB,kBAAtB,CACA,OAASC,IAAT,KAAqB,iBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,C,wFAEA,cAAe,SAASC,CAAAA,cAAT,MAA6C,IAAnBC,CAAAA,MAAmB,MAAnBA,MAAmB,CAAXC,OAAW,MAAXA,OAAW,CAC1D,GAAMC,CAAAA,OAAO,CAAGP,SAAS,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACD,OAAjB,EAAD,CAAzB,CACA,GAAME,CAAAA,KAAK,CAAGV,cAAc,EAA5B,CAF0D,kBAG5BL,YAAY,CAAC,CAAAa,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAEG,EAAT,GAAe,EAAhB,CAHgB,CAGlDC,SAHkD,eAGlDA,SAHkD,CAGvCC,MAHuC,eAGvCA,MAHuC,SAK3CC,CAAAA,eAL2C,6JAK1D,iBAA+BC,MAA/B,iKAAyCC,SAAzC,OAAyCA,SAAzC,MACMD,MAAM,CAACJ,EAAP,GAAc,EAAd,EAAoBI,MAAM,CAACJ,EAAP,CAAUM,MAAV,GAAqB,EAD/C,0BAEID,SAAS,CAAC,CAAEL,EAAE,CAAE,iBAAN,CAAD,CAAT,CAFJ,oEAK6Bf,CAAAA,iBAAiB,CAACmB,MAAM,CAACJ,EAAR,CAL9C,4CAKcO,IALd,uBAKcA,IALd,CAMM,GAAIA,IAAJ,CAAU,CACRX,OAAO,GACPG,KAAK,CAACS,iBAAN,CAAwBjB,IAAxB,EACD,CATP,iFAWMc,SAAS,CAACb,UAAU,aAAX,CAAT,CAXN,qEAL0D,kDAqB1D,mBACE,MAAC,KAAD,EAAO,MAAM,CAAEG,MAAf,CAAuB,OAAO,CAAEC,OAAhC,CAAyC,UAAU,KAAnD,wBACE,KAAC,YAAD,IADF,cAEE,KAAC,YAAD,EAAc,EAAE,CAAC,iBAAjB,uBACE,KAAC,MAAD,EAAQ,aAAa,CAAE,CAAEI,EAAE,CAAE,EAAN,CAAvB,CAAmC,QAAQ,CAAEG,eAA7C,UACG,4BAAGM,CAAAA,YAAH,OAAGA,YAAH,oBACC,MAAC,IAAD,yBACE,KAAC,WAAD,EAAa,UAAU,CAAC,MAAxB,CAA+B,EAAE,CAAE,GAAnC,wBADF,cAIE,KAAC,gBAAD,IAJF,cAKE,MAAC,SAAD,yBACE,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,kDADF,cAEE,MAAC,UAAD,EAAY,EAAE,CAAE,CAAhB,wBACE,KAAC,cAAD,EACE,EAAE,CAAE,SADN,CAEE,WAAW,CAAE,OAFf,CAGE,QAAQ,CAAC,KAHX,EADF,cAME,KAAC,KAAD,EACE,EAAE,CAAC,gBADL,CAEE,WAAW,CAAER,SAAS,CAAG,YAAH,CAAkB,OAF1C,CAGE,YAAY,CAAC,KAHf,CAIE,gBAAgB,CAAC,oBAJnB,CAKE,KAAK,CAAE,CAAAJ,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAEG,EAAT,GAAe,EALxB,CAME,UAAU,KANZ,EANF,cAcE,KAAC,iBAAD,EAAmB,KAAK,CAAC,QAAzB,uBACE,KAAC,MAAD,EACE,CAAC,CAAC,SADJ,CAEE,IAAI,CAAC,IAFP,CAGE,EAAE,CAAEC,SAAS,CAAG,YAAH,CAAkB,oBAHjC,CAIE,KAAK,CAAC,OAJR,CAKE,MAAM,CAAE,CAAES,EAAE,CAAE,iBAAN,CALV,CAME,OAAO,CAAE,CAAEA,EAAE,CAAE,kBAAN,CANX,CAOE,MAAM,CAAE,CAAEC,SAAS,CAAE,MAAb,CAPV,CAQE,OAAO,CAAET,MARX,UAUGD,SAAS,CAAG,QAAH,CAAc,MAV1B,EADF,EAdF,GAFF,cAgCE,KAAC,UAAD,EAAY,KAAK,CAAC,iBAAlB,CAAoC,IAAI,CAAC,IAAzC,EAhCF,GALF,cAuCE,MAAC,WAAD,EAAa,EAAE,CAAC,gBAAhB,CAAiC,EAAE,CAAC,GAApC,wBACE,KAAC,MAAD,EACE,EAAE,CAAE,CADN,CAEE,OAAO,CAAC,MAFV,CAGE,OAAO,CAAEL,OAHX,CAIE,QAAQ,CAAE,MAJZ,oBADF,cASE,KAAC,MAAD,EACE,UAAU,CAAC,oBADb,CAEE,KAAK,CAAC,OAFR,CAGE,IAAI,CAAC,QAHP,CAIE,MAAM,CAAE,CAAEc,EAAE,CAAE,iBAAN,CAJV,CAKE,OAAO,CAAE,CAAEA,EAAE,CAAE,kBAAN,CALX,CAME,MAAM,CAAE,CAAEC,SAAS,CAAE,MAAb,CANV,CAOE,SAAS,CAAEF,YAPb,CAQE,QAAQ,CAAE,MARZ,iCATF,GAvCF,GADD,EADH,EADF,EAFF,GADF,CAyED","sourcesContent":["import {\n  Button,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  InputRightElement,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  useClipboard,\n} from \"@chakra-ui/react\";\nimport { sendFriendRequest } from \"api/handler/account\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport userStore from \"stores/userStore\";\nimport { rKey } from \"utils/querykeys\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport InputField from \"components/shared/InputField\";\n\nexport default function AddFriendModal({ isOpen, onClose }) {\n  const current = userStore((state) => state.current);\n  const cache = useQueryClient();\n  const { hasCopied, onCopy } = useClipboard(current?.id || \"\");\n\n  async function handleAddFriend(values, { setErrors }) {\n    if (values.id === \"\" && values.id.length !== 20) {\n      setErrors({ id: \"Enter valid ID \" });\n    } else {\n      try {\n        const { data } = await sendFriendRequest(values.id);\n        if (data) {\n          onClose();\n          cache.invalidateQueries(rKey);\n        }\n      } catch (error) {\n        setErrors(toErrorMap(error));\n      }\n    }\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent bg=\"brandGray.light\">\n        <Formik initialValues={{ id: \"\" }} onSubmit={handleAddFriend}>\n          {({ isSubmitting }) => (\n            <Form>\n              <ModalHeader fontWeight=\"bold\" pb={\"0\"}>\n                ADD FRIEND\n              </ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <Text mb=\"4\">You can add a friend with their UID.</Text>\n                <InputGroup mb={2}>\n                  <InputLeftAddon\n                    bg={\"#202225\"}\n                    borderColor={\"black\"}\n                    children=\"UID\"\n                  />\n                  <Input\n                    bg=\"brandGray.dark\"\n                    borderColor={hasCopied ? \"brandGreen\" : \"black\"}\n                    borderRadius=\"3px\"\n                    focusBorderColor=\"highlight.standard\"\n                    value={current?.id || \"\"}\n                    isReadOnly\n                  />\n                  <InputRightElement width=\"4.5rem\">\n                    <Button\n                      h=\"1.75rem\"\n                      size=\"sm\"\n                      bg={hasCopied ? \"brandGreen\" : \"highlight.standard\"}\n                      color=\"white\"\n                      _hover={{ bg: \"highlight.hover\" }}\n                      _active={{ bg: \"highlight.active\" }}\n                      _focus={{ boxShadow: \"none\" }}\n                      onClick={onCopy}\n                    >\n                      {hasCopied ? \"Copied\" : \"Copy\"}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n\n                <InputField label=\"Enter a user ID\" name=\"id\" />\n              </ModalBody>\n              <ModalFooter bg=\"brandGray.dark\" mt=\"2\">\n                <Button\n                  mr={6}\n                  variant=\"link\"\n                  onClick={onClose}\n                  fontSize={\"14px\"}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  background=\"highlight.standard\"\n                  color=\"white\"\n                  type=\"submit\"\n                  _hover={{ bg: \"highlight.hover\" }}\n                  _active={{ bg: \"highlight.active\" }}\n                  _focus={{ boxShadow: \"none\" }}\n                  isLoading={isSubmitting}\n                  fontSize={\"14px\"}\n                >\n                  Send Friend Request\n                </Button>\n              </ModalFooter>\n            </Form>\n          )}\n        </Formik>\n      </ModalContent>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}