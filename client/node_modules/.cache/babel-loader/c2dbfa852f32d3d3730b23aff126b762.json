{"ast":null,"code":"var _jsxFileName = \"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/pages/Account.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, Button, Divider, Flex, Heading, LightMode, Spacer, Tooltip, useDisclosure, useToast } from \"@chakra-ui/react\";\nimport { getAccount, updateAccount } from \"api/handler/account\";\nimport { logout } from \"api/handler/auth\";\nimport { Form, Formik } from \"formik\";\nimport React, { useRef, useState } from \"react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useHistory } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport { aKey } from \"utils/querykeys\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport ChangePasswordModal from \"components/modals/ChangePasswordModal\";\nimport CropImageModal from \"components/modals/CropImageModal\";\nimport InputField from \"components/shared/InputField\";\nimport { UserSchema } from \"validation/auth.schema\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Account() {\n  _s();\n\n  const {\n    data: user\n  } = useQuery(aKey, () => getAccount().then(res => res.data));\n  const cache = useQueryClient();\n  const logOutUser = userStore(state => state.logout);\n  const setUser = userStore(state => state.setUser);\n  const history = useHistory();\n  const toast = useToast();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const {\n    isOpen: cropperIsOpen,\n    onOpen: cropperOnOpen,\n    onClose: cropperOnClose\n  } = useDisclosure();\n  const inputFile = useRef(null);\n  const [imageUrl, setImageUrl] = useState((user === null || user === void 0 ? void 0 : user.image) || \"\");\n  const [cropImage, setCropImage] = useState(\"\");\n  const [croppedImage, setCroppedImage] = useState(null);\n\n  async function handleLogout() {\n    const {\n      data\n    } = await logout();\n\n    if (data) {\n      cache.clear();\n      logOutUser();\n      history.push(\"/\");\n    }\n  }\n\n  async function handleUpdateAccount(values, {\n    setErrors\n  }) {\n    try {\n      const formData = new FormData();\n      formData.append(\"email\", values.email);\n      formData.append(\"username\", values.username);\n      formData.append(\"image\", croppedImage !== null && croppedImage !== void 0 ? croppedImage : imageUrl);\n      const {\n        data\n      } = await updateAccount(formData);\n\n      if (data) {\n        setUser(data);\n        toast({\n          title: \"Account Updated ðŸ˜Ž \",\n          status: \"success\",\n          duration: 4000,\n          isClosable: true\n        });\n      }\n    } catch (error) {\n      setErrors(toErrorMap(error));\n    }\n  }\n\n  function handleSelectImage(event) {\n    if (!event.currentTarget.files) return;\n    setCropImage(URL.createObjectURL(event.currentTarget.files[0]));\n    cropperOnOpen();\n  }\n\n  function applyCrop(file) {\n    setImageUrl(URL.createObjectURL(file));\n    setCropImage(new File([file], \"avatar\"));\n    cropperOnClose();\n  }\n\n  if (!user) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    minHeight: \"100vh\",\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      px: 4,\n      width: \"full\",\n      maxWidth: \"500px\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        mb: \"4\",\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          fontSize: \"24px\",\n          children: \"MY ACCOUNT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 4,\n        borderRadius: 4,\n        background: \"brandGray.light\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              email: user.email,\n              username: user.username,\n              image: null\n            },\n            validationSchema: UserSchema,\n            onSubmit: handleUpdateAccount,\n            children: ({\n              isSubmitting,\n              values\n            }) => /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Flex, {\n                mb: \"4\",\n                justify: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  label: \"Change Avatar\",\n                  \"aria-label\": \"Change Avatar\",\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    size: \"xl\",\n                    name: user.username,\n                    src: imageUrl || user.image,\n                    _hover: {\n                      cursor: \"pointer\",\n                      opacity: 0.5\n                    },\n                    onClick: () => inputFile.current.click()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  name: \"image\",\n                  accept: \"image/*\",\n                  ref: inputFile,\n                  hidden: true,\n                  onChange: handleSelectImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                my: 4,\n                children: [/*#__PURE__*/_jsxDEV(InputField, {\n                  value: values.email,\n                  type: \"email\",\n                  placeholder: \"Email\",\n                  label: \"Email\",\n                  name: \"email\",\n                  autoComplete: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                  value: values.username,\n                  placeholder: \"Username\",\n                  label: \"Username\",\n                  name: \"username\",\n                  autoComplete: \"username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                  my: 8,\n                  align: \"end\",\n                  children: [/*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    mr: 4,\n                    colorScheme: \"white\",\n                    variant: \"outline\",\n                    onClick: history.goBack,\n                    fontSize: \"14px\",\n                    children: \"Close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(LightMode, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      colorScheme: \"green\",\n                      isLoading: isSubmitting,\n                      fontSize: \"14px\",\n                      children: \"Update\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          my: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            fontSize: \"18px\",\n            children: \"PASSWORD AND AUTHENTICATION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          mt: \"4\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            background: \"highlight.standard\",\n            color: \"white\",\n            type: \"submit\",\n            _hover: {\n              bg: \"highlight.hover\"\n            },\n            _active: {\n              bg: \"highlight.active\"\n            },\n            _focus: {\n              boxShadow: \"none\"\n            },\n            onClick: onOpen,\n            fontSize: \"14px\",\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"red\",\n            variant: \"outline\",\n            onClick: handleLogout,\n            fontSize: \"14px\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(ChangePasswordModal, {\n      isOpen: isOpen,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 18\n    }, this), cropperIsOpen && /*#__PURE__*/_jsxDEV(CropImageModal, {\n      isOpen: cropperIsOpen,\n      onClose: cropperOnClose,\n      initialImage: cropImage,\n      applyCrop: applyCrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Account, \"SWaePvG0WI6YEar72vPvDzH8fZc=\", false, function () {\n  return [useQuery, useQueryClient, useHistory, useToast, useDisclosure, useDisclosure];\n});\n\n_c = Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/pages/Account.js"],"names":["Avatar","Box","Button","Divider","Flex","Heading","LightMode","Spacer","Tooltip","useDisclosure","useToast","getAccount","updateAccount","logout","Form","Formik","React","useRef","useState","useQuery","useQueryClient","useHistory","userStore","aKey","toErrorMap","ChangePasswordModal","CropImageModal","InputField","UserSchema","Account","data","user","then","res","cache","logOutUser","state","setUser","history","toast","isOpen","onOpen","onClose","cropperIsOpen","cropperOnOpen","cropperOnClose","inputFile","imageUrl","setImageUrl","image","cropImage","setCropImage","croppedImage","setCroppedImage","handleLogout","clear","push","handleUpdateAccount","values","setErrors","formData","FormData","append","email","username","title","status","duration","isClosable","error","handleSelectImage","event","currentTarget","files","URL","createObjectURL","applyCrop","file","File","isSubmitting","cursor","opacity","current","click","goBack","bg","boxShadow"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Flex,\n  Heading,\n  LightMode,\n  Spacer,\n  Tooltip,\n  useDisclosure,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { getAccount, updateAccount } from \"api/handler/account\";\nimport { logout } from \"api/handler/auth\";\nimport { Form, Formik } from \"formik\";\nimport React, { useRef, useState } from \"react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useHistory } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport { aKey } from \"utils/querykeys\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport ChangePasswordModal from \"components/modals/ChangePasswordModal\";\nimport CropImageModal from \"components/modals/CropImageModal\";\nimport InputField from \"components/shared/InputField\";\nimport { UserSchema } from \"validation/auth.schema\";\n\nexport default function Account() {\n  const { data: user } = useQuery(aKey, () =>\n    getAccount().then((res) => res.data)\n  );\n  const cache = useQueryClient();\n\n  const logOutUser = userStore((state) => state.logout);\n  const setUser = userStore((state) => state.setUser);\n\n  const history = useHistory();\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const {\n    isOpen: cropperIsOpen,\n    onOpen: cropperOnOpen,\n    onClose: cropperOnClose,\n  } = useDisclosure();\n\n  const inputFile = useRef(null);\n  const [imageUrl, setImageUrl] = useState(user?.image || \"\");\n  const [cropImage, setCropImage] = useState(\"\");\n  const [croppedImage, setCroppedImage] = useState(null);\n\n  async function handleLogout() {\n    const { data } = await logout();\n    if (data) {\n      cache.clear();\n      logOutUser();\n      history.push(\"/\");\n    }\n  }\n\n  async function handleUpdateAccount(values, { setErrors }) {\n    try {\n      const formData = new FormData();\n      formData.append(\"email\", values.email);\n      formData.append(\"username\", values.username);\n      formData.append(\"image\", croppedImage ?? imageUrl);\n      const { data } = await updateAccount(formData);\n\n      if (data) {\n        setUser(data);\n        toast({\n          title: \"Account Updated ðŸ˜Ž \",\n          status: \"success\",\n          duration: 4000,\n          isClosable: true,\n        });\n      }\n    } catch (error) {\n      setErrors(toErrorMap(error));\n    }\n  }\n\n  function handleSelectImage(event) {\n    if (!event.currentTarget.files) return;\n\n    setCropImage(URL.createObjectURL(event.currentTarget.files[0]));\n    cropperOnOpen();\n  }\n\n  function applyCrop(file) {\n    setImageUrl(URL.createObjectURL(file));\n    setCropImage(new File([file], \"avatar\"));\n    cropperOnClose();\n  }\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <Flex minHeight=\"100vh\" width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box px={4} width=\"full\" maxWidth=\"500px\">\n        <Flex mb=\"4\" justify=\"center\">\n          <Heading fontSize=\"24px\">MY ACCOUNT</Heading>\n        </Flex>\n        <Box p={4} borderRadius={4} background=\"brandGray.light\">\n          <Box>\n            <Formik\n              initialValues={{\n                email: user.email,\n                username: user.username,\n                image: null,\n              }}\n              validationSchema={UserSchema}\n              onSubmit={handleUpdateAccount}\n            >\n              {({ isSubmitting, values }) => (\n                <Form>\n                  <Flex mb=\"4\" justify=\"center\">\n                    <Tooltip label=\"Change Avatar\" aria-label=\"Change Avatar\">\n                      <Avatar\n                        size=\"xl\"\n                        name={user.username}\n                        src={imageUrl || user.image}\n                        _hover={{ cursor: \"pointer\", opacity: 0.5 }}\n                        onClick={() => inputFile.current.click()}\n                      />\n                    </Tooltip>\n                    <input\n                      type=\"file\"\n                      name=\"image\"\n                      accept=\"image/*\"\n                      ref={inputFile}\n                      hidden\n                      onChange={handleSelectImage}\n                    />\n                  </Flex>\n                  <Box my={4}>\n                    <InputField\n                      value={values.email}\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      label=\"Email\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                    />\n\n                    <InputField\n                      value={values.username}\n                      placeholder=\"Username\"\n                      label=\"Username\"\n                      name=\"username\"\n                      autoComplete=\"username\"\n                    />\n\n                    <Flex my={8} align={\"end\"}>\n                      <Spacer />\n                      <Button\n                        mr={4}\n                        colorScheme=\"white\"\n                        variant=\"outline\"\n                        onClick={history.goBack}\n                        fontSize={\"14px\"}\n                      >\n                        Close\n                      </Button>\n\n                      <LightMode>\n                        <Button\n                          type=\"submit\"\n                          colorScheme=\"green\"\n                          isLoading={isSubmitting}\n                          fontSize={\"14px\"}\n                        >\n                          Update\n                        </Button>\n                      </LightMode>\n                    </Flex>\n                  </Box>\n                </Form>\n              )}\n            </Formik>\n          </Box>\n          <Divider my={\"4\"} />\n          <Flex>\n            <Heading fontSize=\"18px\">PASSWORD AND AUTHENTICATION</Heading>\n          </Flex>\n          <Flex mt=\"4\">\n            <Button\n              background=\"highlight.standard\"\n              color=\"white\"\n              type=\"submit\"\n              _hover={{ bg: \"highlight.hover\" }}\n              _active={{ bg: \"highlight.active\" }}\n              _focus={{ boxShadow: \"none\" }}\n              onClick={onOpen}\n              fontSize={\"14px\"}\n            >\n              Change Password\n            </Button>\n\n            <Spacer />\n            <Button\n              colorScheme=\"red\"\n              variant=\"outline\"\n              onClick={handleLogout}\n              fontSize={\"14px\"}\n            >\n              Logout\n            </Button>\n          </Flex>\n        </Box>\n      </Box>\n      {isOpen && <ChangePasswordModal isOpen={isOpen} onClose={onClose} />}\n      {cropperIsOpen && (\n        <CropImageModal\n          isOpen={cropperIsOpen}\n          onClose={cropperOnClose}\n          initialImage={cropImage}\n          applyCrop={applyCrop}\n        />\n      )}\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}