{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport getSocket from \"../getSocket\";\nexport default function useMemberSocket(guildId, key) {\n  _s();\n\n  const cache = useQueryClient();\n  useEffect(() => {\n    const socket = getSocket();\n    socket.emit(\"joinGuild\", guildId);\n    socket.on(\"add_member\", newMember => {\n      cache.setQueryData(key, data => {\n        return [...data, newMember].sort((a, b) => a.username.localeCompare(b.username));\n      });\n    });\n    socket.on(\"remove_member\", memberId => {\n      cache.setQueryData(key, data => {\n        return [...(data === null || data === void 0 ? void 0 : data.filter(m => m.id !== memberId))];\n      });\n    });\n    socket.on(\"toggle_online\", memberId => {\n      cache.invalidateQueries(key);\n    }); // //setQueryData(key, (data) => {\n    //   const index = data?.findIndex((m) => m.id === memberId);\n    //   if (index !== -1) {\n    //     data[index].isOnline = true;\n    //   }\n    //   return data;\n    // });\n\n    socket.on(\"toggle_offline\", memberId => {\n      cache.setQueryData(key, data => {\n        const index = data === null || data === void 0 ? void 0 : data.findIndex(m => m.id === memberId);\n\n        if (index !== -1) {\n          data[index].isOnline = false;\n        }\n\n        return data;\n      });\n    });\n    return () => {\n      socket.emit(\"leaveRoom\", guildId);\n      socket.disconnect();\n    };\n  }, [key, cache, guildId]);\n}\n\n_s(useMemberSocket, \"yKPUtBryQjcykj4wN076+QCSH/g=\", false, function () {\n  return [useQueryClient];\n});","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/api/ws/useMemberSocket.js"],"names":["useEffect","useQueryClient","getSocket","useMemberSocket","guildId","key","cache","socket","emit","on","newMember","setQueryData","data","sort","a","b","username","localeCompare","memberId","filter","m","id","invalidateQueries","index","findIndex","isOnline","disconnect"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,eAAe,SAASC,eAAT,CAAyBC,OAAzB,EAAkCC,GAAlC,EAAuC;AAAA;;AACpD,QAAMC,KAAK,GAAGL,cAAc,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,MAAM,GAAGL,SAAS,EAAxB;AACAK,IAAAA,MAAM,CAACC,IAAP,CAAY,WAAZ,EAAyBJ,OAAzB;AACAG,IAAAA,MAAM,CAACE,EAAP,CAAU,YAAV,EAAyBC,SAAD,IAAe;AACrCJ,MAAAA,KAAK,CAACK,YAAN,CAAmBN,GAAnB,EAAyBO,IAAD,IAAU;AAChC,eAAO,CAAC,GAAGA,IAAJ,EAAUF,SAAV,EAAqBG,IAArB,CAA0B,CAACC,CAAD,EAAIC,CAAJ,KAC/BD,CAAC,CAACE,QAAF,CAAWC,aAAX,CAAyBF,CAAC,CAACC,QAA3B,CADK,CAAP;AAGD,OAJD;AAKD,KAND;AAQAT,IAAAA,MAAM,CAACE,EAAP,CAAU,eAAV,EAA4BS,QAAD,IAAc;AACvCZ,MAAAA,KAAK,CAACK,YAAN,CAAmBN,GAAnB,EAAyBO,IAAD,IAAU;AAChC,eAAO,CAAC,IAAGA,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEO,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASH,QAA7B,CAAH,CAAD,CAAP;AACD,OAFD;AAGD,KAJD;AAMAX,IAAAA,MAAM,CAACE,EAAP,CAAU,eAAV,EAA4BS,QAAD,IAAc;AACvCZ,MAAAA,KAAK,CAACgB,iBAAN,CAAwBjB,GAAxB;AACD,KAFD,EAjBc,CAqBd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAE,IAAAA,MAAM,CAACE,EAAP,CAAU,gBAAV,EAA6BS,QAAD,IAAc;AACxCZ,MAAAA,KAAK,CAACK,YAAN,CAAmBN,GAAnB,EAAyBO,IAAD,IAAU;AAChC,cAAMW,KAAK,GAAGX,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEY,SAAN,CAAiBJ,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASH,QAAhC,CAAd;;AACA,YAAIK,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBX,UAAAA,IAAI,CAACW,KAAD,CAAJ,CAAYE,QAAZ,GAAuB,KAAvB;AACD;;AACD,eAAOb,IAAP;AACD,OAND;AAOD,KARD;AAUA,WAAO,MAAM;AACXL,MAAAA,MAAM,CAACC,IAAP,CAAY,WAAZ,EAAyBJ,OAAzB;AACAG,MAAAA,MAAM,CAACmB,UAAP;AACD,KAHD;AAID,GA3CQ,EA2CN,CAACrB,GAAD,EAAMC,KAAN,EAAaF,OAAb,CA3CM,CAAT;AA4CD;;GA/CuBD,e;UACRF,c","sourcesContent":["import { useEffect } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport getSocket from \"../getSocket\";\n\nexport default function useMemberSocket(guildId, key) {\n  const cache = useQueryClient();\n\n  useEffect(() => {\n    const socket = getSocket();\n    socket.emit(\"joinGuild\", guildId);\n    socket.on(\"add_member\", (newMember) => {\n      cache.setQueryData(key, (data) => {\n        return [...data, newMember].sort((a, b) =>\n          a.username.localeCompare(b.username)\n        );\n      });\n    });\n\n    socket.on(\"remove_member\", (memberId) => {\n      cache.setQueryData(key, (data) => {\n        return [...data?.filter((m) => m.id !== memberId)];\n      });\n    });\n\n    socket.on(\"toggle_online\", (memberId) => {\n      cache.invalidateQueries(key);\n    });\n\n    // //setQueryData(key, (data) => {\n    //   const index = data?.findIndex((m) => m.id === memberId);\n    //   if (index !== -1) {\n    //     data[index].isOnline = true;\n    //   }\n    //   return data;\n    // });\n\n    socket.on(\"toggle_offline\", (memberId) => {\n      cache.setQueryData(key, (data) => {\n        const index = data?.findIndex((m) => m.id === memberId);\n        if (index !== -1) {\n          data[index].isOnline = false;\n        }\n        return data;\n      });\n    });\n\n    return () => {\n      socket.emit(\"leaveRoom\", guildId);\n      socket.disconnect();\n    };\n  }, [key, cache, guildId]);\n}\n"]},"metadata":{},"sourceType":"module"}