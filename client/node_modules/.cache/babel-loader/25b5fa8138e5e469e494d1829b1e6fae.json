{"ast":null,"code":"import*as yup from\"yup\";export var LoginSchema=yup.object().shape({email:yup.string().required(\"Email is required\").defined(),password:yup.string().required(\"Password is required\").defined()});export var RegisterSchema=yup.object().shape({username:yup.string().min(3).max(30).trim().required(\"Username is required\").defined(),email:yup.string().email().lowercase().required(\"Email is required\").defined(),password:yup.string().min(6,\"Password must be at least 6 characters long\").max(150).required(\"Password is required\").defined()});export var UserSchema=yup.object().shape({email:yup.string().email().lowercase().required(\"Email is required\").defined(),username:yup.string().min(3).max(30).trim().required(\"Username is required\").defined()});export var ResetPasswordSchema=yup.object().shape({newPassword:yup.string().min(6,\"Password must be at least 6 characters long\").max(150).required(\"New password is required\").defined(),confirmNewPassword:yup.string().oneOf([yup.ref(\"newPassword\"),undefined],\"Passwords do not match\").required(\"Confirm new password is required\").defined()});export var ChangePasswordSchema=yup.object().shape({currentPassword:yup.string().required(\"Old Password is required\").defined(),newPassword:yup.string().min(6,\"Password must be at least 6 characters long\").max(150).required(\"New password is required\").defined(),confirmNewPassword:yup.string().oneOf([yup.ref(\"newPassword\"),undefined],\"Passwords do not match\").required(\"Confirm new password is required\").defined()});export var ForgotPasswordSchema=yup.object().shape({email:yup.string().email().lowercase().required(\"Email is required\").defined()});","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/validation/auth.schema.js"],"names":["yup","LoginSchema","object","shape","email","string","required","defined","password","RegisterSchema","username","min","max","trim","lowercase","UserSchema","ResetPasswordSchema","newPassword","confirmNewPassword","oneOf","ref","undefined","ChangePasswordSchema","currentPassword","ForgotPasswordSchema"],"mappings":"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","sourcesContent":["import * as yup from \"yup\";\n\nexport const LoginSchema = yup.object().shape({\n  email: yup.string().required(\"Email is required\").defined(),\n  password: yup.string().required(\"Password is required\").defined(),\n});\n\nexport const RegisterSchema = yup.object().shape({\n  username: yup\n    .string()\n    .min(3)\n    .max(30)\n    .trim()\n    .required(\"Username is required\")\n    .defined(),\n  email: yup\n    .string()\n    .email()\n    .lowercase()\n    .required(\"Email is required\")\n    .defined(),\n  password: yup\n    .string()\n    .min(6, \"Password must be at least 6 characters long\")\n    .max(150)\n    .required(\"Password is required\")\n    .defined(),\n});\n\nexport const UserSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email()\n    .lowercase()\n    .required(\"Email is required\")\n    .defined(),\n  username: yup\n    .string()\n    .min(3)\n    .max(30)\n    .trim()\n    .required(\"Username is required\")\n    .defined(),\n});\n\nexport const ResetPasswordSchema = yup.object().shape({\n  newPassword: yup\n    .string()\n    .min(6, \"Password must be at least 6 characters long\")\n    .max(150)\n    .required(\"New password is required\")\n    .defined(),\n  confirmNewPassword: yup\n    .string()\n    .oneOf([yup.ref(\"newPassword\"), undefined], \"Passwords do not match\")\n    .required(\"Confirm new password is required\")\n    .defined(),\n});\n\nexport const ChangePasswordSchema = yup.object().shape({\n  currentPassword: yup.string().required(\"Old Password is required\").defined(),\n  newPassword: yup\n    .string()\n    .min(6, \"Password must be at least 6 characters long\")\n    .max(150)\n    .required(\"New password is required\")\n    .defined(),\n  confirmNewPassword: yup\n    .string()\n    .oneOf([yup.ref(\"newPassword\"), undefined], \"Passwords do not match\")\n    .required(\"Confirm new password is required\")\n    .defined(),\n});\n\nexport const ForgotPasswordSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email()\n    .lowercase()\n    .required(\"Email is required\")\n    .defined(),\n});\n"]},"metadata":{},"sourceType":"module"}