{"ast":null,"code":"import{GridItem,UnorderedList}from\"@chakra-ui/react\";import{getGuildMembers}from\"api/handler/guilds\";import useMemberSocket from\"api/ws/useMemberSocket\";import MemberListItem from\"components/items/MemberListItem\";import React from\"react\";import{useQuery}from\"react-query\";import{useParams}from\"react-router-dom\";import{mKey}from\"utils/querykeys\";import OnlineLabel from\"components/sections/OnlineLabel\";import memberScrollbarCss from\"./css/MemberScrollerCSS\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function MemberList(){var _useParams=useParams(),guildId=_useParams.guildId;var key=mKey(guildId);var _useQuery=useQuery(key,function(){return getGuildMembers(guildId).then(function(res){return res.data;});}),data=_useQuery.data;var online=[];var offline=[];if(data){data.forEach(function(member){if(member.isOnline){online.push(member);}else{offline.push(member);}});}useMemberSocket(guildId,key);return/*#__PURE__*/_jsx(GridItem,{gridColumn:4,gridRow:\"1 / 4\",bg:\"memberList\",overflowY:\"hidden\",_hover:{overflowY:\"auto\"},css:memberScrollbarCss,children:/*#__PURE__*/_jsxs(UnorderedList,{listStyleType:\"none\",ml:\"0\",children:[/*#__PURE__*/_jsx(OnlineLabel,{label:\"online\\u2014\".concat(online.length)}),online.map(function(m){return/*#__PURE__*/_jsx(MemberListItem,{member:m},m.id);}),/*#__PURE__*/_jsx(OnlineLabel,{label:\"offline\\u2014\".concat(offline.length)}),offline.map(function(m){return/*#__PURE__*/_jsx(MemberListItem,{member:m},m.id);})]})});}","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/layouts/guild/MemberList.js"],"names":["GridItem","UnorderedList","getGuildMembers","useMemberSocket","MemberListItem","React","useQuery","useParams","mKey","OnlineLabel","memberScrollbarCss","MemberList","guildId","key","then","res","data","online","offline","forEach","member","isOnline","push","overflowY","length","map","m","id"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,aAAnB,KAAwC,kBAAxC,CACA,OAASC,eAAT,KAAgC,oBAAhC,CACA,MAAOC,CAAAA,eAAP,KAA4B,wBAA5B,CACA,MAAOC,CAAAA,cAAP,KAA2B,iCAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,OAASC,IAAT,KAAqB,iBAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,iCAAxB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,yBAA/B,C,wFAEA,cAAe,SAASC,CAAAA,UAAT,EAAsB,gBACfJ,SAAS,EADM,CAC3BK,OAD2B,YAC3BA,OAD2B,CAEnC,GAAMC,CAAAA,GAAG,CAAGL,IAAI,CAACI,OAAD,CAAhB,CAFmC,cAGlBN,QAAQ,CAACO,GAAD,CAAM,iBAC7BX,CAAAA,eAAe,CAACU,OAAD,CAAf,CAAyBE,IAAzB,CAA8B,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAb,EAA9B,CAD6B,EAAN,CAHU,CAG3BA,IAH2B,WAG3BA,IAH2B,CAOnC,GAAMC,CAAAA,MAAM,CAAG,EAAf,CACA,GAAMC,CAAAA,OAAO,CAAG,EAAhB,CAEA,GAAIF,IAAJ,CAAU,CACRA,IAAI,CAACG,OAAL,CAAa,SAACC,MAAD,CAAY,CACvB,GAAIA,MAAM,CAACC,QAAX,CAAqB,CACnBJ,MAAM,CAACK,IAAP,CAAYF,MAAZ,EACD,CAFD,IAEO,CACLF,OAAO,CAACI,IAAR,CAAaF,MAAb,EACD,CACF,CAND,EAOD,CAEDjB,eAAe,CAACS,OAAD,CAAUC,GAAV,CAAf,CAEA,mBACE,KAAC,QAAD,EACE,UAAU,CAAE,CADd,CAEE,OAAO,CAAE,OAFX,CAGE,EAAE,CAAC,YAHL,CAIE,SAAS,CAAC,QAJZ,CAKE,MAAM,CAAE,CAAEU,SAAS,CAAE,MAAb,CALV,CAME,GAAG,CAAEb,kBANP,uBAQE,MAAC,aAAD,EAAe,aAAa,CAAC,MAA7B,CAAoC,EAAE,CAAC,GAAvC,wBACE,KAAC,WAAD,EAAa,KAAK,uBAAYO,MAAM,CAACO,MAAnB,CAAlB,EADF,CAEGP,MAAM,CAACQ,GAAP,CAAW,SAACC,CAAD,qBACV,KAAC,cAAD,EAA2B,MAAM,CAAEA,CAAnC,EAAqBA,CAAC,CAACC,EAAvB,CADU,EAAX,CAFH,cAKE,KAAC,WAAD,EAAa,KAAK,wBAAaT,OAAO,CAACM,MAArB,CAAlB,EALF,CAMGN,OAAO,CAACO,GAAR,CAAY,SAACC,CAAD,qBACX,KAAC,cAAD,EAA2B,MAAM,CAAEA,CAAnC,EAAqBA,CAAC,CAACC,EAAvB,CADW,EAAZ,CANH,GARF,EADF,CAqBD","sourcesContent":["import { GridItem, UnorderedList } from \"@chakra-ui/react\";\nimport { getGuildMembers } from \"api/handler/guilds\";\nimport useMemberSocket from \"api/ws/useMemberSocket\";\nimport MemberListItem from \"components/items/MemberListItem\";\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { mKey } from \"utils/querykeys\";\nimport OnlineLabel from \"components/sections/OnlineLabel\";\nimport memberScrollbarCss from \"./css/MemberScrollerCSS\";\n\nexport default function MemberList() {\n  const { guildId } = useParams();\n  const key = mKey(guildId);\n  const { data } = useQuery(key, () =>\n    getGuildMembers(guildId).then((res) => res.data)\n  );\n\n  const online = [];\n  const offline = [];\n\n  if (data) {\n    data.forEach((member) => {\n      if (member.isOnline) {\n        online.push(member);\n      } else {\n        offline.push(member);\n      }\n    });\n  }\n\n  useMemberSocket(guildId, key);\n\n  return (\n    <GridItem\n      gridColumn={4}\n      gridRow={\"1 / 4\"}\n      bg=\"memberList\"\n      overflowY=\"hidden\"\n      _hover={{ overflowY: \"auto\" }}\n      css={memberScrollbarCss}\n    >\n      <UnorderedList listStyleType=\"none\" ml=\"0\">\n        <OnlineLabel label={`online—${online.length}`} />\n        {online.map((m) => (\n          <MemberListItem key={m.id} member={m} />\n        ))}\n        <OnlineLabel label={`offline—${offline.length}`} />\n        {offline.map((m) => (\n          <MemberListItem key={m.id} member={m} />\n        ))}\n      </UnorderedList>\n    </GridItem>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}