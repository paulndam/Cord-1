{"ast":null,"code":"import _regeneratorRuntime from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Avatar,AvatarBadge,Flex,Icon,ListItem,Text}from\"@chakra-ui/react\";import{Link,useHistory,useLocation}from\"react-router-dom\";import{IoMdClose}from\"react-icons/io\";import{useQueryClient}from\"react-query\";import{closeDirectMessage}from\"api/handler/dm\";import{dmKey}from\"utils/querykeys\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function DMListItem(_ref){var dm=_ref.dm;var currentPath=\"/channels/me/\".concat(dm.id);var history=useHistory();var location=useLocation();var isActive=location.pathname===currentPath;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showCloseButton=_useState2[0],setShowButton=_useState2[1];var cache=useQueryClient();function handleCloseDM(_x){return _handleCloseDM.apply(this,arguments);}function _handleCloseDM(){_handleCloseDM=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();_context.next=3;return closeDirectMessage(dm.id);case 3:cache.setQueryData(dmKey,function(d){return d===null||d===void 0?void 0:d.filter(function(channel){return channel.id!==dm.id;});});if(isActive){history.replace(\"/channels/me\");}case 5:case\"end\":return _context.stop();}}},_callee);}));return _handleCloseDM.apply(this,arguments);}return/*#__PURE__*/_jsx(Link,{to:\"/channels/me/\".concat(dm.id),children:/*#__PURE__*/_jsx(ListItem,{p:\"2\",mx:\"2\",color:isActive?\"#fff\":\"brandGray.accent\",_hover:{bg:\"brandGray.light\",borderRadius:\"5px\",cursor:\"pointer\",color:\"#fff\"},bg:isActive?\"brandGray.active\":undefined,onMouseLeave:function onMouseLeave(){return setShowButton(false);},onMouseEnter:function onMouseEnter(){return setShowButton(true);},children:/*#__PURE__*/_jsxs(Flex,{align:\"center\",justify:\"space-between\",children:[/*#__PURE__*/_jsxs(Flex,{align:\"center\",children:[/*#__PURE__*/_jsx(Avatar,{size:\"sm\",src:dm.user.image,children:/*#__PURE__*/_jsx(AvatarBadge,{boxSize:\"1.25em\",bg:dm.user.isOnline?\"green.500\":\"gray.500\"})}),/*#__PURE__*/_jsx(Text,{ml:\"2\",children:dm.user.username})]}),showCloseButton&&/*#__PURE__*/_jsx(Icon,{as:IoMdClose,onClick:handleCloseDM})]})})});}","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/items/DMListItem.js"],"names":["React","useState","Avatar","AvatarBadge","Flex","Icon","ListItem","Text","Link","useHistory","useLocation","IoMdClose","useQueryClient","closeDirectMessage","dmKey","DMListItem","dm","currentPath","id","history","location","isActive","pathname","showCloseButton","setShowButton","cache","handleCloseDM","event","preventDefault","setQueryData","d","filter","channel","replace","bg","borderRadius","cursor","color","undefined","user","image","isOnline","username"],"mappings":"ykBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OACEC,MADF,CAEEC,WAFF,CAGEC,IAHF,CAIEC,IAJF,CAKEC,QALF,CAMEC,IANF,KAOO,kBAPP,CAQA,OAASC,IAAT,CAAeC,UAAf,CAA2BC,WAA3B,KAA8C,kBAA9C,CACA,OAASC,SAAT,KAA0B,gBAA1B,CACA,OAASC,cAAT,KAA+B,aAA/B,CACA,OAASC,kBAAT,KAAmC,gBAAnC,CACA,OAASC,KAAT,KAAsB,iBAAtB,C,wFAEA,cAAe,SAASC,CAAAA,UAAT,MAA4B,IAANC,CAAAA,EAAM,MAANA,EAAM,CACzC,GAAMC,CAAAA,WAAW,wBAAmBD,EAAE,CAACE,EAAtB,CAAjB,CACA,GAAMC,CAAAA,OAAO,CAAGV,UAAU,EAA1B,CACA,GAAMW,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA,GAAMW,CAAAA,QAAQ,CAAGD,QAAQ,CAACE,QAAT,GAAsBL,WAAvC,CAJyC,cAKAhB,QAAQ,CAAC,KAAD,CALR,wCAKlCsB,eALkC,eAKjBC,aALiB,eAMzC,GAAMC,CAAAA,KAAK,CAAGb,cAAc,EAA5B,CANyC,QAQ1Bc,CAAAA,aAR0B,mJAQzC,iBAA6BC,KAA7B,kHACEA,KAAK,CAACC,cAAN,GADF,sBAEQf,CAAAA,kBAAkB,CAACG,EAAE,CAACE,EAAJ,CAF1B,QAGEO,KAAK,CAACI,YAAN,CAAmBf,KAAnB,CAA0B,SAACgB,CAAD,CAAO,CAC/B,MAAOA,CAAAA,CAAP,SAAOA,CAAP,iBAAOA,CAAC,CAAEC,MAAH,CAAU,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACd,EAAR,GAAeF,EAAE,CAACE,EAA/B,EAAV,CAAP,CACD,CAFD,EAGA,GAAIG,QAAJ,CAAc,CACZF,OAAO,CAACc,OAAR,CAAgB,cAAhB,EACD,CARH,sDARyC,gDAmBzC,mBACE,KAAC,IAAD,EAAM,EAAE,wBAAkBjB,EAAE,CAACE,EAArB,CAAR,uBACE,KAAC,QAAD,EACE,CAAC,CAAC,GADJ,CAEE,EAAE,CAAC,GAFL,CAGE,KAAK,CAAEG,QAAQ,CAAG,MAAH,CAAY,kBAH7B,CAIE,MAAM,CAAE,CACNa,EAAE,CAAE,iBADE,CAENC,YAAY,CAAE,KAFR,CAGNC,MAAM,CAAE,SAHF,CAINC,KAAK,CAAE,MAJD,CAJV,CAUE,EAAE,CAAEhB,QAAQ,CAAG,kBAAH,CAAwBiB,SAVtC,CAWE,YAAY,CAAE,8BAAMd,CAAAA,aAAa,CAAC,KAAD,CAAnB,EAXhB,CAYE,YAAY,CAAE,8BAAMA,CAAAA,aAAa,CAAC,IAAD,CAAnB,EAZhB,uBAcE,MAAC,IAAD,EAAM,KAAK,CAAE,QAAb,CAAuB,OAAO,CAAE,eAAhC,wBACE,MAAC,IAAD,EAAM,KAAK,CAAC,QAAZ,wBACE,KAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,GAAG,CAAER,EAAE,CAACuB,IAAH,CAAQC,KAA/B,uBACE,KAAC,WAAD,EACE,OAAO,CAAC,QADV,CAEE,EAAE,CAAExB,EAAE,CAACuB,IAAH,CAAQE,QAAR,CAAmB,WAAnB,CAAiC,UAFvC,EADF,EADF,cAOE,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,UAAczB,EAAE,CAACuB,IAAH,CAAQG,QAAtB,EAPF,GADF,CAUGnB,eAAe,eAAI,KAAC,IAAD,EAAM,EAAE,CAAEZ,SAAV,CAAqB,OAAO,CAAEe,aAA9B,EAVtB,GAdF,EADF,EADF,CA+BD","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Avatar,\n  AvatarBadge,\n  Flex,\n  Icon,\n  ListItem,\n  Text,\n} from \"@chakra-ui/react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { IoMdClose } from \"react-icons/io\";\nimport { useQueryClient } from \"react-query\";\nimport { closeDirectMessage } from \"api/handler/dm\";\nimport { dmKey } from \"utils/querykeys\";\n\nexport default function DMListItem({ dm }) {\n  const currentPath = `/channels/me/${dm.id}`;\n  const history = useHistory();\n  const location = useLocation();\n  const isActive = location.pathname === currentPath;\n  const [showCloseButton, setShowButton] = useState(false);\n  const cache = useQueryClient();\n\n  async function handleCloseDM(event) {\n    event.preventDefault();\n    await closeDirectMessage(dm.id);\n    cache.setQueryData(dmKey, (d) => {\n      return d?.filter((channel) => channel.id !== dm.id);\n    });\n    if (isActive) {\n      history.replace(\"/channels/me\");\n    }\n  }\n\n  return (\n    <Link to={`/channels/me/${dm.id}`}>\n      <ListItem\n        p=\"2\"\n        mx=\"2\"\n        color={isActive ? \"#fff\" : \"brandGray.accent\"}\n        _hover={{\n          bg: \"brandGray.light\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n          color: \"#fff\",\n        }}\n        bg={isActive ? \"brandGray.active\" : undefined}\n        onMouseLeave={() => setShowButton(false)}\n        onMouseEnter={() => setShowButton(true)}\n      >\n        <Flex align={\"center\"} justify={\"space-between\"}>\n          <Flex align=\"center\">\n            <Avatar size=\"sm\" src={dm.user.image}>\n              <AvatarBadge\n                boxSize=\"1.25em\"\n                bg={dm.user.isOnline ? \"green.500\" : \"gray.500\"}\n              />\n            </Avatar>\n            <Text ml=\"2\">{dm.user.username}</Text>\n          </Flex>\n          {showCloseButton && <Icon as={IoMdClose} onClick={handleCloseDM} />}\n        </Flex>\n      </ListItem>\n    </Link>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}