{"ast":null,"code":"var _jsxFileName = \"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/menus/GuildMenu.js\",\n    _s = $RefreshSig$();\n\nimport { Flex, GridItem, Heading, Icon, Menu, MenuButton, MenuDivider, useDisclosure } from \"@chakra-ui/react\";\nimport { leaveGuild } from \"api/handler/guilds\";\nimport React from \"react\";\nimport { FaUserEdit, FaUserPlus } from \"react-icons/fa\";\nimport { FiChevronDown, FiX } from \"react-icons/fi\";\nimport { HiLogout } from \"react-icons/hi\";\nimport { MdAddCircle } from \"react-icons/md\";\nimport { RiSettings5Fill } from \"react-icons/ri\";\nimport { useQueryClient } from \"react-query\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\nimport { gKey } from \"utils/querykeys\";\nimport EditMemberModal from \"components/modals/EditMemberModal\";\nimport GuildSettingsModal from \"components/modals/GuildSettingsModal\";\nimport { StyledMenuItem, StyledRedMenuItem } from \"./StyledMenuItem\";\nimport StyledMenuList from \"./StyledMenuList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GuildMenu({\n  channelOpen,\n  inviteOpen\n}) {\n  _s();\n\n  const {\n    guildId\n  } = useParams();\n  const guild = useGetCurrentGuild(guildId);\n  const history = useHistory();\n  const cache = useQueryClient();\n  const user = userStore(state => state.current);\n  const isOwner = (guild === null || guild === void 0 ? void 0 : guild.ownerId) === (user === null || user === void 0 ? void 0 : user.id);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const {\n    isOpen: memberOpen,\n    onOpen: memberOnOpen,\n    onClose: memberOnClose\n  } = useDisclosure();\n\n  const handleLeave = async () => {\n    const {\n      data\n    } = await leaveGuild(guildId);\n\n    if (data) {\n      cache.setQueryData(gKey, d => {\n        return d.filter(g => g.id !== (guild === null || guild === void 0 ? void 0 : guild.id));\n      });\n      history.replace(\"/channels/me\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridItem, {\n    gridColumn: 2,\n    gridRow: \"1\",\n    bg: \"brandGray.light\",\n    padding: \"10px\",\n    zIndex: \"2\",\n    boxShadow: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      placement: \"bottom-end\",\n      isLazy: true,\n      children: ({\n        isOpen\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          justify: \"space-between\",\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            fontSize: \"20px\",\n            children: guild === null || guild === void 0 ? void 0 : guild.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MenuButton, {\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              as: !isOpen ? FiChevronDown : FiX\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledMenuList, {\n          children: [/*#__PURE__*/_jsxDEV(StyledMenuItem, {\n            label: \"Invite People\",\n            icon: FaUserPlus,\n            handleClick: inviteOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), isOwner && /*#__PURE__*/_jsxDEV(StyledMenuItem, {\n            label: \"Server Settings\",\n            icon: RiSettings5Fill,\n            handleClick: onOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), isOwner && /*#__PURE__*/_jsxDEV(StyledMenuItem, {\n            label: \"Create Channel\",\n            icon: MdAddCircle,\n            handleClick: channelOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MenuDivider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledMenuItem, {\n            label: \"Change Appearance\",\n            icon: FaUserEdit,\n            handleClick: memberOnOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), !isOwner && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(MenuDivider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledRedMenuItem, {\n              label: \"Leave Server\",\n              icon: HiLogout,\n              handleClick: handleLeave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(GuildSettingsModal, {\n      guildId: guildId,\n      isOpen: isOpen,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), memberOpen && /*#__PURE__*/_jsxDEV(EditMemberModal, {\n      guildId: guildId,\n      isOpen: memberOpen,\n      onClose: memberOnClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GuildMenu, \"P8zoffFZLqEggRtyJ62IWFcb5Bs=\", false, function () {\n  return [useParams, useGetCurrentGuild, useHistory, useQueryClient, useDisclosure, useDisclosure];\n});\n\n_c = GuildMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuildMenu\");","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/menus/GuildMenu.js"],"names":["Flex","GridItem","Heading","Icon","Menu","MenuButton","MenuDivider","useDisclosure","leaveGuild","React","FaUserEdit","FaUserPlus","FiChevronDown","FiX","HiLogout","MdAddCircle","RiSettings5Fill","useQueryClient","useHistory","useParams","userStore","useGetCurrentGuild","gKey","EditMemberModal","GuildSettingsModal","StyledMenuItem","StyledRedMenuItem","StyledMenuList","GuildMenu","channelOpen","inviteOpen","guildId","guild","history","cache","user","state","current","isOwner","ownerId","id","isOpen","onOpen","onClose","memberOpen","memberOnOpen","memberOnClose","handleLeave","data","setQueryData","d","filter","g","replace","name"],"mappings":"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","sourcesContent":["import {\n  Flex,\n  GridItem,\n  Heading,\n  Icon,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { leaveGuild } from \"api/handler/guilds\";\nimport React from \"react\";\nimport { FaUserEdit, FaUserPlus } from \"react-icons/fa\";\nimport { FiChevronDown, FiX } from \"react-icons/fi\";\nimport { HiLogout } from \"react-icons/hi\";\nimport { MdAddCircle } from \"react-icons/md\";\nimport { RiSettings5Fill } from \"react-icons/ri\";\nimport { useQueryClient } from \"react-query\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\nimport { gKey } from \"utils/querykeys\";\nimport EditMemberModal from \"components/modals/EditMemberModal\";\nimport GuildSettingsModal from \"components/modals/GuildSettingsModal\";\nimport { StyledMenuItem, StyledRedMenuItem } from \"./StyledMenuItem\";\nimport StyledMenuList from \"./StyledMenuList\";\n\nexport default function GuildMenu({ channelOpen, inviteOpen }) {\n  const { guildId } = useParams();\n  const guild = useGetCurrentGuild(guildId);\n  const history = useHistory();\n  const cache = useQueryClient();\n\n  const user = userStore((state) => state.current);\n  const isOwner = guild?.ownerId === user?.id;\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const {\n    isOpen: memberOpen,\n    onOpen: memberOnOpen,\n    onClose: memberOnClose,\n  } = useDisclosure();\n\n  const handleLeave = async () => {\n    const { data } = await leaveGuild(guildId);\n    if (data) {\n      cache.setQueryData(gKey, (d) => {\n        return d.filter((g) => g.id !== guild?.id);\n      });\n      history.replace(\"/channels/me\");\n    }\n  };\n\n  return (\n    <GridItem\n      gridColumn={2}\n      gridRow={\"1\"}\n      bg=\"brandGray.light\"\n      padding=\"10px\"\n      zIndex=\"2\"\n      boxShadow=\"md\"\n    >\n      <Menu placement=\"bottom-end\" isLazy>\n        {({ isOpen }) => (\n          <>\n            <Flex justify=\"space-between\" align=\"center\">\n              <Heading fontSize=\"20px\">{guild?.name}</Heading>\n              <MenuButton>\n                <Icon as={!isOpen ? FiChevronDown : FiX} />\n              </MenuButton>\n            </Flex>\n            <StyledMenuList>\n              <StyledMenuItem\n                label={\"Invite People\"}\n                icon={FaUserPlus}\n                handleClick={inviteOpen}\n              />\n              {isOwner && (\n                <StyledMenuItem\n                  label={\"Server Settings\"}\n                  icon={RiSettings5Fill}\n                  handleClick={onOpen}\n                />\n              )}\n              {isOwner && (\n                <StyledMenuItem\n                  label={\"Create Channel\"}\n                  icon={MdAddCircle}\n                  handleClick={channelOpen}\n                />\n              )}\n              <MenuDivider />\n              <StyledMenuItem\n                label={\"Change Appearance\"}\n                icon={FaUserEdit}\n                handleClick={memberOnOpen}\n              />\n              {!isOwner && (\n                <>\n                  <MenuDivider />\n                  <StyledRedMenuItem\n                    label={\"Leave Server\"}\n                    icon={HiLogout}\n                    handleClick={handleLeave}\n                  />\n                </>\n              )}\n            </StyledMenuList>\n          </>\n        )}\n      </Menu>\n      {isOpen && (\n        <GuildSettingsModal\n          guildId={guildId}\n          isOpen={isOpen}\n          onClose={onClose}\n        />\n      )}\n      {memberOpen && (\n        <EditMemberModal\n          guildId={guildId}\n          isOpen={memberOpen}\n          onClose={memberOnClose}\n        />\n      )}\n    </GridItem>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}