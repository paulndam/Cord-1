{"ast":null,"code":"var _jsxFileName = \"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/items/ChannelListItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Flex, Icon, ListItem, Text, useDisclosure } from \"@chakra-ui/react\";\nimport { FaHashtag, FaUserLock } from \"react-icons/fa\";\nimport { MdSettings } from \"react-icons/md\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport ChannelSettingsModal from \"components/modals/ChannelSettingsModal\";\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\nimport { ChannelNotificationIndicator } from \"components/shared/GuildPills\";\nimport { useQueryClient } from \"react-query\";\nimport { cKey } from \"utils/querykeys\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChannelListItem({\n  channel,\n  guildId\n}) {\n  _s();\n\n  const currentPath = `/channels/${guildId}/${channel.id}`;\n  const location = useLocation();\n  const isActive = location.pathname === currentPath;\n  const [showSettings, setShowSettings] = useState(false);\n  const current = userStore(state => state.current);\n  const guild = useGetCurrentGuild(guildId);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const cache = useQueryClient();\n  useEffect(() => {\n    if (channel.hasNotification && isActive) {\n      cache.setQueryData(cKey(guildId), d => {\n        const index = d === null || d === void 0 ? void 0 : d.findIndex(c => c.id === channel.id);\n\n        if (index !== -1) {\n          d[index] = { ...d[index],\n            hasNotification: false\n          };\n        }\n\n        return d;\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: currentPath,\n    children: /*#__PURE__*/_jsxDEV(ListItem, {\n      p: \"5px\",\n      m: \"0 10px\",\n      color: isActive || channel.hasNotification ? \"#fff\" : \"brandGray.accent\",\n      _hover: {\n        bg: \"brandGray.light\",\n        borderRadius: \"5px\",\n        cursor: \"pointer\",\n        color: \"#fff\"\n      },\n      bg: isActive ? \"brandGray.active\" : undefined,\n      mb: \"2px\",\n      onMouseLeave: () => setShowSettings(false),\n      onMouseEnter: () => setShowSettings(true),\n      children: [channel.hasNotification && /*#__PURE__*/_jsxDEV(ChannelNotificationIndicator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        align: \"center\",\n        justify: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            as: channel.isPublic ? FaHashtag : FaUserLock,\n            color: \"brandGray.accent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            ml: \"2\",\n            children: channel.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), (current === null || current === void 0 ? void 0 : current.id) === (guild === null || guild === void 0 ? void 0 : guild.ownerId) && (showSettings || isOpen) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            as: MdSettings,\n            color: \"brandGray.accent\",\n            fontSize: \"12px\",\n            _hover: {\n              color: \"#fff\"\n            },\n            onClick: e => {\n              e.preventDefault();\n              onOpen();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), isOpen && /*#__PURE__*/_jsxDEV(ChannelSettingsModal, {\n            guildId: guildId,\n            channelId: channel.id,\n            isOpen: isOpen,\n            onClose: onClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChannelListItem, \"8WvSJnJfnsCTsT+v9pcXDrC9SoM=\", false, function () {\n  return [useLocation, useGetCurrentGuild, useDisclosure, useQueryClient];\n});\n\n_c = ChannelListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChannelListItem\");","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/items/ChannelListItem.js"],"names":["React","useEffect","useState","Flex","Icon","ListItem","Text","useDisclosure","FaHashtag","FaUserLock","MdSettings","Link","useLocation","userStore","ChannelSettingsModal","useGetCurrentGuild","ChannelNotificationIndicator","useQueryClient","cKey","ChannelListItem","channel","guildId","currentPath","id","location","isActive","pathname","showSettings","setShowSettings","current","state","guild","isOpen","onOpen","onClose","cache","hasNotification","setQueryData","d","index","findIndex","c","bg","borderRadius","cursor","color","undefined","isPublic","name","ownerId","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Flex, Icon, ListItem, Text, useDisclosure } from \"@chakra-ui/react\";\nimport { FaHashtag, FaUserLock } from \"react-icons/fa\";\nimport { MdSettings } from \"react-icons/md\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport ChannelSettingsModal from \"components/modals/ChannelSettingsModal\";\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\nimport { ChannelNotificationIndicator } from \"components/shared/GuildPills\";\nimport { useQueryClient } from \"react-query\";\nimport { cKey } from \"utils/querykeys\";\n\nexport default function ChannelListItem({ channel, guildId }) {\n  const currentPath = `/channels/${guildId}/${channel.id}`;\n  const location = useLocation();\n  const isActive = location.pathname === currentPath;\n  const [showSettings, setShowSettings] = useState(false);\n\n  const current = userStore((state) => state.current);\n  const guild = useGetCurrentGuild(guildId);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const cache = useQueryClient();\n\n  useEffect(() => {\n    if (channel.hasNotification && isActive) {\n      cache.setQueryData(cKey(guildId), (d) => {\n        const index = d?.findIndex((c) => c.id === channel.id);\n        if (index !== -1) {\n          d[index] = { ...d[index], hasNotification: false };\n        }\n        return d;\n      });\n    }\n  });\n\n  return (\n    <Link to={currentPath}>\n      <ListItem\n        p=\"5px\"\n        m=\"0 10px\"\n        color={\n          isActive || channel.hasNotification ? \"#fff\" : \"brandGray.accent\"\n        }\n        _hover={{\n          bg: \"brandGray.light\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n          color: \"#fff\",\n        }}\n        bg={isActive ? \"brandGray.active\" : undefined}\n        mb=\"2px\"\n        onMouseLeave={() => setShowSettings(false)}\n        onMouseEnter={() => setShowSettings(true)}\n      >\n        {channel.hasNotification && <ChannelNotificationIndicator />}\n        <Flex align=\"center\" justify={\"space-between\"}>\n          <Flex align=\"center\">\n            <Icon\n              as={channel.isPublic ? FaHashtag : FaUserLock}\n              color={\"brandGray.accent\"}\n            />\n            <Text ml=\"2\">{channel.name}</Text>\n          </Flex>\n          {current?.id === guild?.ownerId && (showSettings || isOpen) && (\n            <>\n              <Icon\n                as={MdSettings}\n                color={\"brandGray.accent\"}\n                fontSize={\"12px\"}\n                _hover={{ color: \"#fff\" }}\n                onClick={(e) => {\n                  e.preventDefault();\n                  onOpen();\n                }}\n              />\n              {isOpen && (\n                <ChannelSettingsModal\n                  guildId={guildId}\n                  channelId={channel.id}\n                  isOpen={isOpen}\n                  onClose={onClose}\n                />\n              )}\n            </>\n          )}\n        </Flex>\n      </ListItem>\n    </Link>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}