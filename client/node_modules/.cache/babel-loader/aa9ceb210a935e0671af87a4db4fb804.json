{"ast":null,"code":"import _regeneratorRuntime from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,Checkbox,Input,InputGroup,InputRightElement,Modal,ModalBody,ModalCloseButton,ModalContent,ModalFooter,ModalHeader,ModalOverlay,Text,useClipboard}from\"@chakra-ui/react\";import{getInviteLink}from\"api/handler/guilds\";import React,{useEffect,useState}from\"react\";import{useParams}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function InviteModal(_ref){var isOpen=_ref.isOpen,onClose=_ref.onClose;var _useParams=useParams(),guildId=_useParams.guildId;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),inviteLink=_useState2[0],setInviteLink=_useState2[1];var _useClipboard=useClipboard(inviteLink),hasCopied=_useClipboard.hasCopied,onCopy=_useClipboard.onCopy;var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isPermanent=_useState4[0],setPermanent=_useState4[1];useEffect(function(){if(isOpen){var fetchLink=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$getInviteLink,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getInviteLink(guildId,isPermanent);case 2:_yield$getInviteLink=_context.sent;data=_yield$getInviteLink.data;if(data){setInviteLink(data);}case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchLink(){return _ref2.apply(this,arguments);};}();fetchLink();}},[isOpen,guildId,isPermanent]);return/*#__PURE__*/_jsxs(Modal,{isOpen:isOpen,onClose:onClose,isCentered:true,children:[/*#__PURE__*/_jsx(ModalOverlay,{}),/*#__PURE__*/_jsxs(ModalContent,{bg:\"brandGray.light\",children:[/*#__PURE__*/_jsx(ModalHeader,{textAlign:\"center\",fontWeight:\"bold\",pb:\"0\",children:\"Invite Link\"}),/*#__PURE__*/_jsx(ModalCloseButton,{}),/*#__PURE__*/_jsxs(ModalBody,{children:[/*#__PURE__*/_jsx(Text,{mb:\"4\",children:\"Share this link with others to grant access to this server\"}),/*#__PURE__*/_jsx(Checkbox,{onChange:function onChange(e){return setPermanent(e.target.checked);},mb:4,children:\"Make it unlimited / Never reset\"}),/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(Input,{bg:\"brandGray.dark\",borderColor:hasCopied?\"brandGreen\":\"black\",borderRadius:\"3px\",focusBorderColor:\"highlight.standard\",value:inviteLink,isReadOnly:true}),/*#__PURE__*/_jsx(InputRightElement,{width:\"4.5rem\",children:/*#__PURE__*/_jsx(Button,{h:\"1.75rem\",size:\"sm\",bg:hasCopied?\"brandGreen\":\"highlight.standard\",color:\"white\",type:\"submit\",fontSize:\"14px\",_hover:{bg:\"highlight.hover\"},_active:{bg:\"highlight.active\"},_focus:{boxShadow:\"none\"},onClick:onCopy,children:hasCopied?\"Copied\":\"Copy\"})})]}),/*#__PURE__*/_jsx(Text,{my:\"2\",fontSize:\"12px\",children:isPermanent?\"Your invite link won't expire\":\"Your invite link expires in 1 day and can only be used once\"})]}),/*#__PURE__*/_jsx(ModalFooter,{bg:\"brandGray.dark\"})]})]});}","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/modals/InviteModal.js"],"names":["Button","Checkbox","Input","InputGroup","InputRightElement","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Text","useClipboard","getInviteLink","React","useEffect","useState","useParams","InviteModal","isOpen","onClose","guildId","inviteLink","setInviteLink","hasCopied","onCopy","isPermanent","setPermanent","fetchLink","data","e","target","checked","bg","boxShadow"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Checkbox,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  useClipboard,\n} from \"@chakra-ui/react\";\nimport { getInviteLink } from \"api/handler/guilds\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function InviteModal({ isOpen, onClose }) {\n  const { guildId } = useParams();\n  const [inviteLink, setInviteLink] = useState(\"\");\n  const { hasCopied, onCopy } = useClipboard(inviteLink);\n  const [isPermanent, setPermanent] = useState(false);\n\n  useEffect(() => {\n    if (isOpen) {\n      async function fetchLink() {\n        const { data } = await getInviteLink(guildId, isPermanent);\n        if (data) {\n          setInviteLink(data);\n        }\n      }\n      fetchLink();\n    }\n  }, [isOpen, guildId, isPermanent]);\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent bg=\"brandGray.light\">\n        <ModalHeader textAlign=\"center\" fontWeight=\"bold\" pb={\"0\"}>\n          Invite Link\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Text mb=\"4\">\n            Share this link with others to grant access to this server\n          </Text>\n\n          <Checkbox onChange={(e) => setPermanent(e.target.checked)} mb={4}>\n            Make it unlimited / Never reset\n          </Checkbox>\n\n          <InputGroup>\n            <Input\n              bg=\"brandGray.dark\"\n              borderColor={hasCopied ? \"brandGreen\" : \"black\"}\n              borderRadius=\"3px\"\n              focusBorderColor=\"highlight.standard\"\n              value={inviteLink}\n              isReadOnly\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button\n                h=\"1.75rem\"\n                size=\"sm\"\n                bg={hasCopied ? \"brandGreen\" : \"highlight.standard\"}\n                color=\"white\"\n                type=\"submit\"\n                fontSize={\"14px\"}\n                _hover={{ bg: \"highlight.hover\" }}\n                _active={{ bg: \"highlight.active\" }}\n                _focus={{ boxShadow: \"none\" }}\n                onClick={onCopy}\n              >\n                {hasCopied ? \"Copied\" : \"Copy\"}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n\n          <Text my={\"2\"} fontSize={\"12px\"}>\n            {isPermanent\n              ? \"Your invite link won't expire\"\n              : \"Your invite link expires in 1 day and can only be used once\"}\n          </Text>\n        </ModalBody>\n\n        <ModalFooter bg=\"brandGray.dark\" />\n      </ModalContent>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}