{"ast":null,"code":"import{Box,GridItem,Text,UnorderedList}from\"@chakra-ui/react\";import{getUserDMs}from\"api/handler/dm\";import useDMSocket from\"api/ws/useDMSocket\";import DMListItem from\"components/items/DMListItem\";import DMPlaceholder from\"components/sections/DMPlaceholder\";import FriendsListButton from\"components/sections/FriendsListButton\";import React from\"react\";import{useQuery}from\"react-query\";import{dmKey}from\"utils/querykeys\";import AccountBar from\"../AccountBar\";import dmScrollerCss from\"./css/dmScrollerCSS\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function DMSidebar(){var _useQuery=useQuery(dmKey,function(){return getUserDMs().then(function(res){return res.data;});}),data=_useQuery.data;useDMSocket();return/*#__PURE__*/_jsxs(GridItem,{gridColumn:\"2\",gridRow:\"1 / 4\",bg:\"brandGray.dark\",overflowY:\"hidden\",_hover:{overflowY:\"auto\"},css:dmScrollerCss,children:[/*#__PURE__*/_jsx(FriendsListButton,{}),/*#__PURE__*/_jsx(Text,{ml:\"4\",textTransform:\"uppercase\",fontSize:\"12px\",fontWeight:\"semibold\",color:\"brandGray.accent\",children:\"DIRECT MESSAGES\"}),/*#__PURE__*/_jsxs(UnorderedList,{listStyleType:\"none\",ml:\"0\",mt:\"4\",children:[data===null||data===void 0?void 0:data.map(function(dm){return/*#__PURE__*/_jsx(DMListItem,{dm:dm},dm.id);}),(data===null||data===void 0?void 0:data.length)===0&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(DMPlaceholder,{}),/*#__PURE__*/_jsx(DMPlaceholder,{}),/*#__PURE__*/_jsx(DMPlaceholder,{}),/*#__PURE__*/_jsx(DMPlaceholder,{}),/*#__PURE__*/_jsx(DMPlaceholder,{})]})]}),/*#__PURE__*/_jsx(AccountBar,{})]});}","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/layouts/home/DMSidebar.js"],"names":["Box","GridItem","Text","UnorderedList","getUserDMs","useDMSocket","DMListItem","DMPlaceholder","FriendsListButton","React","useQuery","dmKey","AccountBar","dmScrollerCss","DMSidebar","then","res","data","overflowY","map","dm","id","length"],"mappings":"AAAA,OAASA,GAAT,CAAcC,QAAd,CAAwBC,IAAxB,CAA8BC,aAA9B,KAAmD,kBAAnD,CACA,OAASC,UAAT,KAA2B,gBAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,oBAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,6BAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,mCAA1B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,uCAA9B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,KAAT,KAAsB,iBAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,qBAA1B,C,wFAEA,cAAe,SAASC,CAAAA,SAAT,EAAqB,eACjBJ,QAAQ,CAACC,KAAD,CAAQ,iBAAMP,CAAAA,UAAU,GAAGW,IAAb,CAAkB,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAb,EAAlB,CAAN,EAAR,CADS,CAC1BA,IAD0B,WAC1BA,IAD0B,CAGlCZ,WAAW,GAEX,mBACE,MAAC,QAAD,EACE,UAAU,CAAE,GADd,CAEE,OAAO,CAAE,OAFX,CAGE,EAAE,CAAC,gBAHL,CAIE,SAAS,CAAC,QAJZ,CAKE,MAAM,CAAE,CAAEa,SAAS,CAAE,MAAb,CALV,CAME,GAAG,CAAEL,aANP,wBAQE,KAAC,iBAAD,IARF,cASE,KAAC,IAAD,EACE,EAAE,CAAC,GADL,CAEE,aAAa,CAAC,WAFhB,CAGE,QAAQ,CAAC,MAHX,CAIE,UAAU,CAAC,UAJb,CAKE,KAAK,CAAC,kBALR,6BATF,cAkBE,MAAC,aAAD,EAAe,aAAa,CAAC,MAA7B,CAAoC,EAAE,CAAC,GAAvC,CAA2C,EAAE,CAAC,GAA9C,WACGI,IADH,SACGA,IADH,iBACGA,IAAI,CAAEE,GAAN,CAAU,SAACC,EAAD,qBACT,KAAC,UAAD,EAAwB,EAAE,CAAEA,EAA5B,EAAiBA,EAAE,CAACC,EAApB,CADS,EAAV,CADH,CAIG,CAAAJ,IAAI,OAAJ,EAAAA,IAAI,SAAJ,QAAAA,IAAI,CAAEK,MAAN,IAAiB,CAAjB,eACC,MAAC,GAAD,yBACE,KAAC,aAAD,IADF,cAEE,KAAC,aAAD,IAFF,cAGE,KAAC,aAAD,IAHF,cAIE,KAAC,aAAD,IAJF,cAKE,KAAC,aAAD,IALF,GALJ,GAlBF,cAgCE,KAAC,UAAD,IAhCF,GADF,CAoCD","sourcesContent":["import { Box, GridItem, Text, UnorderedList } from \"@chakra-ui/react\";\nimport { getUserDMs } from \"api/handler/dm\";\nimport useDMSocket from \"api/ws/useDMSocket\";\nimport DMListItem from \"components/items/DMListItem\";\nimport DMPlaceholder from \"components/sections/DMPlaceholder\";\nimport FriendsListButton from \"components/sections/FriendsListButton\";\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { dmKey } from \"utils/querykeys\";\nimport AccountBar from \"../AccountBar\";\nimport dmScrollerCss from \"./css/dmScrollerCSS\";\n\nexport default function DMSidebar() {\n  const { data } = useQuery(dmKey, () => getUserDMs().then((res) => res.data));\n\n  useDMSocket();\n\n  return (\n    <GridItem\n      gridColumn={\"2\"}\n      gridRow={\"1 / 4\"}\n      bg=\"brandGray.dark\"\n      overflowY=\"hidden\"\n      _hover={{ overflowY: \"auto\" }}\n      css={dmScrollerCss}\n    >\n      <FriendsListButton />\n      <Text\n        ml=\"4\"\n        textTransform=\"uppercase\"\n        fontSize=\"12px\"\n        fontWeight=\"semibold\"\n        color=\"brandGray.accent\"\n      >\n        DIRECT MESSAGES\n      </Text>\n      <UnorderedList listStyleType=\"none\" ml=\"0\" mt=\"4\">\n        {data?.map((dm) => (\n          <DMListItem key={dm.id} dm={dm} />\n        ))}\n        {data?.length === 0 && (\n          <Box>\n            <DMPlaceholder />\n            <DMPlaceholder />\n            <DMPlaceholder />\n            <DMPlaceholder />\n            <DMPlaceholder />\n          </Box>\n        )}\n      </UnorderedList>\n      <AccountBar />\n    </GridItem>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}