{"ast":null,"code":"var _jsxFileName = \"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/layouts/guild/chat/FileUploadButton.js\",\n    _s = $RefreshSig$();\n\nimport { Icon, InputLeftElement, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, Progress, Text, useDisclosure } from \"@chakra-ui/react\";\nimport { sendMessage } from \"api/handler/messages\";\nimport StyledTooltip from \"components/sections/StyledTooltip\";\nimport React, { useRef, useState } from \"react\";\nimport { MdAddCircle } from \"react-icons/md\";\nimport { useParams } from \"react-router-dom\";\nimport { FileSchema } from \"validation/message.schema\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FileUploadButton() {\n  _s();\n\n  const {\n    channelId\n  } = useParams();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const inputFile = useRef(null);\n  const [isSubmitting, setSubmitting] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [errors, setErrors] = useState({});\n\n  const closeModal = () => {\n    setErrors({});\n    setProgress(0);\n    onClose();\n  };\n\n  const handleSubmit = async file => {\n    if (!file) return;\n    setSubmitting(true);\n\n    try {\n      await FileSchema.validate({\n        file\n      });\n    } catch (err) {\n      setErrors(err.errors);\n      onOpen();\n      return;\n    }\n\n    const data = new FormData();\n    data.append(\"file\", file);\n    await sendMessage(channelId, data, event => {\n      const loaded = Math.round(100 * event.loaded / event.total);\n      setProgress(loaded);\n      if (loaded >= 100) setProgress(0);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(InputLeftElement, {\n    color: \"iconColor\",\n    _hover: {\n      cursor: \"pointer\",\n      color: \"#fcfcfc\"\n    },\n    onClick: () => inputFile.current.click(),\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      as: MdAddCircle,\n      boxSize: \"20px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: inputFile,\n      hidden: true,\n      disabled: isSubmitting,\n      onChange: async e => {\n        if (!e.currentTarget.files) return;\n        handleSubmit(e.currentTarget.files[0]).then(() => {\n          setSubmitting(false);\n          e.target.value = \"\";\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), errors && /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"sm\",\n      isOpen: isOpen,\n      onClose: closeModal,\n      isCentered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        bg: \"brandGray.light\",\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          pb: \"0\",\n          children: \"Error Uploading File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            mb: \"2\",\n            children: [\"Reason: \", errors]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Max file size is 5.00 MB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Only Images and mp3 allowed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), progress > 0 && /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"sm\",\n      isOpen: progress > 0,\n      closeOnOverlayClick: false,\n      onClose: closeModal,\n      isCentered: true,\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        bg: \"brandGray.darker\",\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          pb: \"0\",\n          children: \"Upload Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Progress, {\n            hasStripe: true,\n            isAnimated: true,\n            value: progress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FileUploadButton, \"VZvTOPY/jVRnMSh0PNXT21/1lgU=\", false, function () {\n  return [useParams, useDisclosure];\n});\n\n_c = FileUploadButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUploadButton\");","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/layouts/guild/chat/FileUploadButton.js"],"names":["Icon","InputLeftElement","Modal","ModalBody","ModalCloseButton","ModalContent","ModalHeader","ModalOverlay","Progress","Text","useDisclosure","sendMessage","StyledTooltip","React","useRef","useState","MdAddCircle","useParams","FileSchema","FileUploadButton","channelId","isOpen","onOpen","onClose","inputFile","isSubmitting","setSubmitting","progress","setProgress","errors","setErrors","closeModal","handleSubmit","file","validate","err","data","FormData","append","event","loaded","Math","round","total","cursor","color","current","click","e","currentTarget","files","then","target","value"],"mappings":"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","sourcesContent":["import {\n  Icon,\n  InputLeftElement,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Progress,\n  Text,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { sendMessage } from \"api/handler/messages\";\nimport StyledTooltip from \"components/sections/StyledTooltip\";\nimport React, { useRef, useState } from \"react\";\nimport { MdAddCircle } from \"react-icons/md\";\nimport { useParams } from \"react-router-dom\";\nimport { FileSchema } from \"validation/message.schema\";\n\nexport default function FileUploadButton() {\n  const { channelId } = useParams();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const inputFile = useRef(null);\n  const [isSubmitting, setSubmitting] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [errors, setErrors] = useState({});\n\n  const closeModal = () => {\n    setErrors({});\n    setProgress(0);\n    onClose();\n  };\n\n  const handleSubmit = async (file) => {\n    if (!file) return;\n    setSubmitting(true);\n\n    try {\n      await FileSchema.validate({ file });\n    } catch (err) {\n      setErrors(err.errors);\n      onOpen();\n      return;\n    }\n\n    const data = new FormData();\n    data.append(\"file\", file);\n    await sendMessage(channelId, data, (event) => {\n      const loaded = Math.round((100 * event.loaded) / event.total);\n      setProgress(loaded);\n      if (loaded >= 100) setProgress(0);\n    });\n  };\n\n  return (\n    <InputLeftElement\n      color={\"iconColor\"}\n      _hover={{ cursor: \"pointer\", color: \"#fcfcfc\" }}\n      onClick={() => inputFile.current.click()}\n    >\n      <Icon as={MdAddCircle} boxSize={\"20px\"} />\n      <input\n        type=\"file\"\n        ref={inputFile}\n        hidden\n        disabled={isSubmitting}\n        onChange={async (e) => {\n          if (!e.currentTarget.files) return;\n          handleSubmit(e.currentTarget.files[0]).then(() => {\n            setSubmitting(false);\n            e.target.value = \"\";\n          });\n        }}\n      />\n      {errors && (\n        <Modal size=\"sm\" isOpen={isOpen} onClose={closeModal} isCentered>\n          <ModalOverlay />\n          <ModalContent bg=\"brandGray.light\" textAlign=\"center\">\n            <ModalHeader pb=\"0\">Error Uploading File</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Text mb=\"2\">Reason: {errors}</Text>\n              <Text>Max file size is 5.00 MB</Text>\n              <Text>Only Images and mp3 allowed</Text>\n            </ModalBody>\n          </ModalContent>\n        </Modal>\n      )}\n      {progress > 0 && (\n        <Modal\n          size=\"sm\"\n          isOpen={progress > 0}\n          closeOnOverlayClick={false}\n          onClose={closeModal}\n          isCentered\n        >\n          <ModalContent bg=\"brandGray.darker\" textAlign=\"center\">\n            <ModalHeader pb=\"0\">Upload Progress</ModalHeader>\n            <ModalBody>\n              <Progress hasStripe isAnimated value={progress} />\n            </ModalBody>\n          </ModalContent>\n        </Modal>\n      )}\n    </InputLeftElement>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}