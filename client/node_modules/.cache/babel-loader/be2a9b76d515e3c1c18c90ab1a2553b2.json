{"ast":null,"code":"var _jsxFileName = \"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/pages/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Flex, Heading, Image, Link, Text } from \"@chakra-ui/react\";\nimport { resetPassword } from \"api/handler/auth\";\nimport { Form, Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { Link as RLink, useHistory, useParams } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport InputField from \"components/shared/InputField\";\nimport { ResetPasswordSchema } from \"validation/auth.schema\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword() {\n  _s();\n\n  const {\n    token\n  } = useParams();\n  const setUser = userStore(state => state.setUser);\n  const history = useHistory();\n  const [tokenError, setTokenError] = useState(\"\");\n\n  const handleSubmit = async (values, {\n    setErrors\n  }) => {\n    try {\n      const {\n        data\n      } = await resetPassword({ ...values,\n        token\n      });\n\n      if (data) {\n        setUser(data);\n        history.push(\"/channels/me\");\n      }\n    } catch (error) {\n      console.log(error);\n      const errorMap = toErrorMap(error);\n\n      if (errorMap) {\n        setTokenError(errorMap.token);\n      }\n\n      setErrors(errorMap);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    minHeight: \"100vh\",\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      px: 4,\n      width: \"full\",\n      maxWidth: \"500px\",\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        mb: \"4\",\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/logo.png\",\n          w: \"80px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 4,\n        borderRadius: 4,\n        background: \"brandGray.light\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            fontSize: \"24px\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          my: 4,\n          textAlign: \"left\",\n          children: [/*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              newPassword: \"\",\n              confirmNewPassword: \"\"\n            },\n            validationSchema: ResetPasswordSchema,\n            onSubmit: handleSubmit,\n            children: ({\n              isSubmitting\n            }) => /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(InputField, {\n                label: \"New Password\",\n                name: \"newPassword\",\n                autoComplete: \"new-password\",\n                type: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                label: \"Confirm New Password\",\n                name: \"confirmNewPassword\",\n                type: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                background: \"highlight.standard\",\n                color: \"white\",\n                width: \"full\",\n                mt: 4,\n                type: \"submit\",\n                isLoading: isSubmitting,\n                _hover: {\n                  bg: \"highlight.hover\"\n                },\n                _active: {\n                  bg: \"highlight.active\"\n                },\n                _focus: {\n                  boxShadow: \"none\"\n                },\n                children: \"Reset Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), tokenError ? /*#__PURE__*/_jsxDEV(Flex, {\n            direction: \"column\",\n            mt: \"4\",\n            justify: \"center\",\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: \"Invalid or expired token.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              as: RLink,\n              to: \"/forgot-password\",\n              color: \"red\",\n              children: \"Click here to get a new token\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResetPassword, \"sxS1clzv+sEgnBuyaaBLc0s9RXY=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/pages/ResetPassword.js"],"names":["Box","Button","Flex","Heading","Image","Link","Text","resetPassword","Form","Formik","React","useState","RLink","useHistory","useParams","userStore","toErrorMap","InputField","ResetPasswordSchema","ResetPassword","token","setUser","state","history","tokenError","setTokenError","handleSubmit","values","setErrors","data","push","error","console","log","errorMap","newPassword","confirmNewPassword","isSubmitting","bg","boxShadow"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Button,\n  Flex,\n  Heading,\n  Image,\n  Link,\n  Text,\n} from \"@chakra-ui/react\";\nimport { resetPassword } from \"api/handler/auth\";\nimport { Form, Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { Link as RLink, useHistory, useParams } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport InputField from \"components/shared/InputField\";\nimport { ResetPasswordSchema } from \"validation/auth.schema\";\n\nexport default function ResetPassword() {\n  const { token } = useParams();\n  const setUser = userStore((state) => state.setUser);\n  const history = useHistory();\n  const [tokenError, setTokenError] = useState(\"\");\n\n  const handleSubmit = async (values, { setErrors }) => {\n    try {\n      const { data } = await resetPassword({ ...values, token });\n\n      if (data) {\n        setUser(data);\n        history.push(\"/channels/me\");\n      }\n    } catch (error) {\n      console.log(error);\n      const errorMap = toErrorMap(error);\n      if (errorMap) {\n        setTokenError(errorMap.token);\n      }\n      setErrors(errorMap);\n    }\n  };\n\n  return (\n    <Flex minHeight=\"100vh\" width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box px={4} width=\"full\" maxWidth=\"500px\" textAlign=\"center\">\n        <Flex mb=\"4\" justify=\"center\">\n          <Image src=\"/logo.png\" w=\"80px\" />\n        </Flex>\n        <Box p={4} borderRadius={4} background=\"brandGray.light\">\n          <Box textAlign=\"center\">\n            <Heading fontSize=\"24px\">Reset Password</Heading>\n          </Box>\n          <Box my={4} textAlign=\"left\">\n            <Formik\n              initialValues={{ newPassword: \"\", confirmNewPassword: \"\" }}\n              validationSchema={ResetPasswordSchema}\n              onSubmit={handleSubmit}\n            >\n              {({ isSubmitting }) => (\n                <Form>\n                  <InputField\n                    label=\"New Password\"\n                    name=\"newPassword\"\n                    autoComplete=\"new-password\"\n                    type=\"password\"\n                  />\n\n                  <InputField\n                    label=\"Confirm New Password\"\n                    name=\"confirmNewPassword\"\n                    type=\"password\"\n                  />\n\n                  <Button\n                    background=\"highlight.standard\"\n                    color=\"white\"\n                    width=\"full\"\n                    mt={4}\n                    type=\"submit\"\n                    isLoading={isSubmitting}\n                    _hover={{ bg: \"highlight.hover\" }}\n                    _active={{ bg: \"highlight.active\" }}\n                    _focus={{ boxShadow: \"none\" }}\n                  >\n                    Reset Password\n                  </Button>\n                </Form>\n              )}\n            </Formik>\n            {tokenError ? (\n              <Flex direction=\"column\" mt=\"4\" justify=\"center\" align=\"center\">\n                <Text>Invalid or expired token.</Text>\n                <Link as={RLink} to=\"/forgot-password\" color=\"red\">\n                  Click here to get a new token\n                </Link>\n              </Flex>\n            ) : null}\n          </Box>\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}