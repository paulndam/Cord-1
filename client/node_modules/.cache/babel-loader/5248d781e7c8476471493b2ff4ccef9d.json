{"ast":null,"code":"import{Avatar,AvatarBadge,Flex,ListItem,Text}from\"@chakra-ui/react\";import MemberContextMenu from\"components/menus/MemberContextMenu\";import useGetCurrentGuild from\"hooks/useGetCurrentGuild\";import React from\"react\";import{useContextMenu}from\"react-contexify\";import{useParams}from\"react-router-dom\";import userStore from\"stores/userStore\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function MemberListItem(_ref){var member=_ref.member;var _useParams=useParams(),guildId=_useParams.guildId;var current=userStore(function(state){return state.current;});var guild=useGetCurrentGuild(guildId);var isOwner=guild!==undefined&&guild.ownerId===(current===null||current===void 0?void 0:current.id);var _useContextMenu=useContextMenu({id:member.id}),show=_useContextMenu.show;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ListItem,{p:\"2\",mx:\"10px\",color:\"brandGray.accent\",_hover:{bg:\"brandGray.light\",borderRadius:\"5px\",cursor:\"pointer\",color:\"#fff\"},onContextMenu:show,children:/*#__PURE__*/_jsxs(Flex,{align:\"center\",children:[/*#__PURE__*/_jsx(Avatar,{size:\"sm\",src:member.image,children:/*#__PURE__*/_jsx(AvatarBadge,{boxSize:\"1.25em\",bg:member.isOnline?\"green.500\":\"gray.500\"})}),/*#__PURE__*/_jsx(Text,{ml:\"2\",children:member.username})]})}),member.id!==(current===null||current===void 0?void 0:current.id)&&/*#__PURE__*/_jsx(MemberContextMenu,{member:member,isOwner:isOwner,id:member.id})]});}","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/items/MemberListItem.js"],"names":["Avatar","AvatarBadge","Flex","ListItem","Text","MemberContextMenu","useGetCurrentGuild","React","useContextMenu","useParams","userStore","MemberListItem","member","guildId","current","state","guild","isOwner","undefined","ownerId","id","show","bg","borderRadius","cursor","color","image","isOnline","username"],"mappings":"AAAA,OAASA,MAAT,CAAiBC,WAAjB,CAA8BC,IAA9B,CAAoCC,QAApC,CAA8CC,IAA9C,KAA0D,kBAA1D,CACA,MAAOC,CAAAA,iBAAP,KAA8B,oCAA9B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,0BAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,iBAA/B,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,kBAAtB,C,6IAEA,cAAe,SAASC,CAAAA,cAAT,MAAoC,IAAVC,CAAAA,MAAU,MAAVA,MAAU,gBAC7BH,SAAS,EADoB,CACzCI,OADyC,YACzCA,OADyC,CAEjD,GAAMC,CAAAA,OAAO,CAAGJ,SAAS,CAAC,SAACK,KAAD,QAAWA,CAAAA,KAAK,CAACD,OAAjB,EAAD,CAAzB,CACA,GAAME,CAAAA,KAAK,CAAGV,kBAAkB,CAACO,OAAD,CAAhC,CACA,GAAMI,CAAAA,OAAO,CAAGD,KAAK,GAAKE,SAAV,EAAuBF,KAAK,CAACG,OAAN,IAAkBL,OAAlB,SAAkBA,OAAlB,iBAAkBA,OAAO,CAAEM,EAA3B,CAAvC,CAJiD,oBAKhCZ,cAAc,CAAC,CAC9BY,EAAE,CAAER,MAAM,CAACQ,EADmB,CAAD,CALkB,CAKzCC,IALyC,iBAKzCA,IALyC,CASjD,mBACE,wCACE,KAAC,QAAD,EACE,CAAC,CAAC,GADJ,CAEE,EAAE,CAAC,MAFL,CAGE,KAAK,CAAE,kBAHT,CAIE,MAAM,CAAE,CACNC,EAAE,CAAE,iBADE,CAENC,YAAY,CAAE,KAFR,CAGNC,MAAM,CAAE,SAHF,CAINC,KAAK,CAAE,MAJD,CAJV,CAUE,aAAa,CAAEJ,IAVjB,uBAYE,MAAC,IAAD,EAAM,KAAK,CAAC,QAAZ,wBACE,KAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,GAAG,CAAET,MAAM,CAACc,KAA9B,uBACE,KAAC,WAAD,EACE,OAAO,CAAC,QADV,CAEE,EAAE,CAAEd,MAAM,CAACe,QAAP,CAAkB,WAAlB,CAAgC,UAFtC,EADF,EADF,cAOE,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,UAAcf,MAAM,CAACgB,QAArB,EAPF,GAZF,EADF,CAuBGhB,MAAM,CAACQ,EAAP,IAAcN,OAAd,SAAcA,OAAd,iBAAcA,OAAO,CAAEM,EAAvB,gBACC,KAAC,iBAAD,EAAmB,MAAM,CAAER,MAA3B,CAAmC,OAAO,CAAEK,OAA5C,CAAqD,EAAE,CAAEL,MAAM,CAACQ,EAAhE,EAxBJ,GADF,CA6BD","sourcesContent":["import { Avatar, AvatarBadge, Flex, ListItem, Text } from \"@chakra-ui/react\";\nimport MemberContextMenu from \"components/menus/MemberContextMenu\";\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\nimport React from \"react\";\nimport { useContextMenu } from \"react-contexify\";\nimport { useParams } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\n\nexport default function MemberListItem({ member }) {\n  const { guildId } = useParams();\n  const current = userStore((state) => state.current);\n  const guild = useGetCurrentGuild(guildId);\n  const isOwner = guild !== undefined && guild.ownerId === current?.id;\n  const { show } = useContextMenu({\n    id: member.id,\n  });\n\n  return (\n    <>\n      <ListItem\n        p=\"2\"\n        mx=\"10px\"\n        color={\"brandGray.accent\"}\n        _hover={{\n          bg: \"brandGray.light\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n          color: \"#fff\",\n        }}\n        onContextMenu={show}\n      >\n        <Flex align=\"center\">\n          <Avatar size=\"sm\" src={member.image}>\n            <AvatarBadge\n              boxSize=\"1.25em\"\n              bg={member.isOnline ? \"green.500\" : \"gray.500\"}\n            />\n          </Avatar>\n          <Text ml=\"2\">{member.username}</Text>\n        </Flex>\n      </ListItem>\n      {member.id !== current?.id && (\n        <MemberContextMenu member={member} isOwner={isOwner} id={member.id} />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}