{"ast":null,"code":"import _objectSpread from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{FormControl,FormErrorMessage,FormLabel,Input,Text}from\"@chakra-ui/react\";import{useField}from\"formik\";import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function InputField(_ref){var label=_ref.label,props=_objectWithoutProperties(_ref,[\"label\"]);var _useField=useField(props),_useField2=_slicedToArray(_useField,2),field=_useField2[0],_useField2$=_useField2[1],error=_useField2$.error,touched=_useField2$.touched;return/*#__PURE__*/_jsxs(FormControl,{mt:4,isInvalid:error!=null&&touched,children:[/*#__PURE__*/_jsx(FormLabel,{htmlFor:field.name,children:/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",textTransform:\"uppercase\",children:label})}),/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({bg:\"brandGray.dark\",borderColor:\"black\",borderRadius:\"3px\",focusBorderColor:\"highlight.standard\"},field),props)),/*#__PURE__*/_jsx(FormErrorMessage,{children:error})]});}","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/shared/InputField.js"],"names":["FormControl","FormErrorMessage","FormLabel","Input","Text","useField","React","InputField","label","props","field","error","touched","name"],"mappings":"+lBAAA,OACEA,WADF,CAEEC,gBAFF,CAGEC,SAHF,CAIEC,KAJF,CAKEC,IALF,KAMO,kBANP,CAOA,OAASC,QAAT,KAAyB,QAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,cAAe,SAASC,CAAAA,UAAT,MAAyC,IAAnBC,CAAAA,KAAmB,MAAnBA,KAAmB,CAATC,KAAS,wDAClBJ,QAAQ,CAACI,KAAD,CADU,wCAC/CC,KAD+C,yCACtCC,KADsC,aACtCA,KADsC,CAC/BC,OAD+B,aAC/BA,OAD+B,CAEtD,mBACE,MAAC,WAAD,EAAa,EAAE,CAAE,CAAjB,CAAoB,SAAS,CAAED,KAAK,EAAI,IAAT,EAAiBC,OAAhD,wBACE,KAAC,SAAD,EAAW,OAAO,CAAEF,KAAK,CAACG,IAA1B,uBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,aAAa,CAAC,WAApC,UACGL,KADH,EADF,EADF,cAOE,KAAC,KAAD,8BACE,EAAE,CAAC,gBADL,CAEE,WAAW,CAAC,OAFd,CAGE,YAAY,CAAC,KAHf,CAIE,gBAAgB,CAAC,oBAJnB,EAKME,KALN,EAMMD,KANN,EAPF,cAeE,KAAC,gBAAD,WAAmBE,KAAnB,EAfF,GADF,CAmBD","sourcesContent":["import {\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useField } from \"formik\";\nimport React from \"react\";\n\nexport default function InputField({ label, ...props }) {\n  const [field, { error, touched }] = useField(props);\n  return (\n    <FormControl mt={4} isInvalid={error != null && touched}>\n      <FormLabel htmlFor={field.name}>\n        <Text fontSize=\"12px\" textTransform=\"uppercase\">\n          {label}\n        </Text>\n      </FormLabel>\n      {/* @ts-ignore */}\n      <Input\n        bg=\"brandGray.dark\"\n        borderColor=\"black\"\n        borderRadius=\"3px\"\n        focusBorderColor=\"highlight.standard\"\n        {...field}\n        {...props}\n      />\n      <FormErrorMessage>{error}</FormErrorMessage>\n    </FormControl>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}