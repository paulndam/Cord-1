{"ast":null,"code":"import _regeneratorRuntime from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{Flex,GridItem,Heading,Icon,Menu,MenuButton,MenuDivider,useDisclosure}from\"@chakra-ui/react\";import{leaveGuild}from\"api/handler/guilds\";import React from\"react\";import{FaUserEdit,FaUserPlus}from\"react-icons/fa\";import{FiChevronDown,FiX}from\"react-icons/fi\";import{HiLogout}from\"react-icons/hi\";import{MdAddCircle}from\"react-icons/md\";import{RiSettings5Fill}from\"react-icons/ri\";import{useQueryClient}from\"react-query\";import{useHistory,useParams}from\"react-router-dom\";import userStore from\"stores/userStore\";import useGetCurrentGuild from\"hooks/useGetCurrentGuild\";import{gKey}from\"utils/querykeys\";import EditMemberModal from\"components/modals/EditMemberModal\";import GuildSettingsModal from\"components/modals/GuildSettingsModal\";import{StyledMenuItem,StyledRedMenuItem}from\"./StyledMenuItem\";import StyledMenuList from\"./StyledMenuList\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function GuildMenu(_ref){var channelOpen=_ref.channelOpen,inviteOpen=_ref.inviteOpen;var _useParams=useParams(),guildId=_useParams.guildId;var guild=useGetCurrentGuild(guildId);var history=useHistory();var cache=useQueryClient();var user=userStore(function(state){return state.current;});var isOwner=(guild===null||guild===void 0?void 0:guild.ownerId)===(user===null||user===void 0?void 0:user.id);var _useDisclosure=useDisclosure(),isOpen=_useDisclosure.isOpen,onOpen=_useDisclosure.onOpen,onClose=_useDisclosure.onClose;var _useDisclosure2=useDisclosure(),memberOpen=_useDisclosure2.isOpen,memberOnOpen=_useDisclosure2.onOpen,memberOnClose=_useDisclosure2.onClose;var handleLeave=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$leaveGuild,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return leaveGuild(guildId);case 2:_yield$leaveGuild=_context.sent;data=_yield$leaveGuild.data;if(data){cache.setQueryData(gKey,function(d){return d.filter(function(g){return g.id!==(guild===null||guild===void 0?void 0:guild.id);});});history.replace(\"/channels/me\");}case 5:case\"end\":return _context.stop();}}},_callee);}));return function handleLeave(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(GridItem,{gridColumn:2,gridRow:\"1\",bg:\"brandGray.light\",padding:\"10px\",zIndex:\"2\",boxShadow:\"md\",children:[/*#__PURE__*/_jsx(Menu,{placement:\"bottom-end\",isLazy:true,children:function children(_ref3){var isOpen=_ref3.isOpen;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Flex,{justify:\"space-between\",align:\"center\",children:[/*#__PURE__*/_jsx(Heading,{fontSize:\"20px\",children:guild===null||guild===void 0?void 0:guild.name}),/*#__PURE__*/_jsx(MenuButton,{children:/*#__PURE__*/_jsx(Icon,{as:!isOpen?FiChevronDown:FiX})})]}),/*#__PURE__*/_jsxs(StyledMenuList,{children:[/*#__PURE__*/_jsx(StyledMenuItem,{label:\"Invite People\",icon:FaUserPlus,handleClick:inviteOpen}),isOwner&&/*#__PURE__*/_jsx(StyledMenuItem,{label:\"Server Settings\",icon:RiSettings5Fill,handleClick:onOpen}),isOwner&&/*#__PURE__*/_jsx(StyledMenuItem,{label:\"Create Channel\",icon:MdAddCircle,handleClick:channelOpen}),/*#__PURE__*/_jsx(MenuDivider,{}),/*#__PURE__*/_jsx(StyledMenuItem,{label:\"Change Appearance\",icon:FaUserEdit,handleClick:memberOnOpen}),!isOwner&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MenuDivider,{}),/*#__PURE__*/_jsx(StyledRedMenuItem,{label:\"Leave Server\",icon:HiLogout,handleClick:handleLeave})]})]})]});}}),isOpen&&/*#__PURE__*/_jsx(GuildSettingsModal,{guildId:guildId,isOpen:isOpen,onClose:onClose}),memberOpen&&/*#__PURE__*/_jsx(EditMemberModal,{guildId:guildId,isOpen:memberOpen,onClose:memberOnClose})]});}","map":{"version":3,"sources":["/Users/paulndam/Documents/MERN/React-Course/Crash-Course/build-discord/client/src/components/menus/GuildMenu.js"],"names":["Flex","GridItem","Heading","Icon","Menu","MenuButton","MenuDivider","useDisclosure","leaveGuild","React","FaUserEdit","FaUserPlus","FiChevronDown","FiX","HiLogout","MdAddCircle","RiSettings5Fill","useQueryClient","useHistory","useParams","userStore","useGetCurrentGuild","gKey","EditMemberModal","GuildSettingsModal","StyledMenuItem","StyledRedMenuItem","StyledMenuList","GuildMenu","channelOpen","inviteOpen","guildId","guild","history","cache","user","state","current","isOwner","ownerId","id","isOpen","onOpen","onClose","memberOpen","memberOnOpen","memberOnClose","handleLeave","data","setQueryData","d","filter","g","replace","name"],"mappings":"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","sourcesContent":["import {\n  Flex,\n  GridItem,\n  Heading,\n  Icon,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { leaveGuild } from \"api/handler/guilds\";\nimport React from \"react\";\nimport { FaUserEdit, FaUserPlus } from \"react-icons/fa\";\nimport { FiChevronDown, FiX } from \"react-icons/fi\";\nimport { HiLogout } from \"react-icons/hi\";\nimport { MdAddCircle } from \"react-icons/md\";\nimport { RiSettings5Fill } from \"react-icons/ri\";\nimport { useQueryClient } from \"react-query\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\nimport { gKey } from \"utils/querykeys\";\nimport EditMemberModal from \"components/modals/EditMemberModal\";\nimport GuildSettingsModal from \"components/modals/GuildSettingsModal\";\nimport { StyledMenuItem, StyledRedMenuItem } from \"./StyledMenuItem\";\nimport StyledMenuList from \"./StyledMenuList\";\n\nexport default function GuildMenu({ channelOpen, inviteOpen }) {\n  const { guildId } = useParams();\n  const guild = useGetCurrentGuild(guildId);\n  const history = useHistory();\n  const cache = useQueryClient();\n\n  const user = userStore((state) => state.current);\n  const isOwner = guild?.ownerId === user?.id;\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const {\n    isOpen: memberOpen,\n    onOpen: memberOnOpen,\n    onClose: memberOnClose,\n  } = useDisclosure();\n\n  const handleLeave = async () => {\n    const { data } = await leaveGuild(guildId);\n    if (data) {\n      cache.setQueryData(gKey, (d) => {\n        return d.filter((g) => g.id !== guild?.id);\n      });\n      history.replace(\"/channels/me\");\n    }\n  };\n\n  return (\n    <GridItem\n      gridColumn={2}\n      gridRow={\"1\"}\n      bg=\"brandGray.light\"\n      padding=\"10px\"\n      zIndex=\"2\"\n      boxShadow=\"md\"\n    >\n      <Menu placement=\"bottom-end\" isLazy>\n        {({ isOpen }) => (\n          <>\n            <Flex justify=\"space-between\" align=\"center\">\n              <Heading fontSize=\"20px\">{guild?.name}</Heading>\n              <MenuButton>\n                <Icon as={!isOpen ? FiChevronDown : FiX} />\n              </MenuButton>\n            </Flex>\n            <StyledMenuList>\n              <StyledMenuItem\n                label={\"Invite People\"}\n                icon={FaUserPlus}\n                handleClick={inviteOpen}\n              />\n              {isOwner && (\n                <StyledMenuItem\n                  label={\"Server Settings\"}\n                  icon={RiSettings5Fill}\n                  handleClick={onOpen}\n                />\n              )}\n              {isOwner && (\n                <StyledMenuItem\n                  label={\"Create Channel\"}\n                  icon={MdAddCircle}\n                  handleClick={channelOpen}\n                />\n              )}\n              <MenuDivider />\n              <StyledMenuItem\n                label={\"Change Appearance\"}\n                icon={FaUserEdit}\n                handleClick={memberOnOpen}\n              />\n              {!isOwner && (\n                <>\n                  <MenuDivider />\n                  <StyledRedMenuItem\n                    label={\"Leave Server\"}\n                    icon={HiLogout}\n                    handleClick={handleLeave}\n                  />\n                </>\n              )}\n            </StyledMenuList>\n          </>\n        )}\n      </Menu>\n      {isOpen && (\n        <GuildSettingsModal\n          guildId={guildId}\n          isOpen={isOpen}\n          onClose={onClose}\n        />\n      )}\n      {memberOpen && (\n        <EditMemberModal\n          guildId={guildId}\n          isOpen={memberOpen}\n          onClose={memberOnClose}\n        />\n      )}\n    </GridItem>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}