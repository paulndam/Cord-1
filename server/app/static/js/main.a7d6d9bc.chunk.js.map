{"version":3,"sources":["utils/theme.js","stores/userStore.js","api/getSocket.js","stores/homeStore.js","components/sections/GlobalState.js","AppProviders.js","api/apiClient.js","api/handler/account.js","api/handler/auth.js","utils/querykeys.js","utils/toErrorMap.js","validation/auth.schema.js","components/shared/InputField.js","components/modals/ChangePasswordModal.js","utils/cropImage.js","components/modals/CropImageModal.js","pages/Account.js","pages/AuthRoute.js","pages/ForgotPassword.js","components/layouts/AppLayout.js","api/handler/messages.js","stores/channelStore.js","api/handler/dm.js","api/handler/guilds.js","components/modals/ModActionModal.js","components/modals/RemoveFriendModal.js","hooks/useGetFriend.js","components/menus/MemberContextMenu.js","utils/dateUtils.js","components/modals/DeleteMessageModal.js","components/modals/EditMessageModal.js","components/sections/UserPopover.js","hooks/useGetCurrentGuild.js","components/items/message/MessageContent.js","components/items/message/Message.js","components/sections/DateDivider.js","hooks/useGetCurrentChannel.js","hooks/useGetCurrentDM.js","components/sections/StartMessages.js","components/layouts/guild/css/GuildScrollerCSS.js","components/layouts/guild/chat/ChatGrid.js","components/layouts/guild/chat/ChatScreen.js","api/ws/useMessageSocket.js","components/sections/StyledTooltip.js","validation/message.schema.js","components/layouts/guild/chat/FileUploadButton.js","components/layouts/guild/chat/MessageInput.js","components/shared/GuildPills.js","components/items/GuildListItem.js","validation/guild.schema.js","components/modals/AddGuildModal.js","components/sections/AddGuildIcon.js","components/shared/NotificationIcon.js","components/sections/HomeIcon.js","components/layouts/guild/GuildList.js","api/ws/useGuildSocket.js","components/modals/AddFriendModal.js","components/layouts/home/dashboard/FriendsListHeader.js","components/items/FriendsListItem.js","components/sections/OnlineLabel.js","components/layouts/home/dashboard/FriendsList.js","api/ws/useFriendSocket.js","components/items/RequestListItem.js","components/layouts/home/dashboard/PendingList.js","components/layouts/home/dashboard/FriendsDashboard.js","components/layouts/home/DMHeader.js","components/items/DMListItem.js","components/sections/DMPlaceholder.js","components/sections/FriendsListButton.js","components/layouts/AccountBar.js","components/layouts/home/css/dmScrollerCSS.js","components/layouts/home/DMSidebar.js","api/ws/useDMSocket.js","pages/Home.js","pages/Invite.js","components/sections/Footer.js","components/shared/Logo.js","components/sections/Navbar.js","components/layouts/LandingLayout.js","components/sections/Hero.js","pages/Landing.js","pages/Login.js","pages/Register.js","pages/ResetPassword.js","stores/settingsStore.js","components/layouts/guild/ChannelHeader.js","api/handler/channel.js","validation/channel.schema.js","components/modals/ChannelSettingsModal.js","components/items/ChannelListItem.js","validation/member.schema.js","components/modals/EditMemberModal.js","components/layouts/guild/css/ChannelScrollerCSS.js","components/modals/GuildSettingsModal.js","components/menus/StyledMenuItem.js","components/menus/StyledMenuList.js","components/menus/GuildMenu.js","components/modals/CreateChannelModal.js","components/modals/InviteModal.js","components/layouts/guild/Channels.js","api/ws/useChannelSocket.js","components/items/MemberListItem.js","components/layouts/guild/css/MemberScrollerCSS.js","components/layouts/guild/MemberList.js","api/ws/useMemberSocket.js","pages/ViewGuild.js","App.js","index.js"],"names":["styles","global","props","body","bg","mode","customTheme","extendTheme","colors","highlight","standard","hover","active","brandGray","accent","light","dark","darker","darkest","brandGreen","labelGray","menuRed","brandBorder","accountBar","memberList","iconColor","messageInput","config","initialColorMode","fonts","scrollbarCss","width","background","borderRadius","userStore","create","persist","set","get","current","setUser","user","logout","isAuth","name","getSocket","socketIOClient","transports","upgrade","homeStore","notifCount","requestCount","increment","state","reset","resetRequest","setRequests","r","isPending","toggleDisplay","GlobalState","children","inc","useEffect","incrementNotification","window","location","pathname","includes","disconnect","socket","emit","id","on","addEventListener","client","QueryClient","defaultOptions","queries","refetchOnWindowFocus","staleTime","Infinity","cacheTime","AppProviders","QueryClientProvider","theme","api","axios","baseURL","withCredentials","interceptors","response","use","error","status","localStorage","removeItem","replace","Promise","reject","updateAccount","put","headers","sendFriendRequest","post","removeFriend","delete","gKey","dmKey","fKey","rKey","cKey","guildId","mKey","toErrorMap","err","data","errors","errorMap","forEach","field","message","LoginSchema","yup","shape","email","required","defined","password","RegisterSchema","username","min","max","trim","lowercase","UserSchema","ResetPasswordSchema","newPassword","confirmNewPassword","oneOf","undefined","ChangePasswordSchema","currentPassword","ForgotPasswordSchema","InputField","label","useField","touched","mt","isInvalid","htmlFor","fontSize","textTransform","borderColor","focusBorderColor","ChangePasswordModal","isOpen","onClose","toast","useToast","values","a","setErrors","title","duration","isClosable","isCentered","initialValues","validationSchema","onSubmit","isSubmitting","textAlign","fontWeight","pb","autoComplete","type","onClick","mr","variant","color","_hover","_active","_focus","boxShadow","isLoading","createImage","url","resolve","image","Image","setAttribute","src","getRadianAngle","degreeValue","Math","PI","getCroppedImg","imageSrc","pixelCrop","rotation","canvas","document","createElement","ctx","getContext","maxSize","height","safeArea","sqrt","translate","rotate","drawImage","getImageData","putImageData","round","x","y","toBlob","file","CropImageModal","applyCrop","initialImage","useState","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","onCropComplete","useCallback","croppedArea","showCroppedImage","croppedImage","console","closeOnOverlayClick","h","overflow","position","aspect","cropShape","onCropChange","onZoomChange","aria-label","step","value","onChange","my","Account","useQuery","then","res","cache","useQueryClient","logOutUser","history","useHistory","useDisclosure","onOpen","cropperIsOpen","cropperOnOpen","cropperOnClose","inputFile","useRef","imageUrl","setImageUrl","cropImage","setCropImage","clear","push","formData","FormData","append","handleSelectImage","event","currentTarget","files","URL","createObjectURL","minHeight","align","justifyContent","px","maxWidth","mb","justify","p","size","cursor","opacity","click","accept","ref","hidden","placeholder","colorScheme","goBack","File","AuthRoute","Component","component","rest","storage","JSON","parse","getItem","render","to","ForgotPassword","handleSubmit","description","w","AppLayout","showLastColumn","templateColumns","templateRows","sendMessage","channelId","onUploadProgress","deleteMessage","editMessage","text","channelStore","typing","addTyping","removeTyping","filter","u","getOrCreateDirectMessage","closeDirectMessage","createGuild","joinGuild","getInviteLink","isPermanent","invalidateInviteLinks","getGuildMembers","editGuild","deleteGuild","changeGuildMemberSettings","kickMember","memberId","banMember","unbanMember","ModActionModal","member","isBan","useParams","action","invalidateQueries","toLocaleLowerCase","RemoveFriendModal","find","friend","useGetFriend","setQueryData","friends","MemberContextMenu","isOwner","modIsOpen","modOnOpen","modOnClose","setIsBan","getOrCreateDM","handleFriendClick","isFriend","className","getTime","createdAt","dayjs","calendar","formatDivider","date","format","DeleteMessageModal","alignItems","py","ml","EditMessageModal","setText","e","target","extend","UserPopover","isLazy","placement","boxSize","isOnline","nickname","textColor","useGetCurrentGuild","g","MessageContent","filetype","updatedAt","startsWith","fit","alt","controls","Message","isCompact","showSettings","setShowSettings","isAuthor","guild","ownerId","showMenu","isDeleteOpen","onDeleteOpen","onDeleteClose","isEditOpen","onEditOpen","onEditClose","random","toString","substr","show","useContextMenu","profileShow","onMouseLeave","onMouseEnter","minW","onContextMenu","newWindow","open","opener","openInNewTab","as","FiLink","MdEdit","FaRegTrashAlt","DateDivider","mx","useGetCurrentChannel","key","c","useGetCurrentDM","channel","StartMessages","DMStartMessages","ChannelStartMessages","m","guildScrollbarCss","ChatGrid","gridColumn","gridRow","display","flexDirection","overflowY","css","ChatScreen","hasMore","setHasMore","qKey","useInfiniteQuery","pageParam","length","getNextPageParam","LastPage","fetchNextPage","store","newMessage","d","pages","unshift","index","editId","i","findIndex","toBeRemoved","useMessageSocket","thickness","checkIfWithinTime","message1","message2","date1","date2","diff","messages","flatMap","InfiniteScroll","dataLength","next","style","inverse","loader","scrollableTarget","map","Fragment","isSame","StyledTooltip","disabled","hasArrow","isDisabled","SUPPORTED_FORMATS","FileSchema","nullable","test","FileUploadButton","setSubmitting","progress","setProgress","closeModal","validate","loaded","total","MdAddCircle","hasStripe","isAnimated","MessageInput","currentlyTyping","setCurrentlyTyping","inputRef","isTyping","focus","ResizeTextarea","minH","transition","resize","minRows","pl","border","onKeyDown","members","getTypingString","NotificationIndicator","left","ChannelNotificationIndicator","ActiveGuildPill","HoverGuildPill","GuildListItem","isActive","useLocation","isHover","setHover","hasNotification","default_channel_id","icon","GuildSchema","AddGuildModal","screen","setScreen","submitClose","JoinServerModal","CreateServerModal","spacing","link","guilds","AddGuildIcon","direction","NotificationIcon","count","bottom","right","transform","PingIcon","HomeIcon","notification","Logo","padding","GuildList","editedGuild","deleteId","useGuildSocket","zIndex","listStyleType","AddFriendModal","useClipboard","hasCopied","onCopy","isReadOnly","FriendsListHeader","toggle","requests","FiUsers","FriendsListItem","preventDefault","OnlineLabel","FriendsList","newFriend","sort","b","localeCompare","useFriendSocket","RequestListItem","request","acceptRequest","declineRequest","PendingList","FriendsDashboard","DMHeader","FaAt","DMListItem","dm","currentPath","showCloseButton","setShowButton","IoMdClose","DMPlaceholder","FriendsListButton","AccountBar","pos","closeOnClick","dmScrollerCss","DMSidebar","dmId","useDMSocket","Home","Invite","handleJoin","RLink","Footer","viewBox","fill","Navbar","wrap","rounded","LandingLayout","maxW","xl","Hero","subtitle","ctaLink","ctaText","base","md","lineHeight","Link","sm","Landing","Login","handleLogIn","log","Register","handleRegister","ResetPassword","token","tokenError","setTokenError","settingsStore","showMembers","toggleShowMembers","ChannelHeader","toggleMemberList","BsPeopleFill","createChannel","editChannel","deleteChannel","ChannelSchema","isPublic","optional","default","ChannelSettingsModal","selectedItems","setSelectedItems","resetForm","ids","item","handleCreateItem","curr","ListItem","selected","setFieldValue","defaultChecked","checked","onCreateItem","items","itemRenderer","onSelectedItemsChange","changes","handleSelectedItemsChange","rightIcon","DeleteChannelModal","ChannelListItem","FaHashtag","FaUserLock","MdSettings","MemberSchema","matches","EditMemberModal","onChangeComplete","hex","channelScrollbarCss","GuildSettingsModal","isReset","setIsReset","setCroppedImage","handleInvalidateInvites","DeleteGuildModal","BanListModal","unbanUser","maxH","StyledMenuItem","handleClick","StyledRedMenuItem","StyledMenuList","GuildMenu","channelOpen","inviteOpen","memberOpen","memberOnOpen","memberOnClose","handleLeave","FiX","FiChevronDown","FaUserPlus","RiSettings5Fill","FaUserEdit","HiLogout","CreateChannelModal","InviteModal","inviteLink","setInviteLink","setPermanent","fetchLink","Channels","inviteIsOpen","inviteClose","channelIsOpen","channelClose","newChannel","editedChannel","useChannelSocket","MemberListItem","memberScrollbarCss","MemberList","online","offline","newMember","useMemberSocket","ViewGuild","showMemberList","App","exact","path","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a7d6d9bc.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\nimport { mode } from \"@chakra-ui/theme-tools\";\n\nconst config = {\n  initialColorMode: \"dark\",\n};\n\nconst styles = {\n  global: (props) => ({\n    body: {\n      bg: mode(\"gray.100\", \"#1b1c1d\")(props),\n    },\n  }),\n};\n\nconst colors = {\n  highlight: {\n    standard: \"#7289da\",\n    hover: \"#677bc4\",\n    active: \"#5b6eae\",\n  },\n  brandGray: {\n    accent: \"#8e9297\",\n    active: \"#393c43\",\n    light: \"#36393f\",\n    dark: \"#303339\",\n    darker: \"#202225\",\n    darkest: \"#18191c\",\n    hover: \"#32353b\",\n  },\n  brandGreen: \"#43b581\",\n  labelGray: \"#72767d\",\n  menuRed: \"#f04747\",\n  brandBorder: \"#1A202C\",\n  accountBar: \"#292b2f\",\n  memberList: \"#2f3136\",\n  iconColor: \"#b9bbbe\",\n  messageInput: \"#40444b\",\n};\n\nconst fonts = {\n  body: \"'Open Sans', sans-serif\",\n};\n\nconst customTheme = extendTheme({ colors, config, styles, fonts });\n\nexport default customTheme;\n\nexport const scrollbarCss = {\n  \"&::-webkit-scrollbar\": {\n    width: \"8px\",\n  },\n  \"&::-webkit-scrollbar-track\": {\n    background: \"#2f3136\",\n    width: \"10px\",\n  },\n  \"&::-webkit-scrollbar-thumb\": {\n    background: \"brandGray.darker\",\n    borderRadius: \"18px\",\n  },\n};\n","import create from \"zustand\";\nimport { persist } from \"zustand/middleware\";\n\nconst userStore = create(\n  persist(\n    (set, get) => ({\n      current: null,\n      setUser: (user) => set({ current: user }),\n      logout: () => set({ current: null }),\n      isAuth: () => get().current !== null,\n    }),\n    {\n      name: \"user-storage\",\n    }\n  )\n);\n\nexport default userStore;\n","import socketIOClient from \"socket.io-client\";\n\nexport default function getSocket() {\n  return socketIOClient(`/ws`, {\n    transports: [\"websocket\"],\n    upgrade: false,\n  });\n}\n\n// /ws\n","import create from \"zustand\";\n\nconst homeStore = create((set) => ({\n  notifCount: 0,\n  requestCount: 0,\n  increment: () => set((state) => ({ notifCount: state.notifCount + 1 })),\n  reset: () => set(() => ({ notifCount: 0 })),\n  resetRequest: () => set(() => ({ requestCount: 0 })),\n  setRequests: (r) => set(() => ({ requestCount: r })),\n  isPending: false,\n  toggleDisplay: () => set((state) => ({ isPending: !state.isPending })),\n}));\n\nexport default homeStore;\n","import React, { useEffect } from \"react\";\nimport userStore from \"stores/userStore\";\nimport getSocket from \"api/getSocket\";\nimport homeStore from \"stores/homeStore\";\n\nexport default function GlobalState({ children }) {\n  const current = userStore((state) => state.current);\n  const inc = homeStore((state) => state.increment);\n\n  useEffect(() => {\n    if (current) {\n      const incrementNotification = () => {\n        if (!window.location.pathname.includes(\"/channels/me\")) {\n          inc();\n        }\n      };\n\n      const disconnect = () => {\n        socket.emit(\"toggleOffline\");\n        socket.disconnect();\n      };\n\n      const socket = getSocket();\n      socket.emit(\"toggleOnline\");\n      socket.emit(\"joinUser\", current?.id);\n\n      socket.on(\"push_to_top\", () => {\n        incrementNotification();\n      });\n\n      socket.on(\"send_request\", () => {\n        incrementNotification();\n      });\n\n      window.addEventListener(\"beforeunload\", disconnect);\n\n      return () => disconnect();\n    }\n  }, [current, inc]);\n\n  return <>{children}</>;\n}\n","import { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport customTheme from \"utils/theme\";\nimport GlobalState from \"./components/sections/GlobalState\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst client = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      cacheTime: 0,\n    },\n  },\n});\n\nexport default function AppProviders({ children }) {\n  return (\n    <QueryClientProvider client={client}>\n      <ReactQueryDevtools />\n      <ColorModeScript />\n      <ChakraProvider theme={customTheme}>\n        <GlobalState>\n          <Router>{children}</Router>\n        </GlobalState>\n      </ChakraProvider>\n    </QueryClientProvider>\n  );\n}\n","import axios from \"axios\";\n\nexport const api = axios.create({\n  baseURL: \"/api\",\n  withCredentials: true,\n});\n// /api\n// interceptor, for throwing errors whenever authentication fails, for instance when user credentials or jwt token is been tempered, and then we redirect to the login page\n\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    const { status } = error.response;\n    switch (status) {\n      case 403:\n        localStorage.removeItem(\"user-storage\");\n        window.location.replace(\"/login\");\n        break;\n      default:\n        break;\n    }\n\n    return Promise.reject(error);\n  }\n);\n","import { api } from \"../apiClient\";\n\nexport const getAccount = () => api.get(\"/account\");\n\nexport const updateAccount = (body) =>\n  api.put(\"/account\", body, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    },\n  });\n\nexport const getFriends = () => api.get(\"/account/me/friends\");\n\nexport const getPendingRequests = () => api.get(\"/account/me/pending\");\n\nexport const sendFriendRequest = (id) => api.post(`/account/${id}/friend`);\n\nexport const removeFriend = (id) => api.delete(`/account/${id}/friend`);\n\nexport const acceptFriendRequest = (id) =>\n  api.post(`/account/${id}/friend/accept`);\n\nexport const declineFriendRequest = (id) =>\n  api.post(`/account/${id}/friend/cancel`);\n","import { api } from \"../apiClient\";\n\nexport const register = (body) => api.post(\"/account/register\", body);\n\nexport const login = (body) => api.post(\"/account/login\", body);\n\nexport const logout = () => api.post(\"/account/logout\");\n\nexport const forgotPassword = (email) =>\n  api.post(\"/account/forgot-password\", { email });\n\nexport const changePassword = () => null;\n\nexport const resetPassword = (body) =>\n  api.post(\"/account/reset-password\", body);\n","export const gKey = \"guilds\";\nexport const dmKey = \"dms\";\nexport const aKey = \"account\";\nexport const fKey = \"friends\";\nexport const rKey = \"requests\";\n\nexport const cKey = (guildId) => `channels-${guildId}`;\nexport const mKey = (guildId) => `members-${guildId}`;\n","export default function toErrorMap(err) {\n  if (err?.response?.data?.errors) {\n    const errors = err?.response?.data?.errors;\n    const errorMap = {};\n    errors.forEach(({ field, message }) => {\n      errorMap[field] = message;\n    });\n    return errorMap;\n  }\n}\n","import * as yup from \"yup\";\n\nexport const LoginSchema = yup.object().shape({\n  email: yup.string().required(\"Email is required\").defined(),\n  password: yup.string().required(\"Password is required\").defined(),\n});\n\nexport const RegisterSchema = yup.object().shape({\n  username: yup\n    .string()\n    .min(3)\n    .max(30)\n    .trim()\n    .required(\"Username is required\")\n    .defined(),\n  email: yup\n    .string()\n    .email()\n    .lowercase()\n    .required(\"Email is required\")\n    .defined(),\n  password: yup\n    .string()\n    .min(6, \"Password must be at least 6 characters long\")\n    .max(150)\n    .required(\"Password is required\")\n    .defined(),\n});\n\nexport const UserSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email()\n    .lowercase()\n    .required(\"Email is required\")\n    .defined(),\n  username: yup\n    .string()\n    .min(3)\n    .max(30)\n    .trim()\n    .required(\"Username is required\")\n    .defined(),\n});\n\nexport const ResetPasswordSchema = yup.object().shape({\n  newPassword: yup\n    .string()\n    .min(6, \"Password must be at least 6 characters long\")\n    .max(150)\n    .required(\"New password is required\")\n    .defined(),\n  confirmNewPassword: yup\n    .string()\n    .oneOf([yup.ref(\"newPassword\"), undefined], \"Passwords do not match\")\n    .required(\"Confirm new password is required\")\n    .defined(),\n});\n\nexport const ChangePasswordSchema = yup.object().shape({\n  currentPassword: yup.string().required(\"Old Password is required\").defined(),\n  newPassword: yup\n    .string()\n    .min(6, \"Password must be at least 6 characters long\")\n    .max(150)\n    .required(\"New password is required\")\n    .defined(),\n  confirmNewPassword: yup\n    .string()\n    .oneOf([yup.ref(\"newPassword\"), undefined], \"Passwords do not match\")\n    .required(\"Confirm new password is required\")\n    .defined(),\n});\n\nexport const ForgotPasswordSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email()\n    .lowercase()\n    .required(\"Email is required\")\n    .defined(),\n});\n","import {\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useField } from \"formik\";\nimport React from \"react\";\n\nexport default function InputField({ label, ...props }) {\n  const [field, { error, touched }] = useField(props);\n  return (\n    <FormControl mt={4} isInvalid={error != null && touched}>\n      <FormLabel htmlFor={field.name}>\n        <Text fontSize=\"12px\" textTransform=\"uppercase\">\n          {label}\n        </Text>\n      </FormLabel>\n      {/* @ts-ignore */}\n      <Input\n        bg=\"brandGray.dark\"\n        borderColor=\"black\"\n        borderRadius=\"3px\"\n        focusBorderColor=\"highlight.standard\"\n        {...field}\n        {...props}\n      />\n      <FormErrorMessage>{error}</FormErrorMessage>\n    </FormControl>\n  );\n}\n","import {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport { changePassword } from \"api/handler/auth\";\nimport React from \"react\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport { ChangePasswordSchema } from \"validation/auth.schema\";\nimport InputField from \"components/shared/InputField\";\n\nexport default function ChangePasswordModal({ isOpen, onClose }) {\n  const toast = useToast();\n\n  async function handleSubmit(values, { setErrors }) {\n    try {\n      const { data } = await changePassword(values);\n      if (data) {\n        toast({\n          title: \"Changed Password\",\n          status: \"success\",\n          duration: 5000,\n          isClosable: true,\n        });\n        onClose();\n      }\n    } catch (err) {\n      setErrors(toErrorMap(err));\n    }\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n\n      <ModalContent bg=\"brandGray.light\">\n        <Formik\n          initialValues={{\n            currentPassword: \"\",\n            newPassword: \"\",\n            confirmNewPassword: \"\",\n          }}\n          validationSchema={ChangePasswordSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <ModalHeader textAlign=\"center\" fontWeight=\"bold\">\n                Change your password\n              </ModalHeader>\n              <ModalCloseButton />\n              <ModalBody pb={6}>\n                <Text>Enter your current password and a new password</Text>\n                <InputField\n                  label=\"current password\"\n                  name=\"currentPassword\"\n                  autoComplete=\"password\"\n                  type=\"password\"\n                />\n\n                <InputField\n                  label=\"new password\"\n                  name=\"newPassword\"\n                  autoComplete=\"password\"\n                  type=\"password\"\n                />\n\n                <InputField\n                  label=\"confirm new password\"\n                  name=\"confirmNewPassword\"\n                  autoComplete=\"password\"\n                  type=\"password\"\n                />\n              </ModalBody>\n\n              <ModalFooter bg=\"brandGray.dark\">\n                <Button\n                  onClick={onClose}\n                  fontSize={\"14px\"}\n                  mr={6}\n                  variant=\"link\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  background=\"highlight.standard\"\n                  color=\"white\"\n                  type=\"submit\"\n                  _hover={{ bg: \"highlight.hover\" }}\n                  _active={{ bg: \"highlight.active\" }}\n                  _focus={{ boxShadow: \"none\" }}\n                  isLoading={isSubmitting}\n                  fontSize={\"14px\"}\n                >\n                  Done\n                </Button>\n              </ModalFooter>\n            </Form>\n          )}\n        </Formik>\n      </ModalContent>\n    </Modal>\n  );\n}\n","const createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener(\"load\", () => resolve(image));\n    image.addEventListener(\"error\", (error) => reject(error));\n    image.setAttribute(\"crossOrigin\", \"anonymous\"); // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url;\n  });\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180;\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} imageSrc - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc);\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  const maxSize = Math.max(image.width, image.height);\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea;\n  canvas.height = safeArea;\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2);\n  ctx.rotate(getRadianAngle(rotation));\n  ctx.translate(-safeArea / 2, -safeArea / 2);\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  );\n  const data = ctx.getImageData(0, 0, safeArea, safeArea);\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width;\n  canvas.height = pixelCrop.height;\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\n  );\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve) => {\n    canvas.toBlob((file) => {\n      resolve(file);\n    }, \"image/jpeg\");\n  });\n}\n","import {\n  Box,\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Slider,\n  SliderFilledTrack,\n  SliderThumb,\n  SliderTrack,\n} from \"@chakra-ui/react\";\nimport React, { useCallback, useState } from \"react\";\nimport Cropper from \"react-easy-crop\";\nimport getCroppedImg from \"utils/cropImage\";\n\nexport default function CropImageModal({\n  isOpen,\n  onClose,\n  applyCrop,\n  initialImage,\n}) {\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n\n  const showCroppedImage = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImg(initialImage, croppedAreaPixels);\n      applyCrop(croppedImage);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [croppedAreaPixels, initialImage, applyCrop]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      isCentered\n      closeOnOverlayClick={false}\n    >\n      <ModalOverlay />\n\n      <ModalContent bg=\"brandGray.light\">\n        <ModalHeader fontWeight=\"bold\">EDIT MEDIA</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Box h=\"400px\" overflow=\"hidden\" position=\"relative\">\n            <Cropper\n              image={initialImage}\n              crop={crop}\n              zoom={zoom}\n              aspect={1}\n              cropShape=\"round\"\n              onCropChange={setCrop}\n              onCropComplete={onCropComplete}\n              onZoomChange={setZoom}\n            />\n          </Box>\n          <Slider\n            aria-label=\"zoom\"\n            min={1}\n            max={3}\n            step={0.01}\n            value={zoom}\n            onChange={(value) => setZoom(value)}\n            my=\"4\"\n          >\n            <SliderTrack>\n              <SliderFilledTrack />\n            </SliderTrack>\n            <SliderThumb />\n          </Slider>\n        </ModalBody>\n\n        <ModalFooter bg=\"brandGray.dark\">\n          <Button onClick={onClose} fontSize={\"14px\"} mr={6} variant=\"link\">\n            Cancel\n          </Button>\n          <Button\n            background=\"highlight.standard\"\n            color=\"white\"\n            type=\"submit\"\n            fontSize={\"14px\"}\n            _hover={{ bg: \"highlight.hover\" }}\n            _active={{ bg: \"highlight.active\" }}\n            _focus={{ boxShadow: \"none\" }}\n            onClick={showCroppedImage}\n          >\n            Apply\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Flex,\n  Heading,\n  LightMode,\n  Spacer,\n  Tooltip,\n  useDisclosure,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { getAccount, updateAccount } from \"api/handler/account\";\nimport { logout } from \"api/handler/auth\";\nimport { Form, Formik } from \"formik\";\nimport React, { useRef, useState } from \"react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useHistory } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport { aKey } from \"utils/querykeys\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport ChangePasswordModal from \"components/modals/ChangePasswordModal\";\nimport CropImageModal from \"components/modals/CropImageModal\";\nimport InputField from \"components/shared/InputField\";\nimport { UserSchema } from \"validation/auth.schema\";\n\nexport default function Account() {\n  const { data: user } = useQuery(aKey, () =>\n    getAccount().then((res) => res.data)\n  );\n  const cache = useQueryClient();\n\n  const logOutUser = userStore((state) => state.logout);\n  const setUser = userStore((state) => state.setUser);\n\n  const history = useHistory();\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const {\n    isOpen: cropperIsOpen,\n    onOpen: cropperOnOpen,\n    onClose: cropperOnClose,\n  } = useDisclosure();\n\n  const inputFile = useRef(null);\n  const [imageUrl, setImageUrl] = useState(user?.image || \"\");\n  const [cropImage, setCropImage] = useState(\"\");\n  const [croppedImage, setCroppedImage] = useState(null);\n\n  async function handleLogout() {\n    const { data } = await logout();\n    if (data) {\n      cache.clear();\n      logOutUser();\n      history.push(\"/\");\n    }\n  }\n\n  async function handleUpdateAccount(values, { setErrors }) {\n    try {\n      const formData = new FormData();\n      formData.append(\"email\", values.email);\n      formData.append(\"username\", values.username);\n      formData.append(\"image\", croppedImage ?? imageUrl);\n      const { data } = await updateAccount(formData);\n\n      if (data) {\n        setUser(data);\n        toast({\n          title: \"Account Updated 😎 \",\n          status: \"success\",\n          duration: 4000,\n          isClosable: true,\n        });\n      }\n    } catch (error) {\n      setErrors(toErrorMap(error));\n    }\n  }\n\n  function handleSelectImage(event) {\n    if (!event.currentTarget.files) return;\n\n    setCropImage(URL.createObjectURL(event.currentTarget.files[0]));\n    cropperOnOpen();\n  }\n\n  function applyCrop(file) {\n    setImageUrl(URL.createObjectURL(file));\n    setCropImage(new File([file], \"avatar\"));\n    cropperOnClose();\n  }\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <Flex minHeight=\"100vh\" width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box px={4} width=\"full\" maxWidth=\"500px\">\n        <Flex mb=\"4\" justify=\"center\">\n          <Heading fontSize=\"24px\">MY ACCOUNT</Heading>\n        </Flex>\n        <Box p={4} borderRadius={4} background=\"brandGray.light\">\n          <Box>\n            <Formik\n              initialValues={{\n                email: user.email,\n                username: user.username,\n                image: null,\n              }}\n              validationSchema={UserSchema}\n              onSubmit={handleUpdateAccount}\n            >\n              {({ isSubmitting, values }) => (\n                <Form>\n                  <Flex mb=\"4\" justify=\"center\">\n                    <Tooltip label=\"Change Avatar\" aria-label=\"Change Avatar\">\n                      <Avatar\n                        size=\"xl\"\n                        name={user.username}\n                        src={imageUrl || user.image}\n                        _hover={{ cursor: \"pointer\", opacity: 0.5 }}\n                        onClick={() => inputFile.current.click()}\n                      />\n                    </Tooltip>\n                    <input\n                      type=\"file\"\n                      name=\"image\"\n                      accept=\"image/*\"\n                      ref={inputFile}\n                      hidden\n                      onChange={handleSelectImage}\n                    />\n                  </Flex>\n                  <Box my={4}>\n                    <InputField\n                      value={values.email}\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      label=\"Email\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                    />\n\n                    <InputField\n                      value={values.username}\n                      placeholder=\"Username\"\n                      label=\"Username\"\n                      name=\"username\"\n                      autoComplete=\"username\"\n                    />\n\n                    <Flex my={8} align={\"end\"}>\n                      <Spacer />\n                      <Button\n                        mr={4}\n                        colorScheme=\"white\"\n                        variant=\"outline\"\n                        onClick={history.goBack}\n                        fontSize={\"14px\"}\n                      >\n                        Close\n                      </Button>\n\n                      <LightMode>\n                        <Button\n                          type=\"submit\"\n                          colorScheme=\"green\"\n                          isLoading={isSubmitting}\n                          fontSize={\"14px\"}\n                        >\n                          Update\n                        </Button>\n                      </LightMode>\n                    </Flex>\n                  </Box>\n                </Form>\n              )}\n            </Formik>\n          </Box>\n          <Divider my={\"4\"} />\n          <Flex>\n            <Heading fontSize=\"18px\">PASSWORD AND AUTHENTICATION</Heading>\n          </Flex>\n          <Flex mt=\"4\">\n            <Button\n              background=\"highlight.standard\"\n              color=\"white\"\n              type=\"submit\"\n              _hover={{ bg: \"highlight.hover\" }}\n              _active={{ bg: \"highlight.active\" }}\n              _focus={{ boxShadow: \"none\" }}\n              onClick={onOpen}\n              fontSize={\"14px\"}\n            >\n              Change Password\n            </Button>\n\n            <Spacer />\n            <Button\n              colorScheme=\"red\"\n              variant=\"outline\"\n              onClick={handleLogout}\n              fontSize={\"14px\"}\n            >\n              Logout\n            </Button>\n          </Flex>\n        </Box>\n      </Box>\n      {isOpen && <ChangePasswordModal isOpen={isOpen} onClose={onClose} />}\n      {cropperIsOpen && (\n        <CropImageModal\n          isOpen={cropperIsOpen}\n          onClose={cropperOnClose}\n          initialImage={cropImage}\n          applyCrop={applyCrop}\n        />\n      )}\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\n\nexport default function AuthRoute({ component: Component, ...rest }) {\n  const current = userStore((state) => state.current);\n  const storage = JSON.parse(localStorage.getItem(\"user-storage\"));\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        current || storage?.state?.current ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n}\n","import { Box, Button, Flex, Heading, Image, useToast } from \"@chakra-ui/react\";\nimport { forgotPassword } from \"api/handler/auth\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport InputField from \"components/shared/InputField\";\nimport { ForgotPasswordSchema } from \"validation/auth.schema\";\n\nexport default function ForgotPassword() {\n  const history = useHistory();\n  const toast = useToast();\n\n  const handleSubmit = async (values, { setErrors }) => {\n    try {\n      const { data } = await forgotPassword(values.email);\n      if (data) {\n        toast({\n          title: \"Reset Password\",\n          description:\n            \"If account with that email is in DataBase, they get the email\",\n          status: \"success\",\n          duration: 5000,\n          isClosable: true,\n        });\n\n        history.push(\"/\");\n      }\n    } catch (error) {\n      setErrors(toErrorMap(error));\n    }\n  };\n\n  return (\n    <Flex minHeight=\"100vh\" width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box px={4} width=\"full\" maxWidth=\"500px\" textAlign=\"center\">\n        <Flex mb=\"4\" justify=\"center\">\n          <Image src=\"/logo.png\" w=\"80px\" />\n        </Flex>\n        <Box p={4} borderRadius={4} background=\"brandGray.light\">\n          <Box textAlign=\"center\">\n            <Heading fontSize=\"24px\">Forgot Password</Heading>\n          </Box>\n          <Box my={4} textAlign=\"left\">\n            <Formik\n              initialValues={{ email: \"\" }}\n              validationSchema={ForgotPasswordSchema}\n              onSubmit={handleSubmit}\n            >\n              {({ isSubmitting }) => (\n                <Form>\n                  <InputField\n                    label=\"Email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    type=\"email\"\n                  />\n\n                  <Button\n                    background=\"highlight.standard\"\n                    color=\"white\"\n                    width=\"full\"\n                    mt={4}\n                    type=\"submit\"\n                    isLoading={isSubmitting}\n                    _hover={{ bg: \"highlight.hover\" }}\n                    _active={{ bg: \"highlight.active\" }}\n                    _focus={{ boxShadow: \"none\" }}\n                    fontSize={\"14px\"}\n                  >\n                    Send Mail\n                  </Button>\n                </Form>\n              )}\n            </Formik>\n          </Box>\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n","import { Grid } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport default function AppLayout({ showLastColumn = false, children }) {\n  return (\n    <Grid\n      height=\"100vh\"\n      templateColumns={`75px 240px 1fr ${showLastColumn ? \"240px\" : \"\"} `}\n      templateRows=\"auto 1fr auto\"\n      bg=\"brandGray.light\"\n    >\n      {children}\n    </Grid>\n  );\n}\n","import { api } from \"../apiClient\";\n\nexport const getMessages = (id, cursor) =>\n  api.get(`/messages/${id}/${cursor ? `?cursor=${cursor}` : \"\"} `);\n\nexport const sendMessage = (channelId, data, onUploadProgress) =>\n  api.post(`/messages/${channelId}`, data, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    },\n    onUploadProgress,\n  });\n\nexport const deleteMessage = (id) => api.delete(`/messages/${id}`);\n\nexport const editMessage = (id, text) => api.put(`/messages/${id}`, { text });\n","import create from \"zustand\";\n\nconst channelStore = create((set, get) => ({\n  typing: [],\n  addTyping: (username) => {\n    set((state) => ({ typing: [...state.typing, username] }));\n  },\n  removeTyping: (username) => {\n    set((state) => ({\n      typing: [...state.typing.filter((u) => u !== username)],\n    }));\n  },\n  reset: () => {\n    set(() => ({ typing: [] }));\n  },\n}));\n\nexport default channelStore;\n","import { api } from \"../apiClient\";\n\nexport const getUserDMs = () => api.get(\"/channels/me/dm\");\n\nexport const getOrCreateDirectMessage = (id) => api.post(`/channels/${id}/dm`);\n\nexport const closeDirectMessage = (id) => api.delete(`/channels/${id}/dm`);\n","import { api } from \"../apiClient\";\n\nexport const getUserGuilds = () => api.get(\"/guilds\");\n\nexport const createGuild = (body) => api.post(\"/guilds/create\", body);\n\nexport const joinGuild = (body) => api.post(\"/guilds/join\", body);\n\nexport const getInviteLink = (id, isPermanent = false) =>\n  api.get(`/guilds/${id}/invite${isPermanent ? \"?isPermanent=true\" : \"\"}`);\n\nexport const invalidateInviteLinks = (id) => api.delete(`/guilds/${id}/invite`);\n\nexport const getGuildMembers = (id) => api.get(`/guilds/${id}/members`);\n\nexport const editGuild = (id, body) =>\n  api.put(`/guilds/${id}`, body, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    },\n  });\nexport const deleteGuild = (id) => api.delete(`/guilds/${id}/delete`);\n\nexport const getGuildMemberSettings = (id) => api.get(`/guilds/${id}/member`);\n\nexport const changeGuildMemberSettings = (id, body) =>\n  api.put(`/guilds/${id}/member`, body);\n\nexport const kickMember = (guildId, memberId) =>\n  api.post(`/guilds/${guildId}/kick`, { memberId });\n\nexport const banMember = (guildId, memberId) =>\n  api.post(`/guilds/${guildId}/bans`, { memberId });\n\nexport const leaveGuild = (id) => api.delete(`guilds/${id}`);\n\nexport const getBanList = (id) => api.get(`guilds/${id}/bans`);\n\nexport const unbanMember = (guildId, memberId) =>\n  api.delete(`guilds/${guildId}/bans`, { data: { memberId } });\n","import {\n  Button,\n  LightMode,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from \"@chakra-ui/react\";\nimport { banMember, kickMember } from \"api/handler/guilds\";\nimport React from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { mKey } from \"utils/querykeys\";\n\nexport default function ModActionModal({ member, isOpen, onClose, isBan }) {\n  const cache = useQueryClient();\n  const { guildId } = useParams();\n  const action = isBan ? \"Ban \" : \"Kick \";\n\n  async function handleBanMember() {\n    onClose();\n    const { data } = isBan\n      ? await banMember(guildId, member.id)\n      : await kickMember(guildId, member.id);\n    if (data) {\n      cache.invalidateQueries(mKey(guildId));\n    }\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n\n      <ModalContent bg=\"brandGray.light\">\n        <ModalHeader\n          textTransform={\"uppercase\"}\n          fontWeight=\"bold\"\n          fontSize={\"14px\"}\n          mb={0}\n          pb={0}\n        >\n          {action}'{member.username}'\n        </ModalHeader>\n        <ModalBody>\n          <Text mb={\"4\"}>\n            Are you sure you want to {action.toLocaleLowerCase()} @\n            {member.username}?\n            {!isBan && \" They will be able to rejoin again with a new invite.\"}\n          </Text>\n        </ModalBody>\n\n        <ModalFooter bg=\"brandGray.dark\">\n          <Button onClick={onClose} mr={6} variant=\"link\" fontSize={\"14px\"}>\n            Cancel\n          </Button>\n          <LightMode>\n            <Button\n              colorScheme=\"red\"\n              fontSize={\"14px\"}\n              onClick={handleBanMember}\n            >\n              {action}\n            </Button>\n          </LightMode>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import {\n  Button,\n  LightMode,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from \"@chakra-ui/react\";\nimport { removeFriend } from \"api/handler/account\";\nimport React from \"react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport useGetFriend from \"hooks/useGetFriend\";\nimport { fKey } from \"utils/querykeys\";\n\nexport default function RemoveFriendModal({ id, isOpen, onClose }) {\n  const user = useGetFriend(id);\n  const cache = useQueryClient();\n\n  async function handleRemoveFriend() {\n    onClose();\n    const { data } = await removeFriend(id);\n\n    if (data) {\n      //cache.invalidateQueries(fKey)\n      cache.setQueryData(fKey, (friends) => {\n        return friends?.filter((friend) => friend.id !== id);\n      });\n    }\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n\n      <ModalContent bg=\"brandGray.light\">\n        <ModalHeader\n          textTransform={\"uppercase\"}\n          fontWeight=\"bold\"\n          mb={0}\n          pb={0}\n        >\n          Remove {user.username}\n        </ModalHeader>\n        <ModalBody>\n          <Text mb={\"4\"}>\n            Are you sure you want to permanently remove <b>{user.username}</b>{\" \"}\n            from your friends?\n          </Text>\n        </ModalBody>\n\n        <ModalFooter bg=\"brandGray.dark\">\n          <Button onClick={onClose} mr={6} variant=\"link\" fontSize={\"14px\"}>\n            Cancel\n          </Button>\n          <LightMode>\n            <Button\n              colorScheme=\"red\"\n              fontSize={\"14px\"}\n              onClick={handleRemoveFriend}\n            >\n              Remove Friend\n            </Button>\n          </LightMode>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { useQuery } from \"react-query\";\nimport { fKey } from \"utils/querykeys\";\n\nexport default function useGetFriend(id) {\n  const { data } = useQuery(fKey);\n  return data?.find((friend) => friend.id === id);\n}\n","import { Flex, Text, useDisclosure } from \"@chakra-ui/react\";\nimport { sendFriendRequest } from \"api/handler/account\";\nimport { getOrCreateDirectMessage } from \"api/handler/dm\";\nimport ModActionModal from \"components/modals/ModActionModal\";\nimport RemoveFriendModal from \"components/modals/RemoveFriendModal\";\nimport React, { useState } from \"react\";\nimport { Item, Menu, theme } from \"react-contexify\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function MemberContextMenu({ member, isOwner, id }) {\n  const history = useHistory();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const {\n    isOpen: modIsOpen,\n    onOpen: modOnOpen,\n    onClose: modOnClose,\n  } = useDisclosure();\n  const [isBan, setIsBan] = useState(false);\n\n  const getOrCreateDM = async () => {\n    const { data } = await getOrCreateDirectMessage(member.id);\n    if (data) {\n      history.push(`/channels/me/${data.id}`);\n    }\n  };\n\n  const handleFriendClick = async () => {\n    if (!member.isFriend) {\n      await sendFriendRequest(member.id);\n    } else {\n      onOpen();\n    }\n  };\n\n  return (\n    <>\n      <Menu id={id} theme={theme.dark}>\n        <Item onClick={getOrCreateDM} className={\"menu-item\"}>\n          <Flex align=\"center\" justify=\"space-between\" w=\"full\">\n            <Text>Message</Text>\n          </Flex>\n        </Item>\n        <Item onClick={handleFriendClick} className={\"menu-item\"}>\n          <Flex align=\"center\" justify=\"space-between\" w=\"full\">\n            <Text>{member.isFriend ? \"Remove\" : \"Add\"} Friend</Text>\n          </Flex>\n        </Item>\n        {isOwner && (\n          <>\n            <Item\n              onClick={() => {\n                setIsBan(false);\n                modOnOpen();\n              }}\n              className={\"delete-item\"}\n            >\n              <Flex align=\"center\" justify=\"space-between\" w=\"full\">\n                <Text>Kick {member.username}</Text>\n              </Flex>\n            </Item>\n            <Item\n              onClick={() => {\n                setIsBan(true);\n                modOnOpen();\n              }}\n              className={\"delete-item\"}\n            >\n              <Flex align=\"center\" justify=\"space-between\" w=\"full\">\n                <Text>Ban {member.username}</Text>\n              </Flex>\n            </Item>\n          </>\n        )}\n      </Menu>\n      {isOpen && <RemoveFriendModal id={member.id} isOpen onClose={onClose} />}\n      {modIsOpen && (\n        <ModActionModal\n          member={member}\n          isOpen={modIsOpen}\n          isBan={isBan}\n          onClose={modOnClose}\n        />\n      )}\n    </>\n  );\n}\n","import dayjs from \"dayjs\";\nimport calendar from \"dayjs/plugin/calendar\";\n\ndayjs.extend(calendar);\n\nexport function getTime(createdAt) {\n  return dayjs(createdAt).calendar();\n}\n\nexport function getShortenedTime(createdAt) {\n  return dayjs(createdAt).format(\"h:mm A\");\n}\n\nexport function getTimeDifference(date1, date2) {\n  return dayjs(date1).diff(dayjs(date2), \"minutes\");\n}\n\nexport function checkNewDay(date1, date2) {\n  return !dayjs(date1).isSame(dayjs(date2), \"day\");\n}\n\nexport function formatDivider(date) {\n  return dayjs(date).format(\"MMMM D, YYYY\");\n}\n","import {\n  Avatar,\n  Box,\n  Button,\n  Flex,\n  LightMode,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from \"@chakra-ui/react\";\nimport { deleteMessage } from \"api/handler/messages\";\nimport React from \"react\";\nimport { getTime } from \"utils/dateUtils\";\n\nexport default function DeleteMessageModal({ message, isOpen, onClose }) {\n  async function handleDeleteMessage() {\n    onClose();\n    await deleteMessage(message.id);\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n\n      <ModalContent bg=\"brandGray.light\">\n        <ModalHeader fontWeight=\"bold\" mb={0} pb={0}>\n          Delete Message\n        </ModalHeader>\n        <ModalBody>\n          <Text mb={\"4\"}>Are you sure you want to delete this message?</Text>\n\n          <Flex\n            alignItems=\"center\"\n            my=\"2\"\n            mr=\"1\"\n            justify=\"space-between\"\n            boxShadow={\"dark-lg\"}\n            py={2}\n          >\n            <Flex>\n              <Avatar\n                h=\"40px\"\n                w=\"40px\"\n                ml=\"4\"\n                mt={\"1\"}\n                src={message.user.image}\n              />\n              <Box ml=\"3\">\n                <Flex alignItems=\"center\">\n                  <Text>{message.user.username}</Text>\n                  <Text fontSize=\"12px\" color=\"brandGray.accent\" ml=\"3\">\n                    {getTime(message.createdAt)}\n                  </Text>\n                </Flex>\n                <Text>{message.text}</Text>\n              </Box>\n            </Flex>\n          </Flex>\n        </ModalBody>\n\n        <ModalFooter bg=\"brandGray.dark\">\n          <Button onClick={onClose} mr={6} variant=\"link\" fontSize={\"14px\"}>\n            Cancel\n          </Button>\n          <LightMode>\n            <Button\n              colorScheme=\"red\"\n              fontSize={\"14px\"}\n              onClick={handleDeleteMessage}\n            >\n              Delete\n            </Button>\n          </LightMode>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import {\n  Avatar,\n  Box,\n  Button,\n  Flex,\n  Input,\n  LightMode,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from \"@chakra-ui/react\";\nimport { editMessage } from \"api/handler/messages\";\nimport React, { useState } from \"react\";\nimport { getTime } from \"utils/dateUtils\";\n\nexport default function EditMessageModal({ message, isOpen, onClose }) {\n  const [text, setText] = useState(message.text);\n\n  async function handleEditMessage() {\n    if (!text || !text.trim()) return;\n    await editMessage(message.id, text.trim());\n    onClose();\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n\n      <ModalContent bg=\"brandGray.light\">\n        <ModalHeader fontWeight=\"bold\" mb={0} pb={0}>\n          Edit Message\n        </ModalHeader>\n        <ModalBody>\n          <Flex\n            alignItems=\"center\"\n            my=\"2\"\n            mr=\"1\"\n            justify=\"space-between\"\n            boxShadow={\"dark-lg\"}\n            py={2}\n          >\n            <Flex alignItems=\"center\">\n              <Avatar h=\"40px\" w=\"40px\" ml=\"4\" src={message.user.image} />\n              <Box ml=\"3\">\n                <Flex alignItems=\"center\">\n                  <Text>{message.user.username}</Text>\n                  <Text fontSize=\"12px\" color=\"brandGray.accent\" ml=\"3\">\n                    {getTime(message.createdAt)}\n                  </Text>\n                </Flex>\n                <Input\n                  value={text}\n                  onChange={(e) => setText(e.target.value)}\n                  bg=\"brandGray.dark\"\n                  borderColor=\"black\"\n                  borderRadius=\"3px\"\n                  focusBorderColor=\"none\"\n                />\n              </Box>\n            </Flex>\n          </Flex>\n        </ModalBody>\n\n        <ModalFooter bg=\"brandGray.dark\">\n          <Button onClick={onClose} mr={6} variant=\"link\" fontSize={\"14px\"}>\n            Cancel\n          </Button>\n          <LightMode>\n            <Button\n              colorScheme=\"green\"\n              fontSize={\"14px\"}\n              onClick={handleEditMessage}\n            >\n              Save\n            </Button>\n          </LightMode>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import {\n  Avatar,\n  AvatarBadge,\n  Box,\n  Flex,\n  Popover,\n  PopoverContent,\n  PopoverFooter,\n  PopoverHeader,\n  PopoverTrigger,\n  Text,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport default function UserPopover({ member, children }) {\n  return (\n    <Popover isLazy placement={\"right-start\"}>\n      <PopoverTrigger>{children}</PopoverTrigger>\n      <PopoverContent w={\"80%\"}>\n        <PopoverHeader bg={\"brandGray.darker\"} borderRadius={\"md\"}>\n          <Flex mt={2} align={\"center\"} justify={\"center\"}>\n            <Box>\n              <Avatar src={member.image} size={\"xl\"}>\n                <AvatarBadge\n                  boxSize=\"0.9em\"\n                  bg={member.isOnline ? \"green.500\" : \"gray.500\"}\n                />\n              </Avatar>\n              <Text\n                mt={2}\n                textAlign={\"center\"}\n                color={\"#fff\"}\n                fontWeight={\"semibold\"}\n              >\n                {member.nickname ?? member.username}\n              </Text>\n              {member.nickname && (\n                <Text textAlign={\"center\"}>{member.username}</Text>\n              )}\n            </Box>\n          </Flex>\n        </PopoverHeader>\n        <PopoverFooter bg={\"brandGray.dark\"}>\n          <Text\n            textColor={\"brandGray.accent\"}\n            fontSize={\"12px\"}\n            textAlign={\"center\"}\n          >\n            Right click user for more actions\n          </Text>\n        </PopoverFooter>\n      </PopoverContent>\n    </Popover>\n  );\n}\n","import { useQuery } from \"react-query\";\nimport { gKey } from \"utils/querykeys\";\n\nexport default function useGetCurrentGuild(guildId) {\n  const { data } = useQuery(gKey);\n  return data?.find((g) => g.id === guildId);\n}\n","import React from \"react\";\nimport { Box, Flex, Image, Text } from \"@chakra-ui/react\";\n\nexport default function MessageContent({\n  message: { url, text, filetype, createdAt, updatedAt },\n}) {\n  if (url && filetype) {\n    if (filetype.startsWith(\"image/\")) {\n      return (\n        <Box boxSize=\"sm\" my={\"2\"} h={\"full\"}>\n          <Image fit={\"contain\"} src={url} alt={\"\"} borderRadius=\"md\" />\n        </Box>\n      );\n    } else if (filetype.startsWith(\"audio/\")) {\n      return (\n        <Box my={\"2\"}>\n          <audio controls>\n            <source src={url} type={filetype} />\n          </audio>\n        </Box>\n      );\n    }\n  }\n  return (\n    <Flex alignItems={\"center\"}>\n      <Text>{text}</Text>\n      {createdAt !== updatedAt && (\n        <Text fontSize={\"10px\"} ml={\"1\"} color={\"labelGray\"}>\n          (edited)\n        </Text>\n      )}\n    </Flex>\n  );\n}\n","import { Avatar, Box, Flex, Icon, Text, useDisclosure } from \"@chakra-ui/react\";\nimport MemberContextMenu from \"components/menus/MemberContextMenu\";\nimport DeleteMessageModal from \"components/modals/DeleteMessageModal\";\nimport EditMessageModal from \"components/modals/EditMessageModal\";\nimport UserPopover from \"components/sections/UserPopover\";\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\nimport React, { useState } from \"react\";\nimport { Item, Menu, theme, useContextMenu } from \"react-contexify\";\nimport { FaEllipsisH, FaRegTrashAlt } from \"react-icons/fa\";\nimport { FiLink } from \"react-icons/fi\";\nimport { MdEdit } from \"react-icons/md\";\nimport { useParams } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport { getShortenedTime, getTime } from \"utils/dateUtils\";\nimport \"../css/ContextMenu.css\";\nimport MessageContent from \"./MessageContent\";\n\nexport default function Message({ message, isCompact = false }) {\n  const [showSettings, setShowSettings] = useState(false);\n  const current = userStore((state) => state.current);\n  const isAuthor = current?.id === message.user.id;\n  const { guildId } = useParams();\n  const guild = useGetCurrentGuild(guildId);\n  const isOwner = guild !== undefined && guild.ownerId === current?.id;\n  const showMenu = isAuthor || isOwner || message.url;\n\n  const {\n    isOpen: isDeleteOpen,\n    onOpen: onDeleteOpen,\n    onClose: onDeleteClose,\n  } = useDisclosure();\n  const {\n    isOpen: isEditOpen,\n    onOpen: onEditOpen,\n    onClose: onEditClose,\n  } = useDisclosure();\n  const id = `${message.user.id}-${Math.random().toString(36).substr(2, 5)}`;\n\n  const { show } = useContextMenu({\n    id: message.id,\n  });\n\n  const { show: profileShow } = useContextMenu({ id });\n\n  const openInNewTab = (url) => {\n    const newWindow = window.open(url, \"_blank\", \"noopener,noreferrer\");\n    if (newWindow) newWindow.opener = null;\n  };\n\n  return (\n    <>\n      <Flex\n        alignItems=\"center\"\n        mr=\"1\"\n        mt={isCompact ? \"0\" : \"3\"}\n        _hover={{ bg: \"brandGray.hover\" }}\n        justify=\"space-between\"\n        onMouseLeave={() => setShowSettings(false)}\n        onMouseEnter={() => setShowSettings(true)}\n      >\n        <Flex w={\"full\"}>\n          {isCompact ? (\n            <>\n              <Box ml={\"3\"} minW={\"44px\"} textAlign={\"center\"}>\n                <Text\n                  fontSize={\"10px\"}\n                  color=\"brandGray.accent\"\n                  mt={\"1\"}\n                  hidden={!showSettings}\n                >\n                  {getShortenedTime(message.createdAt)}\n                </Text>\n              </Box>\n\n              <Box ml=\"3\" w={\"full\"} onContextMenu={show}>\n                <MessageContent message={message} />\n              </Box>\n              {showSettings && showMenu ? (\n                <Box\n                  onClick={show}\n                  mr=\"2\"\n                  _hover={{ cursor: \"pointer\" }}\n                  h={\"5px\"}\n                >\n                  <FaEllipsisH />\n                </Box>\n              ) : (\n                <Box mr={\"6\"} />\n              )}\n            </>\n          ) : (\n            <>\n              <UserPopover member={message.user}>\n                <Avatar\n                  h=\"40px\"\n                  w=\"40px\"\n                  ml=\"4\"\n                  mt={\"1\"}\n                  src={message.user.image}\n                  _hover={{\n                    cursor: \"pointer\",\n                  }}\n                  onContextMenu={(e) => {\n                    if (!isAuthor) profileShow(e);\n                  }}\n                />\n              </UserPopover>\n              <Box ml=\"3\" w={\"full\"} onContextMenu={show}>\n                <Flex alignItems=\"center\" justify={\"space-between\"}>\n                  <Flex alignItems={\"center\"}>\n                    <Text color={message.user.color ?? undefined}>\n                      {message.user.nickname ?? message.user.username}\n                    </Text>\n                    <Text fontSize=\"12px\" color=\"brandGray.accent\" ml=\"2\">\n                      {getTime(message.createdAt)}\n                    </Text>\n                  </Flex>\n                  {showSettings && showMenu && (\n                    <Box onClick={show} mr=\"2\" _hover={{ cursor: \"pointer\" }}>\n                      <FaEllipsisH />\n                    </Box>\n                  )}\n                </Flex>\n                <MessageContent message={message} />\n              </Box>\n            </>\n          )}\n        </Flex>\n      </Flex>\n      {showMenu && (\n        <>\n          <Menu id={message.id} theme={theme.dark}>\n            {message.filetype ? (\n              <Item\n                className={\"menu-item\"}\n                onClick={() => {\n                  if (message.url) openInNewTab(message.url);\n                }}\n              >\n                <Flex align=\"center\" justify=\"space-between\" w=\"full\">\n                  <Text>Open Link</Text>\n                  <Icon as={FiLink} />\n                </Flex>\n              </Item>\n            ) : !isAuthor ? null : (\n              <Item className={\"menu-item\"} onClick={onEditOpen}>\n                <Flex align=\"center\" justify=\"space-between\" w=\"full\">\n                  <Text>Edit Message</Text>\n                  <Icon as={MdEdit} />\n                </Flex>\n              </Item>\n            )}\n            {(isAuthor || isOwner) && (\n              <Item onClick={onDeleteOpen} className={\"delete-item\"}>\n                <Flex align=\"center\" justify=\"space-between\" w=\"full\">\n                  <Text>Delete Message</Text>\n                  <Icon as={FaRegTrashAlt} />\n                </Flex>\n              </Item>\n            )}\n          </Menu>\n          {isDeleteOpen && (\n            <DeleteMessageModal\n              message={message}\n              isOpen={isDeleteOpen}\n              onClose={onDeleteClose}\n            />\n          )}\n          {isEditOpen && (\n            <EditMessageModal\n              message={message}\n              isOpen={isEditOpen}\n              onClose={onEditClose}\n            />\n          )}\n        </>\n      )}\n      {!isAuthor && (\n        <MemberContextMenu member={message.user} isOwner={isOwner} id={id} />\n      )}\n    </>\n  );\n}\n","import { Divider, Flex, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { formatDivider } from \"utils/dateUtils\";\n\nexport default function DateDivider({ date }) {\n  return (\n    <Flex textAlign=\"center\" align=\"center\" mt={\"2\"} mx={\"4\"} key={date}>\n      <Divider />\n      <Text\n        w={[\"75%\", \"75%\", \"75%\", \"40%\", \"25%\"]}\n        fontSize={\"12px\"}\n        color={\"brandGray.accent\"}\n      >\n        {formatDivider(date)}\n      </Text>\n      <Divider />\n    </Flex>\n  );\n}\n","import { useQuery } from \"react-query\";\n\nexport default function useGetCurrentChannel(channelId, key) {\n  const { data } = useQuery(key);\n  return data?.find((c) => c.id === channelId);\n}\n","import { useQuery } from \"react-query\";\nimport { dmKey } from \"utils/querykeys\";\n\nexport default function useGetCurrentDM(channelId) {\n  const { data } = useQuery(dmKey);\n  return data?.find((channel) => channel.id === channelId);\n}\n","import { Avatar, Box, Divider, Flex, Heading, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useGetCurrentChannel from \"hooks/useGetCurrentChannel\";\nimport useGetCurrentDM from \"hooks/useGetCurrentDM\";\nimport { cKey } from \"utils/querykeys\";\n\nexport default function StartMessages() {\n  const { guildId } = useParams();\n  return guildId === undefined ? <DMStartMessages /> : <ChannelStartMessages />;\n}\n\nfunction ChannelStartMessages() {\n  const { guildId, channelId } = useParams();\n  const channel = useGetCurrentChannel(channelId, cKey(guildId));\n\n  return (\n    <Flex alignItems=\"center\" mb=\"2\" justify=\"center\">\n      <Box textAlign={\"center\"}>\n        <Heading>Welcome to #{channel?.name}</Heading>\n        <Text>This is the start of the #{channel?.name} channel</Text>\n      </Box>\n    </Flex>\n  );\n}\n\nfunction DMStartMessages() {\n  const { channelId } = useParams();\n  const channel = useGetCurrentDM(channelId);\n\n  return (\n    <Box m=\"4\">\n      <Box h={\"40px\"} />\n      <Avatar h={\"80px\"} w={\"80px\"} src={channel?.user.image} />\n      <Heading mt={2}>{channel?.user.username}</Heading>\n      <Text textColor={\"brandGray.accent\"}>\n        This is the beginning of your direct message history with @\n        {channel?.user.username}\n      </Text>\n      <Divider mt={2} />\n    </Box>\n  );\n}\n","const guildScrollbarCss = {\n  \"&::-webkit-scrollbar\": {\n    width: \"0\",\n  },\n};\n\nexport default guildScrollbarCss;\n","import { GridItem } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { scrollbarCss } from \"utils/theme\";\n\nexport default function ChatGrid({ children }) {\n  return (\n    <GridItem\n      id={\"chatGrid\"}\n      gridColumn={3}\n      gridRow={\"2\"}\n      bg=\"brandGray.light\"\n      mr=\"5px\"\n      display=\"flex\"\n      flexDirection=\"column-reverse\"\n      overflowY=\"auto\"\n      css={scrollbarCss}\n    >\n      {children}\n    </GridItem>\n  );\n}\n","import { Box, Flex, Spinner } from \"@chakra-ui/react\";\nimport { LastPage } from \"@material-ui/icons\";\nimport { getMessages } from \"api/handler/messages\";\nimport useMessageSocket from \"api/ws/useMessageSocket\";\nimport Message from \"components/items/message/Message\";\nimport DateDivider from \"components/sections/DateDivider\";\nimport StartMessages from \"components/sections/StartMessages\";\nimport React, { useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { checkNewDay, getTimeDifference } from \"utils/dateUtils\";\nimport guildScrollbarCss from \"../css/GuildScrollerCSS\";\nimport ChatGrid from \"./ChatGrid\";\n\nexport default function ChatScreen() {\n  const { channelId } = useParams();\n  const [hasMore, setHasMore] = useState(true);\n  const qKey = `messages-${channelId}`;\n\n  const { data, isLoading, fetchNextPage } = useInfiniteQuery(\n    qKey,\n    async ({ pageParam = null }) => {\n      const { data } = await getMessages(channelId, pageParam);\n      if (data.length !== 35) {\n        setHasMore(false);\n        return data;\n      }\n    },\n    {\n      getNextPageParam: (LastPage) =>\n        hasMore && LastPage.length\n          ? LastPage[LastPage.length - 1].createdAt\n          : \"\",\n    }\n  );\n\n  useMessageSocket(channelId, qKey);\n\n  if (isLoading) {\n    return (\n      <ChatGrid>\n        <Flex align={\"center\"} justify={\"center\"} h={\"full\"}>\n          <Spinner size={\"xl\"} thickness={\"4px\"} />\n        </Flex>\n      </ChatGrid>\n    );\n  }\n\n  const checkIfWithinTime = (message1, message2) => {\n    if (message1.user.id !== message2.user.id) return false;\n    if (message1.createdAt === message2.createdAt) return false;\n    return getTimeDifference(message1.createdAt, message2.createdAt) <= 5;\n  };\n\n  const messages = data ? data.pages.flatMap((p) => p) : [];\n\n  return (\n    <ChatGrid>\n      <Box h={\"10px\"} mt={4} />\n      <Box\n        as={InfiniteScroll}\n        css={guildScrollbarCss}\n        dataLength={messages.length}\n        next={fetchNextPage}\n        style={{ display: \"flex\", flexDirection: \"column-reverse\" }}\n        inverse={true}\n        hasMore={hasMore}\n        loader={\n          messages.length > 0 && (\n            <Flex align={\"center\"} justify={\"center\"} h={\"50px\"}>\n              <Spinner />\n            </Flex>\n          )\n        }\n        scrollableTarget=\"chatGrid\"\n      >\n        {messages.map((m, i) => (\n          <React.Fragment key={m.id}>\n            <Message\n              message={m}\n              isCompact={checkIfWithinTime(\n                m,\n                messages[Math.min(i + 1, messages.length - 1)]\n              )}\n            />\n            {checkNewDay(\n              m.createdAt,\n              messages[Math.min(i + 1, messages.length - 1)].createdAt\n            ) && <DateDivider date={m.createdAt} />}\n          </React.Fragment>\n        ))}\n      </Box>\n      {!hasMore && <StartMessages />}\n    </ChatGrid>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport channelStore from \"stores/channelStore\";\nimport userStore from \"stores/userStore\";\nimport getSocket from \"../getSocket\";\n\nexport default function useMessageSocket(channelId, key) {\n  const current = userStore((state) => state.current);\n  const store = channelStore();\n  const cache = useQueryClient();\n\n  useEffect(() => {\n    store.reset();\n    const socket = getSocket();\n    socket.emit(\"joinChannel\", channelId);\n\n    socket.on(\"new_message\", (newMessage) => {\n      cache.setQueryData(key, (d) => {\n        d?.pages[0].unshift(newMessage);\n        return d;\n      });\n    });\n\n    socket.on(\"edit_message\", (editMessage) => {\n      cache.setQueryData(key, (d) => {\n        let index = -1;\n        let editId = -1;\n        d?.pages.forEach((p, i) => {\n          editId = p.findIndex((m) => m.id === editMessage.id);\n          if (editId !== -1) index = i;\n        });\n\n        if (index !== -1 && editId !== -1) {\n          d.pages[index][editId] = editMessage;\n        }\n        return d;\n      });\n    });\n\n    socket.on(\"delete_message\", (toBeRemoved) => {\n      cache.setQueryData(key, (d) => {\n        let index = -1;\n        d?.pages.forEach((p, i) => {\n          if (p.findIndex((m) => m.id === toBeRemoved.id) !== -1) index = i;\n        });\n        if (index !== -1) {\n          d.pages[index] = d?.pages[index].filter(\n            (m) => m.id !== toBeRemoved.id\n          );\n        }\n        return d;\n      });\n    });\n\n    socket.on(\"addToTyping\", (username) => {\n      if (username !== current?.username) {\n        store.addTyping(username);\n      }\n    });\n\n    socket.on(\"removeFromTyping\", (username) => {\n      if (username !== current?.username) {\n        store.removeTyping(username);\n      }\n    });\n\n    return () => {\n      socket.emit(\"leaveRoom\", channelId);\n      socket.disconnect();\n    };\n    // eslint-disable-next-line\n  }, [channelId, cache, key, current]);\n}\n","import React from \"react\";\nimport { Tooltip } from \"@chakra-ui/react\";\n\nexport default function StyledTooltip({\n  label,\n  position,\n  disabled = false,\n  children,\n}) {\n  return (\n    <Tooltip\n      hasArrow\n      label={label}\n      placement={position}\n      isDisabled={disabled}\n      bg={\"brandGray.darkest\"}\n      color={\"white\"}\n      fontWeight={\"semibold\"}\n      py={1}\n      px={3}\n    >\n      {children}\n    </Tooltip>\n  );\n}\n","import * as yup from 'yup';\n\nconst SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'audio/mp3', 'image/png'];\n\nexport const FileSchema = yup.object().shape({\n  file: yup\n    .mixed()\n    .nullable()\n    .test('fileSize', 'The file is too large', (value) => {\n      return value?.size < 5000000;\n    })\n    .test('type', 'Only the following formats are accepted: Image and Audio', (value) => {\n      return value && SUPPORTED_FORMATS.includes(value.type);\n    }),\n});\n","import {\n  Icon,\n  InputLeftElement,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Progress,\n  Text,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { sendMessage } from \"api/handler/messages\";\nimport StyledTooltip from \"components/sections/StyledTooltip\";\nimport React, { useRef, useState } from \"react\";\nimport { MdAddCircle } from \"react-icons/md\";\nimport { useParams } from \"react-router-dom\";\nimport { FileSchema } from \"validation/message.schema\";\n\nexport default function FileUploadButton() {\n  const { channelId } = useParams();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const inputFile = useRef(null);\n  const [isSubmitting, setSubmitting] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [errors, setErrors] = useState({});\n\n  const closeModal = () => {\n    setErrors({});\n    setProgress(0);\n    onClose();\n  };\n\n  const handleSubmit = async (file) => {\n    if (!file) return;\n    setSubmitting(true);\n\n    try {\n      await FileSchema.validate({ file });\n    } catch (err) {\n      setErrors(err.errors);\n      onOpen();\n      return;\n    }\n\n    const data = new FormData();\n    data.append(\"file\", file);\n    await sendMessage(channelId, data, (event) => {\n      const loaded = Math.round((100 * event.loaded) / event.total);\n      setProgress(loaded);\n      if (loaded >= 100) setProgress(0);\n    });\n  };\n\n  return (\n    <InputLeftElement\n      color={\"iconColor\"}\n      _hover={{ cursor: \"pointer\", color: \"#fcfcfc\" }}\n      onClick={() => inputFile.current.click()}\n    >\n      <Icon as={MdAddCircle} boxSize={\"20px\"} />\n      <input\n        type=\"file\"\n        ref={inputFile}\n        hidden\n        disabled={isSubmitting}\n        onChange={async (e) => {\n          if (!e.currentTarget.files) return;\n          handleSubmit(e.currentTarget.files[0]).then(() => {\n            setSubmitting(false);\n            e.target.value = \"\";\n          });\n        }}\n      />\n      {errors && (\n        <Modal size=\"sm\" isOpen={isOpen} onClose={closeModal} isCentered>\n          <ModalOverlay />\n          <ModalContent bg=\"brandGray.light\" textAlign=\"center\">\n            <ModalHeader pb=\"0\">Error Uploading File</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Text mb=\"2\">Reason: {errors}</Text>\n              <Text>Max file size is 5.00 MB</Text>\n              <Text>Only Images and mp3 allowed</Text>\n            </ModalBody>\n          </ModalContent>\n        </Modal>\n      )}\n      {progress > 0 && (\n        <Modal\n          size=\"sm\"\n          isOpen={progress > 0}\n          closeOnOverlayClick={false}\n          onClose={closeModal}\n          isCentered\n        >\n          <ModalContent bg=\"brandGray.darker\" textAlign=\"center\">\n            <ModalHeader pb=\"0\">Upload Progress</ModalHeader>\n            <ModalBody>\n              <Progress hasStripe isAnimated value={progress} />\n            </ModalBody>\n          </ModalContent>\n        </Modal>\n      )}\n    </InputLeftElement>\n  );\n}\n","import { Flex, GridItem, InputGroup, Text, Textarea } from \"@chakra-ui/react\";\nimport getSocket from \"api/getSocket\";\nimport { sendMessage } from \"api/handler/messages\";\nimport React, { useRef, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport ResizeTextarea from \"react-textarea-autosize\";\nimport channelStore from \"stores/channelStore\";\nimport userStore from \"stores/userStore\";\nimport { cKey, dmKey } from \"utils/querykeys\";\nimport \"../css/MessageInput.css\";\nimport FileUploadButton from \"./FileUploadButton\";\n\nexport default function MessageInput() {\n  const [text, setText] = useState(\"\");\n  const [isSubmitting, setSubmitting] = useState(false);\n  const [currentlyTyping, setCurrentlyTyping] = useState(false);\n  const inputRef = useRef();\n\n  const { guildId, channelId } = useParams();\n  const qKey = guildId === undefined ? dmKey : cKey(guildId);\n  const { data } = useQuery(qKey);\n  const channel = data?.find((c) => c.id === channelId);\n\n  const socket = getSocket();\n  const current = userStore((state) => state.current);\n  const isTyping = channelStore((state) => state.typing);\n\n  async function handleAddMessage(event) {\n    if (event.key === \"Enter\") {\n      if (!text || !text.trim()) return;\n      socket.emit(\"stopTyping\", channelId, current?.username);\n      setSubmitting(true);\n      setCurrentlyTyping(false);\n      const data = new FormData();\n      data.append(\"text\", text.trim());\n      await sendMessage(channelId, data);\n      setText(\"\");\n      setSubmitting(false);\n      inputRef?.current?.focus();\n    }\n  }\n\n  const getTypingString = (members) => {\n    switch (members.length) {\n      case 1:\n        return members[0];\n      case 2:\n        return `${members[0]} and ${members[1]}`;\n      case 3:\n        return `${members[0]}, ${members[1]} and ${members[2]}`;\n      default:\n        return \"Several people\";\n    }\n  };\n\n  function handleMessageChange(event) {\n    const value = event.target.value;\n    if (value.trim().length === 1 && !currentlyTyping) {\n      socket.emit(\"startTyping\", channelId, current?.username);\n      setCurrentlyTyping(true);\n    } else if (value.length === 0) {\n      socket.emit(\"stopTyping\", channelId, current?.username);\n      setCurrentlyTyping(false);\n    }\n    if (value.length <= 2000) setText(value);\n  }\n\n  const getPlaceholder = () => {\n    if (channel?.user) {\n      return `Message @${channel?.user.username}`;\n    }\n    return `Message #${channel?.name}`;\n  };\n\n  return (\n    <GridItem\n      gridColumn={3}\n      gridRow={3}\n      px=\"20px\"\n      pb={isTyping.length > 0 ? \"0\" : \"26px\"}\n      bg=\"brandGray.light\"\n    >\n      <InputGroup\n        size=\"md\"\n        bg=\"messageInput\"\n        alignItems=\"center\"\n        borderRadius=\"8px\"\n      >\n        <Textarea\n          as={ResizeTextarea}\n          minH=\"40px\"\n          transition=\"height none\"\n          overflow=\"hidden\"\n          w=\"100%\"\n          resize=\"none\"\n          minRows={1}\n          pl=\"3rem\"\n          name={\"text\"}\n          placeholder={getPlaceholder()}\n          border=\"0\"\n          _focus={{ border: \"0\" }}\n          ref={inputRef}\n          isDisabled={isSubmitting}\n          value={text}\n          onChange={handleMessageChange}\n          onKeyDown={handleAddMessage}\n        />\n        <FileUploadButton />\n      </InputGroup>\n      {isTyping.length > 0 && (\n        <Flex align={\"center\"} fontSize={\"12px\"} my={1}>\n          <div className=\"typing-indicator\">\n            <span />\n            <span />\n            <span />\n          </div>\n          <Text ml={\"1\"} fontWeight={\"semibold\"}>\n            {getTypingString(isTyping)}\n          </Text>\n          <Text ml={\"1\"}>\n            {isTyping.length === 1 ? \"is\" : \"are\"} typing...{\" \"}\n          </Text>\n        </Flex>\n      )}\n    </GridItem>\n  );\n}\n","import { Box } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport function NotificationIndicator() {\n  return (\n    <Box\n      w={\"8px\"}\n      h={\"8px\"}\n      bg={\"white\"}\n      position={\"absolute\"}\n      borderRadius={\"0 4px 4px 0\"}\n      ml={\"-4px\"}\n      mt={\"20px\"}\n      left={0}\n    />\n  );\n}\n\nexport function ChannelNotificationIndicator() {\n  return (\n    <Box\n      w={\"8px\"}\n      h={\"8px\"}\n      bg={\"white\"}\n      position={\"absolute\"}\n      borderRadius={\"0 4px 4px 0\"}\n      ml={\"-4px\"}\n      mt={\"8px\"}\n      left={\"75px\"}\n    />\n  );\n}\n\nexport function ActiveGuildPill() {\n  return (\n    <Box\n      w={\"8px\"}\n      h={\"40px\"}\n      bg={\"white\"}\n      position={\"absolute\"}\n      borderRadius={\"0 4px 4px 0\"}\n      ml={\"-4px\"}\n      left={0}\n      mt={\"4px\"}\n    />\n  );\n}\n\nexport function HoverGuildPill() {\n  return (\n    <Box\n      w={\"8px\"}\n      h={\"24px\"}\n      bg={\"white\"}\n      position={\"absolute\"}\n      borderRadius={\"0 4px 4px 0\"}\n      ml={\"-4px\"}\n      left={0}\n      mt={\"12px\"}\n    />\n  );\n}\n","import { Avatar, Flex } from \"@chakra-ui/react\";\nimport StyledTooltip from \"components/sections/StyledTooltip\";\nimport {\n  ActiveGuildPill,\n  HoverGuildPill,\n  NotificationIndicator,\n} from \"components/shared/GuildPills\";\nimport React, { useEffect, useState } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { gKey } from \"utils/querykeys\";\n\nexport default function GuildListItem({ guild }) {\n  const location = useLocation();\n  const isActive = location.pathname.includes(guild.id);\n  const [isHover, setHover] = useState(false);\n  const cache = useQueryClient();\n\n  useEffect(() => {\n    if (guild.hasNotification && isActive) {\n      cache.invalidateQueries(gKey);\n      // cache.setQueryData(gKey, (d) => {\n      //   const index = d?.findIndex((c) => c.id === guild.id);\n      //   if (index !== -1) {\n      //     d[index] = { ...d[index], hasNotification: false };\n      //   }\n      //   return d;\n      // });\n    }\n  });\n\n  return (\n    <Flex mb={\"2\"} justify={\"center\"}>\n      {isActive && <ActiveGuildPill />}\n      {isHover && <HoverGuildPill />}\n      {guild.hasNotification && <NotificationIndicator />}\n      <StyledTooltip label={guild.name} position={\"right\"}>\n        <Link to={`/channels/${guild.id}/${guild.default_channel_id}`}>\n          {guild.icon ? (\n            <Avatar\n              src={guild.icon}\n              borderRadius={isActive ? \"35%\" : \"50%\"}\n              _hover={{ borderRadius: \"35%\" }}\n              name={guild.name}\n              color={\"#fff\"}\n              bg={\"brandGray.light\"}\n              onMouseLeave={() => setHover(false)}\n              onMouseEnter={() => setHover(true)}\n            />\n          ) : (\n            <Flex\n              justify={\"center\"}\n              align={\"center\"}\n              bg={isActive ? \"highlight.standard\" : \"brandGray.light\"}\n              borderRadius={isActive ? \"35%\" : \"50%\"}\n              h={\"48px\"}\n              w={\"48px\"}\n              color={isActive ? \"white\" : undefined}\n              fontSize=\"20px\"\n              _hover={{\n                borderRadius: \"35%\",\n                bg: \"highlight.standard\",\n                color: \"white\",\n              }}\n              onMouseLeave={() => setHover(false)}\n              onMouseEnter={() => setHover(true)}\n            >\n              {guild.name[0]}\n            </Flex>\n          )}\n        </Link>\n      </StyledTooltip>\n    </Flex>\n  );\n}\n","import * as yup from 'yup';\n\nexport const GuildSchema = yup.object().shape({\n  name: yup.string().min(3).max(30).required(),\n});","import {\n  Button,\n  Divider,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { createGuild, joinGuild } from \"api/handler/guilds\";\nimport { Form, Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { useHistory } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport { gKey } from \"utils/querykeys\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport { GuildSchema } from \"validation/guild.schema\";\nimport InputField from \"components/shared/InputField\";\n\nexport default function AddGuildModal({ isOpen, onClose }) {\n  const [screen, setScreen] = useState(\"START\");\n\n  const goBack = () => setScreen(\"START\");\n  const submitClose = () => {\n    setScreen(\"START\");\n    onClose();\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={submitClose} isCentered size=\"sm\">\n      <ModalOverlay />\n      {screen === \"INVITE\" && (\n        <JoinServerModal goBack={goBack} submitClose={submitClose} />\n      )}\n      {screen === \"CREATE\" && (\n        <CreateServerModal goBack={goBack} submitClose={submitClose} />\n      )}\n      {screen === \"START\" && (\n        <ModalContent bg=\"brandGray.light\">\n          <ModalHeader textAlign=\"center\" fontWeight=\"bold\">\n            Create a server\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody pb={6}>\n            <VStack spacing=\"5\">\n              <Text textAlign=\"center\">\n                Your server is where you and your friends hang out. Make yours\n                and start talking.\n              </Text>\n\n              <Button\n                background=\"highlight.standard\"\n                color=\"white\"\n                type=\"submit\"\n                _hover={{ bg: \"highlight.hover\" }}\n                _active={{ bg: \"highlight.active\" }}\n                _focus={{ boxShadow: \"none\" }}\n                w=\"full\"\n                onClick={() => setScreen(\"CREATE\")}\n              >\n                Create My Own\n              </Button>\n\n              <Divider />\n\n              <Text>Have an invite already?</Text>\n\n              <Button\n                mt=\"4\"\n                background=\"highlight.standard\"\n                color=\"white\"\n                type=\"submit\"\n                _hover={{ bg: \"highlight.hover\" }}\n                _active={{ bg: \"highlight.active\" }}\n                _focus={{ boxShadow: \"none\" }}\n                w=\"full\"\n                onClick={() => setScreen(\"INVITE\")}\n              >\n                Join a Server\n              </Button>\n            </VStack>\n          </ModalBody>\n        </ModalContent>\n      )}\n    </Modal>\n  );\n}\n\nfunction JoinServerModal({ goBack, submitClose }) {\n  const cache = useQueryClient();\n  const history = useHistory();\n  async function handleJoinServer(values, { setErrors }) {\n    if (values.length === \"\") {\n      setErrors({ link: \"Please enter a valid link\" });\n    } else {\n      try {\n        const { data } = await joinGuild(values);\n        if (data) {\n          cache.invalidateQueries(gKey);\n          submitClose();\n          history.push(`/channels/${data.id}/${data.default_channel_id}`);\n        }\n      } catch (error) {\n        const status = error?.response?.status;\n        if (status === 404 || status === 400) {\n          setErrors({ link: error?.response?.data?.message });\n        } else {\n          setErrors(toErrorMap(error));\n        }\n      }\n    }\n  }\n\n  return (\n    <ModalContent bg=\"brandGray.light\">\n      <Formik initialValues={{ link: \"\" }} onSubmit={handleJoinServer}>\n        {({ isSubmitting }) => (\n          <Form>\n            <ModalHeader textAlign=\"center\" fontWeight=\"bold\" pb=\"0\">\n              Join a Server\n            </ModalHeader>\n            <ModalCloseButton />\n            <ModalBody pb={3}>\n              <Text fontSize=\"14px\" textColor=\"brandGray.accent\">\n                Enter an invite below to join an existing server\n              </Text>\n              <InputField label=\"invite link\" name=\"link\" />\n\n              <Text\n                mt=\"4\"\n                fontSize=\"12px\"\n                fontWeight=\"semibold\"\n                textColor=\"brandGray.accent\"\n                textTransform=\"uppercase\"\n              >\n                invite links should look like\n              </Text>\n\n              <Text mt=\"2\" fontSize=\"12px\" textColor=\"brandGray.accent\">\n                drqgi2\n              </Text>\n              <Text fontSize=\"12px\" textColor=\"brandGray.accent\">\n                https://discord.gg/drqgi2\n              </Text>\n            </ModalBody>\n\n            <ModalFooter bg=\"brandGray.dark\">\n              <Button mr={6} variant=\"link\" onClick={goBack} fontSize={\"14px\"}>\n                Back\n              </Button>\n              <Button\n                background=\"highlight.standard\"\n                color=\"white\"\n                type=\"submit\"\n                _hover={{ bg: \"highlight.hover\" }}\n                _active={{ bg: \"highlight.active\" }}\n                _focus={{ boxShadow: \"none\" }}\n                isLoading={isSubmitting}\n                fontSize={\"14px\"}\n              >\n                Join Server\n              </Button>\n            </ModalFooter>\n          </Form>\n        )}\n      </Formik>\n    </ModalContent>\n  );\n}\n\nfunction CreateServerModal({ goBack, submitClose }) {\n  const current = userStore((state) => state.current);\n  const history = useHistory();\n  const cache = useQueryClient();\n\n  async function handleCreateServer(values, { setErrors }) {\n    try {\n      const { data } = await createGuild(values);\n      if (data) {\n        cache.setQueryData(gKey, (guilds) => {\n          return [...guilds, data];\n        });\n        submitClose();\n        history.push(`/channels/${data.id}/${data.default_channel_id}`);\n      }\n    } catch (errors) {\n      setErrors(toErrorMap(errors));\n    }\n  }\n\n  return (\n    <ModalContent bg=\"brandGray.light\">\n      <Formik\n        initialValues={{\n          name: `${current.username}'s server`,\n        }}\n        validationSchema={GuildSchema}\n        onSubmit={handleCreateServer}\n      >\n        {({ isSubmitting, values }) => (\n          <Form initialValues={{ name: `${current.username}'s server 😎 ` }}>\n            <ModalHeader textAlign=\"center\" fontWeight=\"bold\" pb=\"0\">\n              Create your server\n            </ModalHeader>\n            <ModalCloseButton />\n            <ModalBody pb={3}>\n              <InputField label=\"server name\" name=\"name\" value={values.name} />\n            </ModalBody>\n\n            <ModalFooter bg=\"brandGray.dark\">\n              <Button mr={6} fontSize={\"14px\"} variant=\"link\" onClick={goBack}>\n                Back\n              </Button>\n              <Button\n                background=\"highlight.standard\"\n                color=\"white\"\n                type=\"submit\"\n                _hover={{ bg: \"highlight.hover\" }}\n                _active={{ bg: \"highlight.active\" }}\n                _focus={{ boxShadow: \"none\" }}\n                isLoading={isSubmitting}\n                fontSize={\"14px\"}\n              >\n                Create\n              </Button>\n            </ModalFooter>\n          </Form>\n        )}\n      </Formik>\n    </ModalContent>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport StyledTooltip from \"./StyledTooltip\";\nimport { HoverGuildPill } from \"components/shared/GuildPills\";\n\nexport default function AddGuildIcon({ onOpen }) {\n  const [isHover, setHover] = useState(false);\n\n  return (\n    <>\n      {isHover && <HoverGuildPill />}\n      <StyledTooltip label={\"Add a Server\"} position={\"right\"}>\n        <Flex\n          direction={\"column\"}\n          m={\"auto\"}\n          align={\"center\"}\n          justify={\"center\"}\n          bg={\"brandGray.light\"}\n          borderRadius={\"50%\"}\n          h={\"48px\"}\n          w={\"48px\"}\n          _hover={{\n            cursor: \"pointer\",\n            borderRadius: \"35%\",\n            bg: \"brandGreen\",\n            color: \"white\",\n          }}\n          onClick={onOpen}\n          onMouseLeave={() => setHover(false)}\n          onMouseEnter={() => setHover(true)}\n        >\n          <AiOutlinePlus fontSize=\"25px\" />\n        </Flex>\n      </StyledTooltip>\n    </>\n  );\n}\n","import { Flex, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport default function NotificationIcon({ count }) {\n  return (\n    <Flex\n      borderRadius={\"50%\"}\n      bg={\"menuRed\"}\n      position={\"absolute\"}\n      bottom={0}\n      right={0}\n      transform={\"translate(25%, 25%)\"}\n      border={\"0.2em solid\"}\n      borderColor={\"brandBorder\"}\n      w={\"1.4em\"}\n      h={\"1.4em\"}\n      justify={\"center\"}\n      align={\"center\"}\n    >\n      <Text fontSize={\"11px\"} fontWeight={\"bold\"}>\n        {count}\n      </Text>\n    </Flex>\n  );\n}\n\nexport function PingIcon({ count }) {\n  return (\n    <Flex\n      borderRadius={\"50%\"}\n      bg={\"menuRed\"}\n      w={\"1.2em\"}\n      h={\"1.2em\"}\n      justify={\"center\"}\n      align={\"center\"}\n      ml={2}\n    >\n      <Text fontSize={\"11px\"} fontWeight={\"bold\"}>\n        {count}\n      </Text>\n    </Flex>\n  );\n}\n","import { Divider, Flex } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport homeStore from \"stores/homeStore\";\nimport { ActiveGuildPill, HoverGuildPill } from \"components/shared/GuildPills\";\nimport NotificationIcon from \"components/shared/NotificationIcon\";\nimport StyledTooltip from \"./StyledTooltip\";\n\nexport default function HomeIcon() {\n  const location = useLocation();\n  const isActive = location.pathname === \"/channels/me\";\n  const [isHover, setHover] = useState(false);\n\n  const notification = homeStore((state) => state.notifCount);\n  const reset = homeStore((state) => state.reset);\n\n  useEffect(() => {\n    if (isActive) reset();\n  });\n\n  return (\n    <StyledTooltip label={\"Home\"} position={\"right\"}>\n      <Flex direction=\"column\" my=\"2\" align=\"center\">\n        {isActive && <ActiveGuildPill />}\n        {isHover && <HoverGuildPill />}\n        <Link to=\"/channels/me\">\n          <Flex\n            direction=\"column\"\n            m=\"auto\"\n            align=\"center\"\n            justify=\"center\"\n            bg={isActive ? \"highlight.standard\" : \"brandGray.light\"}\n            borderRadius={isActive ? \"35%\" : \"50%\"}\n            h=\"48px\"\n            w=\"48px\"\n            color=\"white\"\n            position={\"relative\"}\n            _hover={{\n              cursor: \"pointer\",\n              borderRadius: \"35%\",\n              bg: \"highlight.standard\",\n            }}\n            onMouseLeave={() => setHover(false)}\n            onMouseEnter={() => setHover(true)}\n          >\n            <Logo />\n            {notification > 0 && <NotificationIcon count={notification} />}\n          </Flex>\n        </Link>\n        <Divider mt=\"2\" w=\"40px\" />\n      </Flex>\n    </StyledTooltip>\n  );\n}\n\nfunction Logo() {\n  return <img src=\"/small-logo.png\" style={{ padding: \"5px\" }} alt=\"logo\" />;\n}\n","import { Box, GridItem, UnorderedList, useDisclosure } from \"@chakra-ui/react\";\nimport { getUserGuilds } from \"api/handler/guilds\";\nimport useGuildSocket from \"api/ws/useGuildSocket\";\nimport GuildListItem from \"components/items/GuildListItem\";\nimport AddGuildModal from \"components/modals/AddGuildModal\";\nimport AddGuildIcon from \"components/sections/AddGuildIcon\";\nimport HomeIcon from \"components/sections/HomeIcon\";\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { gKey } from \"utils/querykeys\";\nimport guildScrollbarCss from \"./css/GuildScrollerCSS\";\n\nexport default function GuildList() {\n  const { data } = useQuery(gKey, () =>\n    getUserGuilds().then((res) => res.data)\n  );\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  useGuildSocket();\n\n  return (\n    <GridItem\n      gridColumn={1}\n      gridRow={\"1 / 4\"}\n      bg=\"brandGray.darker\"\n      overflowY=\"auto\"\n      css={guildScrollbarCss}\n      zIndex={2}\n    >\n      <HomeIcon />\n      <UnorderedList listStyleType=\"none\" ml=\"0\">\n        {data?.map((guild) => (\n          <GuildListItem key={guild.id} guild={guild} />\n        ))}\n      </UnorderedList>\n      <AddGuildIcon onOpen={onOpen} />\n      {isOpen && <AddGuildModal isOpen={isOpen} onClose={onClose} />}\n      <Box h=\"20px\" />\n    </GridItem>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport { gKey } from \"utils/querykeys\";\nimport getSocket from \"../getSocket\";\n\nexport default function useGuildSocket() {\n  const history = useHistory();\n  const cache = useQueryClient();\n  const current = userStore((state) => state.current);\n  const location = useLocation();\n\n  useEffect(() => {\n    const socket = getSocket();\n    socket.emit(\"joinUser\", current?.id);\n\n    socket.on(\"edit_guild\", (editedGuild) => {\n      cache.setQueryData(gKey, (d) => {\n        const index = d?.findIndex((c) => c.id === editedGuild.id);\n        if (index !== -1) {\n          d[index] = {\n            ...d[index],\n            name: editedGuild.name,\n            icon: editedGuild.icon,\n          };\n        }\n        return d;\n      });\n    });\n\n    socket.on(\"delete_guild\", (deleteId) => {\n      cache.setQueryData(gKey, (d) => {\n        const isActive = location.pathname.includes(deleteId);\n        if (isActive) {\n          history.replace(\"/channels/me\");\n        }\n        return d?.filter((g) => g.id !== deleteId);\n      });\n    });\n\n    socket.on(\"remove_from_guild\", (guildId) => {\n      cache.setQueryData(gKey, (d) => {\n        const isActive = location.pathname.includes(guildId);\n        if (isActive) {\n          history.replace(\"/channels/me\");\n        }\n        return d.filter((g) => g.id !== guildId);\n      });\n    });\n\n    socket.on(\"new_notification\", (id) => {\n      if (!location.pathname.includes(id)) {\n        cache.setQueryData(gKey, (d) => {\n          const index = d?.findIndex((c) => c.id === id);\n          if (index !== -1) {\n            d[index] = { ...d[index], hasNotification: true };\n          }\n          return d;\n        });\n      }\n    });\n\n    return () => {\n      socket.emit(\"leaveRoom\", current?.id);\n      socket.disconnect();\n    };\n  }, [current, cache, history, location]);\n}\n","import {\n  Button,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  InputRightElement,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  useClipboard,\n} from \"@chakra-ui/react\";\nimport { sendFriendRequest } from \"api/handler/account\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport userStore from \"stores/userStore\";\nimport { rKey } from \"utils/querykeys\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport InputField from \"components/shared/InputField\";\n\nexport default function AddFriendModal({ isOpen, onClose }) {\n  const current = userStore((state) => state.current);\n  const cache = useQueryClient();\n  const { hasCopied, onCopy } = useClipboard(current?.id || \"\");\n\n  async function handleAddFriend(values, { setErrors }) {\n    if (values.id === \"\" && values.id.length !== 20) {\n      setErrors({ id: \"Enter valid ID \" });\n    } else {\n      try {\n        const { data } = await sendFriendRequest(values.id);\n        if (data) {\n          onClose();\n          cache.invalidateQueries(rKey);\n        }\n      } catch (error) {\n        setErrors(toErrorMap(error));\n      }\n    }\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent bg=\"brandGray.light\">\n        <Formik initialValues={{ id: \"\" }} onSubmit={handleAddFriend}>\n          {({ isSubmitting }) => (\n            <Form>\n              <ModalHeader fontWeight=\"bold\" pb={\"0\"}>\n                ADD FRIEND\n              </ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <Text mb=\"4\">You can add a friend with their UID.</Text>\n                <InputGroup mb={2}>\n                  <InputLeftAddon\n                    bg={\"#202225\"}\n                    borderColor={\"black\"}\n                    children=\"UID\"\n                  />\n                  <Input\n                    bg=\"brandGray.dark\"\n                    borderColor={hasCopied ? \"brandGreen\" : \"black\"}\n                    borderRadius=\"3px\"\n                    focusBorderColor=\"highlight.standard\"\n                    value={current?.id || \"\"}\n                    isReadOnly\n                  />\n                  <InputRightElement width=\"4.5rem\">\n                    <Button\n                      h=\"1.75rem\"\n                      size=\"sm\"\n                      bg={hasCopied ? \"brandGreen\" : \"highlight.standard\"}\n                      color=\"white\"\n                      _hover={{ bg: \"highlight.hover\" }}\n                      _active={{ bg: \"highlight.active\" }}\n                      _focus={{ boxShadow: \"none\" }}\n                      onClick={onCopy}\n                    >\n                      {hasCopied ? \"Copied\" : \"Copy\"}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n\n                <InputField label=\"Enter a user ID\" name=\"id\" />\n              </ModalBody>\n              <ModalFooter bg=\"brandGray.dark\" mt=\"2\">\n                <Button\n                  mr={6}\n                  variant=\"link\"\n                  onClick={onClose}\n                  fontSize={\"14px\"}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  background=\"highlight.standard\"\n                  color=\"white\"\n                  type=\"submit\"\n                  _hover={{ bg: \"highlight.hover\" }}\n                  _active={{ bg: \"highlight.active\" }}\n                  _focus={{ boxShadow: \"none\" }}\n                  isLoading={isSubmitting}\n                  fontSize={\"14px\"}\n                >\n                  Send Friend Request\n                </Button>\n              </ModalFooter>\n            </Form>\n          )}\n        </Formik>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import {\n  Button,\n  Flex,\n  GridItem,\n  Icon,\n  LightMode,\n  Text,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { FiUsers } from \"react-icons/fi\";\nimport homeStore from \"stores/homeStore\";\nimport AddFriendModal from \"components/modals/AddFriendModal\";\nimport PingIcon from \"components/shared/NotificationIcon\";\n\nexport default function FriendsListHeader() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const toggle = homeStore((state) => state.toggleDisplay);\n  const isPending = homeStore((state) => state.isPending);\n  const requests = homeStore((state) => state.requestCount);\n\n  return (\n    <GridItem\n      gridColumn={3}\n      gridRow={\"1\"}\n      bg=\"brandGray.light\"\n      padding=\"10px\"\n      zIndex=\"2\"\n      boxShadow=\"md\"\n    >\n      <Flex align=\"center\" justify=\"space-between\">\n        <Flex align=\"center\" ml={2} fontSize=\"14px\">\n          <Icon as={FiUsers} fontSize=\"20px\" />\n          <Text ml=\"2\" fontWeight=\"semibold\">\n            Friends\n          </Text>\n          <Button\n            fontSize=\"14px\"\n            ml={\"4\"}\n            size={\"xs\"}\n            colorScheme={\"gray\"}\n            onClick={() => {\n              if (isPending) toggle();\n            }}\n            variant={!isPending ? \"solid\" : \"ghost\"}\n          >\n            Friends\n          </Button>\n          <Button\n            fontSize=\"14px\"\n            size={\"xs\"}\n            ml={\"2\"}\n            colorScheme={\"gray\"}\n            variant={isPending ? \"solid\" : \"ghost\"}\n            onClick={() => {\n              if (!isPending) toggle();\n            }}\n          >\n            Pending\n            {requests > 0 && <PingIcon count={requests} />}\n          </Button>\n        </Flex>\n        <LightMode>\n          <Button\n            fontSize=\"14px\"\n            size={\"xs\"}\n            bg={\"brandGreen\"}\n            _hover={{ bg: \"brandGreen\" }}\n            _active={{ bg: \"brandGreen\" }}\n            onClick={onOpen}\n          >\n            Add Friend\n          </Button>\n        </LightMode>\n      </Flex>\n      {isOpen && <AddFriendModal isOpen={isOpen} onClose={onClose} />}\n    </GridItem>\n  );\n}\n","import {\n  Avatar,\n  AvatarBadge,\n  Flex,\n  IconButton,\n  ListItem,\n  Text,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { FaEllipsisV } from \"react-icons/fa\";\nimport { useQueryClient } from \"react-query\";\nimport { useHistory } from \"react-router-dom\";\nimport { getOrCreateDirectMessage } from \"api/handler/dm\";\nimport { dmKey } from \"utils/querykeys\";\nimport RemoveFriendModal from \"components/modals/RemoveFriendModal\";\n\nexport default function FriendsListItem({ friend }) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const cache = useQueryClient();\n  const history = useHistory();\n\n  async function getDMChannel() {\n    const { data } = await getOrCreateDirectMessage(friend.id);\n\n    if (data) {\n      cache.invalidateQueries(dmKey);\n      history.push(`/channels/me/${data.id}`);\n    }\n  }\n\n  return (\n    <ListItem\n      p=\"3\"\n      mx=\"3\"\n      _hover={{\n        bg: \"brandGray.dark\",\n        borderRadius: \"5px\",\n      }}\n    >\n      <Flex align=\"center\" justify=\"space-between\">\n        <Flex\n          align=\"center\"\n          w={\"full\"}\n          onClick={getDMChannel}\n          _hover={{ cursor: \"pointer\" }}\n        >\n          <Avatar size=\"sm\" src={friend.image}>\n            <AvatarBadge\n              boxSize=\"1.25em\"\n              bg={friend.isOnline ? \"green.500\" : \"gray.500\"}\n            />\n          </Avatar>\n          <Text ml=\"2\">{friend.username}</Text>\n        </Flex>\n        <IconButton\n          icon={<FaEllipsisV />}\n          borderRadius=\"50%\"\n          aria-label=\"remove friend\"\n          onClick={(e) => {\n            e.preventDefault();\n            onOpen();\n          }}\n        />\n      </Flex>\n      {isOpen && <RemoveFriendModal id={friend.id} isOpen onClose={onClose} />}\n    </ListItem>\n  );\n}\n","import React from \"react\";\nimport { Text } from \"@chakra-ui/react\";\n\nexport default function OnlineLabel({ label }) {\n  return (\n    <Text\n      fontSize=\"12px\"\n      color={\"brandGray.accent\"}\n      textTransform={\"uppercase\"}\n      fontWeight={\"semibold\"}\n      mx={\"4\"}\n      mt={\"4\"}\n      mb={\"1\"}\n      w={\"50%\"}\n    >\n      {label}\n    </Text>\n  );\n}\n","import { Flex, Text, UnorderedList } from \"@chakra-ui/react\";\nimport { getFriends } from \"api/handler/account\";\nimport useFriendSocket from \"api/ws/useFriendSocket\";\nimport FriendsListItem from \"components/items/FriendsListItem\";\nimport OnlineLabel from \"components/sections/OnlineLabel\";\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { fKey } from \"utils/querykeys\";\n\nexport default function FriendsList() {\n  const { data } = useQuery(fKey, () => getFriends().then((res) => res.data));\n\n  useFriendSocket();\n\n  if (data?.length === 0) {\n    return (\n      <Flex justify={\"center\"} align={\"center\"} w={\"full\"}>\n        <Text textColor={\"brandGray.accent\"}>No one here yet</Text>\n      </Flex>\n    );\n  }\n\n  return (\n    <>\n      <UnorderedList listStyleType=\"none\" ml=\"0\" w=\"full\" mt=\"2\">\n        <OnlineLabel label={`friends — ${data?.length || 0}`} />\n        {data?.map((friend) => (\n          <FriendsListItem key={friend.id} friend={friend} />\n        ))}\n      </UnorderedList>\n    </>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport homeStore from \"stores/homeStore\";\nimport userStore from \"stores/userStore\";\nimport { fKey } from \"utils/querykeys\";\nimport getSocket from \"../getSocket\";\n\nexport default function useFriendSocket() {\n  const current = userStore((state) => state.current);\n  const setRequests = homeStore((state) => state.setRequests);\n  const cache = useQueryClient();\n\n  useEffect(() => {\n    const socket = getSocket();\n    socket.emit(\"joinUser\", current?.id);\n    socket.emit(\"getRequestCount\");\n    socket.on(\"add_friend\", (newFriend) => {\n      cache.setQueryData(fKey, (data) => {\n        return [...data, newFriend].sort((a, b) =>\n          a.username.localeCompare(b.username)\n        );\n      });\n    });\n\n    socket.on(\"remove_friend\", (memberId) => {\n      cache.setQueryData(fKey, (data) => {\n        return [...data?.filter((m) => m.id !== memberId)];\n      });\n    });\n\n    socket.on(\"toggle_online\", (memberId) => {\n      cache.setQueryData(fKey, (data) => {\n        const index = data?.findIndex((m) => m.id === memberId);\n        if (index !== -1) {\n          data[index].isOnline = true;\n        }\n        return data;\n      });\n    });\n\n    socket.on(\"toggle_offline\", (memberId) => {\n      cache.setQueryData(fKey, (data) => {\n        const index = data?.findIndex((m) => m.id === memberId);\n        if (index !== -1) {\n          data[index].isOnline = false;\n        }\n        return data;\n      });\n    });\n\n    socket.on(\"requestCount\", (count) => {\n      setRequests(count);\n    });\n\n    return () => {\n      socket.emit(\"leaveRoom\", current?.id);\n      socket.disconnect();\n    };\n  }, [cache, current, setRequests]);\n}\n","import {\n  Avatar,\n  Box,\n  Flex,\n  IconButton,\n  ListItem,\n  Text,\n} from \"@chakra-ui/react\";\nimport { acceptFriendRequest, declineFriendRequest } from \"api/handler/account\";\nimport StyledTooltip from \"components/sections/StyledTooltip\";\nimport React from \"react\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { useQueryClient } from \"react-query\";\nimport { fKey, rKey } from \"utils/querykeys\";\n\nexport default function RequestListItem({ request }) {\n  const cache = useQueryClient();\n\n  const acceptRequest = async () => {\n    const { data } = await acceptFriendRequest(request.id);\n    if (data) {\n      cache.setQueryData(rKey, (d) => {\n        return d?.filter((r) => r.id !== request.id);\n      });\n      await cache.invalidateQueries(fKey);\n    }\n  };\n\n  const declineRequest = async () => {\n    const { data } = await declineFriendRequest(request.id);\n    if (data) {\n      cache.setQueryData(rKey, (d) => {\n        return d?.filter((r) => r.id !== request.id);\n      });\n    }\n  };\n\n  return (\n    <ListItem\n      p=\"3\"\n      mx=\"3\"\n      _hover={{\n        bg: \"brandGray.dark\",\n        borderRadius: \"5px\",\n      }}\n    >\n      <Flex align=\"center\" justify=\"space-between\">\n        <Flex align=\"center\">\n          <Avatar size=\"sm\" src={request.image} />\n          <Box ml=\"2\">\n            <Text>{request.username}</Text>\n            <Text fontSize={\"12px\"}>\n              {request.type === 1\n                ? \"Incoming Friend Request\"\n                : \"Outgoing Friend Request\"}\n            </Text>\n          </Box>\n        </Flex>\n        <Flex align={\"center\"}>\n          {request.type === 1 && (\n            <StyledTooltip label={\"Accept\"} position={\"top\"}>\n              <IconButton\n                icon={<BiCheck />}\n                borderRadius=\"50%\"\n                aria-label=\"accept request\"\n                fontSize={\"28px\"}\n                onClick={acceptRequest}\n                mr={\"2\"}\n              />\n            </StyledTooltip>\n          )}\n          <StyledTooltip label={\"Decline\"} position={\"top\"}>\n            <IconButton\n              icon={<AiOutlineClose />}\n              borderRadius=\"50%\"\n              aria-label=\"decline request\"\n              fontSize={\"20px\"}\n              onClick={declineRequest}\n            />\n          </StyledTooltip>\n        </Flex>\n      </Flex>\n    </ListItem>\n  );\n}\n","import { Flex, Text, UnorderedList } from \"@chakra-ui/react\";\nimport { getPendingRequests } from \"api/handler/account\";\nimport RequestListItem from \"components/items/RequestListItem\";\nimport OnlineLabel from \"components/sections/OnlineLabel\";\nimport React, { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport homeStore from \"stores/homeStore\";\nimport { rKey } from \"utils/querykeys\";\n\nexport default function PendingList() {\n  const { data } = useQuery(rKey, () =>\n    getPendingRequests().then((res) => res.data)\n  );\n  const reset = homeStore((state) => state.resetRequest);\n\n  useEffect(() => {\n    reset();\n  });\n\n  if (data?.length === 0) {\n    return (\n      <Flex justify={\"center\"} align={\"center\"} w={\"full\"}>\n        <Text textColor={\"brandGray.accent\"}>\n          There are no pending friend requests\n        </Text>\n      </Flex>\n    );\n  }\n\n  return (\n    <>\n      <UnorderedList listStyleType=\"none\" ml=\"0\" w=\"full\" mt=\"2\">\n        <OnlineLabel label={`Pending — ${data?.length || 0}`} />\n        {data?.map((request) => (\n          <RequestListItem key={request.id} request={request} />\n        ))}\n      </UnorderedList>\n    </>\n  );\n}\n","import React from \"react\";\nimport { GridItem } from \"@chakra-ui/react\";\nimport FriendsListHeader from \"./FriendsListHeader\";\nimport FriendsList from \"./FriendsList\";\nimport PendingList from \"./PendingList\";\nimport { scrollbarCss } from \"utils/theme\";\nimport homeStore from \"stores/homeStore\";\n\nexport default function FriendsDashboard() {\n  const isPending = homeStore((state) => state.isPending);\n\n  return (\n    <>\n      <FriendsListHeader />\n      <GridItem\n        gridColumn={3}\n        gridRow={\"2\"}\n        bg=\"brandGray.light\"\n        mr=\"5px\"\n        display=\"flex\"\n        overflowY=\"auto\"\n        css={scrollbarCss}\n      >\n        {isPending ? <PendingList /> : <FriendsList />}\n      </GridItem>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Box, Flex, GridItem, Icon, Text } from \"@chakra-ui/react\";\nimport { FaAt } from \"react-icons/fa\";\nimport { useParams } from \"react-router-dom\";\nimport useGetCurrentDM from \"hooks/useGetCurrentDM\";\n\nexport default function DMHeader() {\n  const { channelId } = useParams();\n  const channel = useGetCurrentDM(channelId);\n\n  return (\n    <GridItem\n      gridColumn={3}\n      gridRow={\"1\"}\n      bg=\"brandGray.light\"\n      padding=\"10px\"\n      zIndex=\"2\"\n      boxShadow=\"md\"\n    >\n      <Flex align=\"center\" ml={2}>\n        <Icon as={FaAt} fontSize={\"20px\"} color={\"brandGray.accent\"} />\n        <Text ml=\"2\" fontWeight=\"semibold\">\n          {channel?.user.username}\n        </Text>\n        <Box\n          ml={\"2\"}\n          borderRadius={\"50%\"}\n          h={\"10px\"}\n          w={\"10px\"}\n          bg={channel?.user.isOnline ? \"green.500\" : \"gray.500\"}\n        />\n      </Flex>\n    </GridItem>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Avatar,\n  AvatarBadge,\n  Flex,\n  Icon,\n  ListItem,\n  Text,\n} from \"@chakra-ui/react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { IoMdClose } from \"react-icons/io\";\nimport { useQueryClient } from \"react-query\";\nimport { closeDirectMessage } from \"api/handler/dm\";\nimport { dmKey } from \"utils/querykeys\";\n\nexport default function DMListItem({ dm }) {\n  const currentPath = `/channels/me/${dm.id}`;\n  const history = useHistory();\n  const location = useLocation();\n  const isActive = location.pathname === currentPath;\n  const [showCloseButton, setShowButton] = useState(false);\n  const cache = useQueryClient();\n\n  async function handleCloseDM(event) {\n    event.preventDefault();\n    await closeDirectMessage(dm.id);\n    cache.setQueryData(dmKey, (d) => {\n      return d?.filter((channel) => channel.id !== dm.id);\n    });\n    if (isActive) {\n      history.replace(\"/channels/me\");\n    }\n  }\n\n  return (\n    <Link to={`/channels/me/${dm.id}`}>\n      <ListItem\n        p=\"2\"\n        mx=\"2\"\n        color={isActive ? \"#fff\" : \"brandGray.accent\"}\n        _hover={{\n          bg: \"brandGray.light\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n          color: \"#fff\",\n        }}\n        bg={isActive ? \"brandGray.active\" : undefined}\n        onMouseLeave={() => setShowButton(false)}\n        onMouseEnter={() => setShowButton(true)}\n      >\n        <Flex align={\"center\"} justify={\"space-between\"}>\n          <Flex align=\"center\">\n            <Avatar size=\"sm\" src={dm.user.image}>\n              <AvatarBadge\n                boxSize=\"1.25em\"\n                bg={dm.user.isOnline ? \"green.500\" : \"gray.500\"}\n              />\n            </Avatar>\n            <Text ml=\"2\">{dm.user.username}</Text>\n          </Flex>\n          {showCloseButton && <Icon as={IoMdClose} onClick={handleCloseDM} />}\n        </Flex>\n      </ListItem>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\n\nexport default function DMPlaceholder() {\n  return (\n    <Flex align={\"center\"} m=\"3\">\n      <Box w={\"32px\"} h={\"32px\"} borderRadius={\"50%\"} bg={\"brandGray.light\"} />\n      <Box\n        ml={2}\n        height=\"20px\"\n        w={\"144px\"}\n        bg={\"brandGray.light\"}\n        borderRadius={\"10px\"}\n      />\n    </Flex>\n  );\n}\n","import { Flex, Icon, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { FiUsers } from \"react-icons/fi\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport homeStore from \"stores/homeStore\";\nimport { PingIcon } from \"components/shared/NotificationIcon\";\n\nexport default function FriendsListButton() {\n  const currentPath = `/channels/me`;\n  const location = useLocation();\n  const isActive = location.pathname === currentPath;\n  const requests = homeStore((state) => state.requestCount);\n\n  return (\n    <Link to={\"/channels/me\"}>\n      <Flex\n        m=\"2\"\n        p=\"3\"\n        align=\"center\"\n        justify={\"space-between\"}\n        color={isActive ? \"#fff\" : \"brandGray.accent\"}\n        _hover={{\n          bg: \"brandGray.light\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n          color: \"#fff\",\n        }}\n        bg={isActive ? \"brandGray.active\" : undefined}\n      >\n        <Flex align={\"center\"}>\n          <Icon as={FiUsers} fontSize=\"20px\" />\n          <Text fontSize=\"14px\" ml=\"4\" fontWeight=\"semibold\">\n            Friends\n          </Text>\n        </Flex>\n        {requests > 0 && <PingIcon count={requests} />}\n      </Flex>\n    </Link>\n  );\n}\n","import {\n  Avatar,\n  Flex,\n  IconButton,\n  Text,\n  Tooltip,\n  useClipboard,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { RiSettings5Fill } from \"react-icons/ri\";\nimport { Link } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\n\nexport default function AccountBar() {\n  const user = userStore((state) => state.current);\n  const { hasCopied, onCopy } = useClipboard(user?.id || \"\");\n\n  return (\n    <Flex\n      p=\"10px\"\n      pos=\"absolute\"\n      bottom=\"0\"\n      w=\"240px\"\n      bg=\"accountBar\"\n      align=\"center\"\n      justify=\"space-between\"\n    >\n      <Tooltip\n        hasArrow\n        label={hasCopied ? \"Copied!\" : \"Click to copy ID\"}\n        placement={\"top\"}\n        bg={hasCopied ? \"brandGreen\" : \"brandGray.darkest\"}\n        color={\"white\"}\n        closeOnClick={false}\n      >\n        <Flex\n          align=\"center\"\n          w={\"full\"}\n          mr={2}\n          _hover={{ cursor: \"pointer\" }}\n          onClick={onCopy}\n        >\n          <Avatar size=\"sm\" src={user?.image} />\n          <Text ml=\"2\">{user?.username}</Text>\n        </Flex>\n      </Tooltip>\n      <Link to={\"/account\"}>\n        <Tooltip\n          hasArrow\n          label={\"User Settings\"}\n          placement={\"top\"}\n          bg={\"brandGray.darkest\"}\n          color={\"white\"}\n        >\n          <IconButton\n            icon={<RiSettings5Fill />}\n            aria-label=\"settings\"\n            size=\"sm\"\n            fontSize=\"20px\"\n            variant=\"ghost\"\n          />\n        </Tooltip>\n      </Link>\n    </Flex>\n  );\n}\n","const dmScrollerCss = {\n  \"&::-webkit-scrollbar\": {\n    width: \"4px\",\n  },\n  \"&::-webkit-scrollbar-track\": {\n    width: \"4px\",\n  },\n  \"&::-webkit-scrollbar-thumb\": {\n    background: \"brandGray.darker\",\n    borderRadius: \"18px\",\n  },\n};\n\nexport default dmScrollerCss;\n","import { Box, GridItem, Text, UnorderedList } from \"@chakra-ui/react\";\nimport { getUserDMs } from \"api/handler/dm\";\nimport useDMSocket from \"api/ws/useDMSocket\";\nimport DMListItem from \"components/items/DMListItem\";\nimport DMPlaceholder from \"components/sections/DMPlaceholder\";\nimport FriendsListButton from \"components/sections/FriendsListButton\";\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { dmKey } from \"utils/querykeys\";\nimport AccountBar from \"../AccountBar\";\nimport dmScrollerCss from \"./css/dmScrollerCSS\";\n\nexport default function DMSidebar() {\n  const { data } = useQuery(dmKey, () => getUserDMs().then((res) => res.data));\n\n  useDMSocket();\n\n  return (\n    <GridItem\n      gridColumn={\"2\"}\n      gridRow={\"1 / 4\"}\n      bg=\"brandGray.dark\"\n      overflowY=\"hidden\"\n      _hover={{ overflowY: \"auto\" }}\n      css={dmScrollerCss}\n    >\n      <FriendsListButton />\n      <Text\n        ml=\"4\"\n        textTransform=\"uppercase\"\n        fontSize=\"12px\"\n        fontWeight=\"semibold\"\n        color=\"brandGray.accent\"\n      >\n        DIRECT MESSAGES\n      </Text>\n      <UnorderedList listStyleType=\"none\" ml=\"0\" mt=\"4\">\n        {data?.map((dm) => (\n          <DMListItem key={dm.id} dm={dm} />\n        ))}\n        {data?.length === 0 && (\n          <Box>\n            <DMPlaceholder />\n            <DMPlaceholder />\n            <DMPlaceholder />\n            <DMPlaceholder />\n            <DMPlaceholder />\n          </Box>\n        )}\n      </UnorderedList>\n      <AccountBar />\n    </GridItem>\n  );\n}\n","import { useEffect } from \"react\";\nimport getSocket from \"../getSocket\";\nimport { useQueryClient } from \"react-query\";\nimport userStore from \"stores/userStore\";\nimport { dmKey } from \"utils/querykeys\";\n\nexport default function useDMSocket() {\n  const current = userStore((state) => state.current);\n  const cache = useQueryClient();\n\n  useEffect(() => {\n    const socket = getSocket();\n    socket.emit(\"joinUser\", current?.id);\n\n    socket.on(\"push_to_top\", (dmId) => {\n      cache.setQueryData(dmKey, (data) => {\n        const index = data?.findIndex((d) => d.id === dmId);\n        if (index === 0 || index === -1) return [...data];\n        const dm = data[index];\n        return [dm, ...data.filter((d) => d.id !== dmId)];\n      });\n    });\n\n    return () => {\n      socket.emit(\"leaveRoom\", current?.id);\n      socket.disconnect();\n    };\n  }, [current, cache]);\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport AppLayout from \"components/layouts/AppLayout\";\nimport ChatScreen from \"components/layouts/guild/chat/ChatScreen\";\nimport MessageInput from \"components/layouts/guild/chat/MessageInput\";\nimport GuildList from \"components/layouts/guild/GuildList\";\nimport FriendsDashboard from \"components/layouts/home/dashboard/FriendsDashboard\";\nimport DMHeader from \"components/layouts/home/DMHeader\";\nimport DMSidebar from \"components/layouts/home/DMSidebar\";\n\nexport default function Home() {\n  const { channelId } = useParams();\n\n  return (\n    <AppLayout>\n      <GuildList />\n      <DMSidebar />\n      {channelId === undefined ? (\n        <FriendsDashboard />\n      ) : (\n        <>\n          <DMHeader />\n          <ChatScreen />\n          <MessageInput />\n        </>\n      )}\n    </AppLayout>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link as RLink, useHistory, useParams } from \"react-router-dom\";\nimport { Box, Flex, Image, Link, Text } from \"@chakra-ui/react\";\nimport { joinGuild } from \"api/handler/guilds\";\nimport { gKey } from \"utils/querykeys\";\nimport { useQueryClient } from \"react-query\";\n\nexport default function Invite() {\n  const { link } = useParams();\n  const [errors, setErrors] = useState(null);\n  const cache = useQueryClient();\n  const history = useHistory();\n\n  useEffect(() => {\n    async function handleJoin() {\n      try {\n        const { data } = await joinGuild({ link });\n        if (data) {\n          cache.invalidateQueries(gKey);\n          history.push(`/channels/${data.id}/${data.default_channel_id}`);\n        }\n      } catch (error) {\n        const status = error?.response?.status;\n        if (status === 400 || status === 404) {\n          setErrors({ link: error?.response?.data?.message });\n        } else {\n          setErrors(\"Something went wrong please try later\");\n        }\n      }\n    }\n    handleJoin();\n  }, [link, history, cache]);\n\n  return (\n    <Flex minHeight=\"100vh\" align=\"center\" justify=\"center\" h=\"full\">\n      <Box textAlign={\"center\"}>\n        <Flex mb=\"4\" justify=\"center\">\n          <Image src=\"/logo.png\" w=\"80px\" />\n        </Flex>\n        <Text>Fetching server info. Please wait.</Text>\n        <Text>You will be automatically redirected.</Text>\n        {errors && (\n          <Box>\n            <Text my=\"2\" textColor=\"menuRed\">\n              {errors}\n            </Text>\n            <Text>\n              Click{\" \"}\n              <Link as={RLink} to=\"/channels/me\" color=\"highlight.standard\">\n                here\n              </Link>{\" \"}\n              to return.\n            </Text>\n          </Box>\n        )}\n      </Box>\n    </Flex>\n  );\n}\n","import { Box, Flex, Link, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport StyledTooltip from \"./StyledTooltip\";\n\nexport function FooterLink({ icon, href, label }) {\n  return (\n    <StyledTooltip label={label} position={\"top\"}>\n      <Link\n        display=\"inline-block\"\n        href={href}\n        aria-label={label}\n        isExternal\n        mx={2}\n      >\n        <Box as={icon} width=\"24px\" height=\"24px\" color=\"gray.400\" />\n      </Link>\n    </StyledTooltip>\n  );\n}\n\nexport default function Footer() {\n  return (\n    <Flex bottom={0} as=\"footer\" align=\"center\" justify=\"center\" w=\"100%\" p={8}>\n      <Box textAlign=\"center\">\n        <Text fontSize=\"xl\">\n          <span>Discord | 2021</span>\n        </Text>\n      </Box>\n    </Flex>\n  );\n}\n","import React from \"react\";\n\nexport default function Logo() {\n  return (\n    <svg width=\"124\" height=\"34\" viewBox=\"0 0 124 34\" className=\"logo-3LF899\">\n      <g fill=\"currentColor\">\n        <path d=\"M18.1558 14.297C17.1868 14.297 16.4218 15.13 16.4218 16.167C16.4218 17.204 17.2038 18.037 18.1558 18.037C19.1248 18.037 19.8898 17.204 19.8898 16.167C19.8898 15.13 19.1078 14.297 18.1558 14.297ZM11.9508 14.297C10.9818 14.297 10.2168 15.13 10.2168 16.167C10.2168 17.204 10.9988 18.037 11.9508 18.037C12.9198 18.037 13.6848 17.204 13.6848 16.167C13.7018 15.13 12.9198 14.297 11.9508 14.297Z\"></path>\n        <path d=\"M26.4178 0.152954H3.63783C1.71683 0.152954 0.152832 1.71695 0.152832 3.63795V26.418C0.152832 28.339 1.71683 29.903 3.63783 29.903H22.9158L22.0148 26.792L24.1908 28.798L26.2478 30.685L29.9198 33.864V3.63795C29.9028 1.71695 28.3388 0.152954 26.4178 0.152954ZM19.8558 22.168C19.8558 22.168 19.2438 21.437 18.7338 20.808C20.9608 20.179 21.8108 18.802 21.8108 18.802C21.1138 19.261 20.4508 19.584 19.8558 19.805C19.0058 20.162 18.1898 20.383 17.3908 20.536C15.7588 20.842 14.2628 20.757 12.9878 20.519C12.0188 20.332 11.1858 20.077 10.4888 19.788C10.0978 19.635 9.67283 19.448 9.24783 19.21C9.19683 19.176 9.14583 19.159 9.09483 19.125C9.06083 19.108 9.04383 19.091 9.02683 19.091C8.72083 18.921 8.55083 18.802 8.55083 18.802C8.55083 18.802 9.36683 20.145 11.5258 20.791C11.0158 21.437 10.3868 22.185 10.3868 22.185C6.62983 22.066 5.20183 19.618 5.20183 19.618C5.20183 14.195 7.64983 9.79195 7.64983 9.79195C10.0978 7.97295 12.4098 8.02395 12.4098 8.02395L12.5798 8.22795C9.51983 9.09495 8.12583 10.438 8.12583 10.438C8.12583 10.438 8.49983 10.234 9.12883 9.96195C10.9478 9.16295 12.3928 8.95895 12.9878 8.89095C13.0898 8.87395 13.1748 8.85695 13.2768 8.85695C14.3138 8.72095 15.4868 8.68695 16.7108 8.82295C18.3258 9.00995 20.0598 9.48595 21.8278 10.438C21.8278 10.438 20.4848 9.16295 17.5948 8.29595L17.8328 8.02395C17.8328 8.02395 20.1618 7.97295 22.5928 9.79195C22.5928 9.79195 25.0408 14.195 25.0408 19.618C25.0408 19.601 23.6128 22.049 19.8558 22.168ZM45.5258 7.42895H39.8818V13.77L43.6388 17.153V10.999H45.6448C46.9198 10.999 47.5488 11.611 47.5488 12.597V17.306C47.5488 18.292 46.9538 18.955 45.6448 18.955H39.8648V22.542H45.5088C48.5348 22.559 51.3738 21.046 51.3738 17.578V12.512C51.3908 8.97595 48.5518 7.42895 45.5258 7.42895ZM75.1058 17.578V12.376C75.1058 10.506 78.4718 10.081 79.4918 11.951L82.6028 10.693C81.3788 8.00695 79.1518 7.22495 77.2988 7.22495C74.2728 7.22495 71.2808 8.97595 71.2808 12.376V17.578C71.2808 21.012 74.2728 22.729 77.2308 22.729C79.1348 22.729 81.4128 21.794 82.6708 19.346L79.3388 17.816C78.5228 19.907 75.1058 19.397 75.1058 17.578ZM64.8208 13.09C63.6478 12.835 62.8658 12.41 62.8148 11.679C62.8828 9.92795 65.5858 9.85995 67.1668 11.543L69.6658 9.62195C68.1018 7.71795 66.3338 7.20795 64.5148 7.20795C61.7438 7.20795 59.0578 8.77195 59.0578 11.73C59.0578 14.603 61.2678 16.15 63.6988 16.524C64.9398 16.694 66.3168 17.187 66.2828 18.037C66.1808 19.652 62.8488 19.567 61.3358 17.731L58.9218 19.992C60.3328 21.811 62.2538 22.729 64.0558 22.729C66.8268 22.729 69.9038 21.131 70.0228 18.207C70.1928 14.518 67.5068 13.583 64.8208 13.09ZM53.4308 22.525H57.2388V7.42895H53.4308V22.525ZM117.64 7.42895H111.996V13.77L115.753 17.153V10.999H117.759C119.034 10.999 119.663 11.611 119.663 12.597V17.306C119.663 18.292 119.068 18.955 117.759 18.955H111.979V22.542H117.64C120.666 22.559 123.505 21.046 123.505 17.578V12.512C123.505 8.97595 120.666 7.42895 117.64 7.42895ZM89.9468 7.22495C86.8188 7.22495 83.7078 8.92495 83.7078 12.41V17.561C83.7078 21.012 86.8358 22.746 89.9808 22.746C93.1088 22.746 96.2198 21.012 96.2198 17.561V12.41C96.2198 8.94195 93.0748 7.22495 89.9468 7.22495ZM92.3948 17.561C92.3948 18.649 91.1708 19.21 89.9638 19.21C88.7398 19.21 87.5158 18.683 87.5158 17.561V12.41C87.5158 11.305 88.7058 10.71 89.8958 10.71C91.1368 10.71 92.3948 11.237 92.3948 12.41V17.561ZM109.888 12.41C109.803 8.87395 107.389 7.44595 104.278 7.44595H98.2428V22.542H102.102V17.748H102.782L106.284 22.542H111.044L106.93 17.357C108.749 16.779 109.888 15.198 109.888 12.41ZM104.346 14.45H102.102V10.999H104.346C106.743 10.999 106.743 14.45 104.346 14.45Z\"></path>\n      </g>\n    </svg>\n  );\n}\n","import { Button, Flex } from \"@chakra-ui/react\";\nimport Logo from \"components/shared/Logo\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\n\nexport default function Navbar() {\n  const current = userStore((state) => state.current);\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      w=\"100%\"\n      mb={8}\n      p={8}\n    >\n      <Flex align=\"center\">\n        <Logo />\n      </Flex>\n\n      <Flex align=\"center\" justify={\"flex-end\"}>\n        {current ? (\n          <Link to=\"/channels/me\">\n            <Button\n              _hover={{ bg: \"highlight.hover\" }}\n              _active={{ bg: \"highlight.active\" }}\n              _focus={{ boxShadow: \"none\" }}\n              size=\"md\"\n              rounded=\"md\"\n              variant=\"outline\"\n            >\n              Open App\n            </Button>\n          </Link>\n        ) : (\n          <>\n            <Link to=\"/login\">\n              <Button\n                color=\"white\"\n                _hover={{ bg: \"highlight.hover\" }}\n                _active={{ bg: \"highlight.active\" }}\n                _focus={{ boxShadow: \"none\" }}\n                size=\"md\"\n                rounded=\"md\"\n                variant=\"outline\"\n                mx=\"4\"\n              >\n                Login\n              </Button>\n            </Link>\n\n            <Link to=\"/register\">\n              <Button\n                _hover={{ bg: \"highlight.hover\" }}\n                _active={{ bg: \"highlight.active\" }}\n                _focus={{ boxShadow: \"none\" }}\n                size=\"md\"\n                rounded=\"md\"\n                variant=\"outline\"\n              >\n                Register\n              </Button>\n            </Link>\n          </>\n        )}\n      </Flex>\n    </Flex>\n  );\n}\n","import { Flex } from \"@chakra-ui/react\";\nimport Footer from \"components/sections/Footer\";\nimport Navbar from \"components/sections/Navbar\";\nimport React from \"react\";\n\nexport default function LandingLayout({ children }) {\n  return (\n    <Flex direction=\"column\" align=\"center\" maxW={{ xl: \"1200px\" }} m=\"0 auto\">\n      <Navbar />\n      {children}\n      <Footer />\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Box,\n  Button,\n  Flex,\n  Image,\n  Link as CLink,\n  Heading,\n  Stack,\n  Text,\n} from \"@chakra-ui/react\";\n\nexport default function Hero({\n  title,\n  subtitle,\n  image,\n  ctaLink,\n  ctaText,\n  ...rest\n}) {\n  return (\n    <Flex\n      align=\"center\"\n      justify={{ base: \"center\", md: \"space-around\", xl: \"space-between\" }}\n      direction={{ base: \"column-reverse\", md: \"row\" }}\n      wrap=\"nowrap\"\n      minH=\"70vh\"\n      px={8}\n      mb={16}\n      {...rest}\n    >\n      <Stack\n        spacing={4}\n        w={{ base: \"80%\", md: \"40%\" }}\n        align={[\"center\", \"center\", \"flex-start\", \"flex-start\"]}\n      >\n        <Heading\n          as=\"h1\"\n          size=\"xl\"\n          fontWeight=\"bold\"\n          textAlign={[\"center\", \"center\", \"left\", \"left\"]}\n        >\n          {title}\n        </Heading>\n        <Heading\n          as=\"h2\"\n          size=\"md\"\n          opacity=\"0.8\"\n          fontWeight=\"normal\"\n          lineHeight={1.5}\n          textAlign={[\"center\", \"center\", \"left\", \"left\"]}\n        >\n          {subtitle}\n        </Heading>\n        <Link to={ctaLink}>\n          <Button\n            colorScheme=\"blue\"\n            borderRadius=\"8px\"\n            py=\"4\"\n            px=\"4\"\n            lineHeight=\"1\"\n            size=\"md\"\n          >\n            {ctaText}\n          </Button>\n        </Link>\n        <Text fontSize=\"xs\" mt={2} textAlign=\"center\" opacity=\"0.6\">\n          Got an account already?{\" \"}\n          <CLink as={Link} to=\"/login\">\n            Sign in\n          </CLink>\n        </Text>\n      </Stack>\n      <Box w={{ base: \"80%\", sm: \"60%\", md: \"50%\" }} mb={{ base: 12, md: 0 }}>\n        <Image src={image} size=\"50%\" rounded=\"1rem\" />\n      </Box>\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport LandingLayout from \"components/layouts/LandingLayout\";\nimport Hero from \"components/sections/Hero\";\nimport userStore from \"stores/userStore\";\n\nexport default function Landing() {\n  return (\n    <LandingLayout>\n      <Hero\n        title=\"An invite-only place with plenty of room to talk\"\n        subtitle=\"Discord servers are organized into topic-based channels where you can collaborate, share, and just talk about your day without clogging up a group chat.\"\n        image=\"/landing.svg\"\n        ctaText=\"Get Started\"\n        ctaLink=\"/register\"\n      />\n    </LandingLayout>\n  );\n}\n","import {\n  Box,\n  Button,\n  Flex,\n  Heading,\n  Image,\n  Link,\n  Text,\n} from \"@chakra-ui/react\";\nimport { login } from \"api/handler/auth\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { Link as RLink, useHistory } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport InputField from \"components/shared/InputField\";\nimport { LoginSchema } from \"validation/auth.schema\";\n\nexport default function Login() {\n  const history = useHistory();\n  const setUser = userStore((state) => state.setUser);\n\n  const handleLogIn = async (values, { setErrors }) => {\n    try {\n      const { data } = await login(values);\n      if (data) {\n        setUser(data);\n        history.push(\"/channels/me\");\n      }\n    } catch (error) {\n      if (error?.response?.status === 401) {\n        setErrors({ password: \"Invalid email or password 😢\" });\n      } else if (error?.response?.status === 404) {\n        setErrors({ email: \"No user found with this email 😟 \" });\n      } else {\n        console.log(error);\n        setErrors(toErrorMap(error));\n      }\n    }\n  };\n\n  return (\n    <Flex minHeight=\"100vh\" width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box px={4} width=\"full\" maxWidth=\"500px\" textAlign=\"center\">\n        <Flex mb=\"4\" justify=\"center\">\n          <Image src=\"/discord-logo.png\" w=\"80px\" />\n        </Flex>\n        <Box p={4} borderRadius={4} background=\"brandGray.light\">\n          <Box textAlign=\"center\">\n            <Heading fontSize=\"24px\">Welcome Back</Heading>\n          </Box>\n          <Box my={4} textAlign=\"left\">\n            <Formik\n              initialValues={{ email: \"\", password: \"\" }}\n              validationSchema={LoginSchema}\n              onSubmit={handleLogIn}\n            >\n              {({ isSubmitting }) => (\n                <Form>\n                  <InputField\n                    label=\"Email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    type=\"email\"\n                  />\n                  <InputField\n                    label=\"password\"\n                    name=\"password\"\n                    autoComplete=\"password\"\n                    type=\"password\"\n                  />\n\n                  <Box mt={4}>\n                    <Link\n                      as={RLink}\n                      to=\"/forgot-password\"\n                      textColor=\"highlight.standard\"\n                    >\n                      Forgot Password?\n                    </Link>\n                  </Box>\n\n                  <Button\n                    background=\"highlight.standard\"\n                    color=\"white\"\n                    width=\"full\"\n                    mt={4}\n                    type=\"submit\"\n                    isLoading={isSubmitting}\n                    _hover={{ bg: \"highlight.hover\" }}\n                    _active={{ bg: \"highlight.active\" }}\n                    _focus={{ boxShadow: \"none\" }}\n                  >\n                    Login\n                  </Button>\n                  <Text mt=\"4\">\n                    Don't have an account yet?{\" \"}\n                    <Link\n                      as={RLink}\n                      to=\"/register\"\n                      textColor=\"highlight.standard\"\n                    >\n                      Sign Up\n                    </Link>\n                  </Text>\n                </Form>\n              )}\n            </Formik>\n          </Box>\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n","import {\n  Box,\n  Button,\n  Flex,\n  Heading,\n  Image,\n  Link,\n  Text,\n} from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport { Link as RLink, useHistory } from \"react-router-dom\";\nimport InputField from \"components/shared/InputField\";\nimport { register } from \"api/handler/auth\";\nimport userStore from \"stores/userStore\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport { RegisterSchema } from \"validation/auth.schema\";\n\nexport default function Register() {\n  const history = useHistory();\n  const setUser = userStore((state) => state.setUser);\n\n  const handleRegister = async (values, { setErrors }) => {\n    try {\n      const { data } = await register(values);\n      if (data) {\n        setUser(data);\n        history.push(\"/channels/me\");\n      }\n    } catch (error) {\n      console.log(error);\n      setErrors(toErrorMap(error));\n    }\n  };\n\n  return (\n    <Flex minHeight=\"100vh\" width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box px={4} width=\"full\" maxWidth=\"500px\" textAlign=\"center\">\n        <Flex mb=\"4\" justify=\"center\">\n          <Image src=\"/logo.png\" w=\"80px\" />\n        </Flex>\n        <Box p={4} borderRadius={4} background=\"brandGray.light\">\n          <Box textAlign=\"center\">\n            <Heading fontSize=\"24px\">Welcome to Discord</Heading>\n          </Box>\n          <Box my={4} textAlign=\"left\">\n            <Formik\n              initialValues={{ email: \"\", username: \"\", password: \"\" }}\n              validationSchema={RegisterSchema}\n              onSubmit={handleRegister}\n            >\n              {({ isSubmitting }) => (\n                <Form>\n                  <InputField\n                    label=\"Email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    type=\"email\"\n                  />\n\n                  <InputField label=\"username\" name=\"username\" />\n\n                  <InputField\n                    label=\"password\"\n                    name=\"password\"\n                    autoComplete=\"password\"\n                    type=\"password\"\n                  />\n\n                  <Button\n                    background=\"highlight.standard\"\n                    color=\"white\"\n                    width=\"full\"\n                    mt={4}\n                    type=\"submit\"\n                    isLoading={isSubmitting}\n                    _hover={{ bg: \"highlight.hover\" }}\n                    _active={{ bg: \"highlight.active\" }}\n                    _focus={{ boxShadow: \"none\" }}\n                  >\n                    Register\n                  </Button>\n                  <Text mt=\"4\">\n                    Already have an account?{\" \"}\n                    <Link as={RLink} to=\"/login\" textColor=\"highlight.standard\">\n                      Sign In\n                    </Link>\n                  </Text>\n                </Form>\n              )}\n            </Formik>\n          </Box>\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n","import {\n  Box,\n  Button,\n  Flex,\n  Heading,\n  Image,\n  Link,\n  Text,\n} from \"@chakra-ui/react\";\nimport { resetPassword } from \"api/handler/auth\";\nimport { Form, Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { Link as RLink, useHistory, useParams } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport InputField from \"components/shared/InputField\";\nimport { ResetPasswordSchema } from \"validation/auth.schema\";\n\nexport default function ResetPassword() {\n  const { token } = useParams();\n  const setUser = userStore((state) => state.setUser);\n  const history = useHistory();\n  const [tokenError, setTokenError] = useState(\"\");\n\n  const handleSubmit = async (values, { setErrors }) => {\n    try {\n      const { data } = await resetPassword({ ...values, token });\n\n      if (data) {\n        setUser(data);\n        history.push(\"/channels/me\");\n      }\n    } catch (error) {\n      console.log(error);\n      const errorMap = toErrorMap(error);\n      if (errorMap) {\n        setTokenError(errorMap.token);\n      }\n      setErrors(errorMap);\n    }\n  };\n\n  return (\n    <Flex minHeight=\"100vh\" width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box px={4} width=\"full\" maxWidth=\"500px\" textAlign=\"center\">\n        <Flex mb=\"4\" justify=\"center\">\n          <Image src=\"/logo.png\" w=\"80px\" />\n        </Flex>\n        <Box p={4} borderRadius={4} background=\"brandGray.light\">\n          <Box textAlign=\"center\">\n            <Heading fontSize=\"24px\">Reset Password</Heading>\n          </Box>\n          <Box my={4} textAlign=\"left\">\n            <Formik\n              initialValues={{ newPassword: \"\", confirmNewPassword: \"\" }}\n              validationSchema={ResetPasswordSchema}\n              onSubmit={handleSubmit}\n            >\n              {({ isSubmitting }) => (\n                <Form>\n                  <InputField\n                    label=\"New Password\"\n                    name=\"newPassword\"\n                    autoComplete=\"new-password\"\n                    type=\"password\"\n                  />\n\n                  <InputField\n                    label=\"Confirm New Password\"\n                    name=\"confirmNewPassword\"\n                    type=\"password\"\n                  />\n\n                  <Button\n                    background=\"highlight.standard\"\n                    color=\"white\"\n                    width=\"full\"\n                    mt={4}\n                    type=\"submit\"\n                    isLoading={isSubmitting}\n                    _hover={{ bg: \"highlight.hover\" }}\n                    _active={{ bg: \"highlight.active\" }}\n                    _focus={{ boxShadow: \"none\" }}\n                  >\n                    Reset Password\n                  </Button>\n                </Form>\n              )}\n            </Formik>\n            {tokenError ? (\n              <Flex direction=\"column\" mt=\"4\" justify=\"center\" align=\"center\">\n                <Text>Invalid or expired token.</Text>\n                <Link as={RLink} to=\"/forgot-password\" color=\"red\">\n                  Click here to get a new token\n                </Link>\n              </Flex>\n            ) : null}\n          </Box>\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n","import create from \"zustand\";\nimport { persist } from \"zustand/middleware\";\n\nconst settingsStore = create(\n  persist(\n    (set, get) => ({\n      showMembers: true,\n      toggleShowMembers: () => set({ showMembers: !get().showMembers }),\n    }),\n    {\n      name: \"settings-storage\",\n    }\n  )\n);\n\nexport default settingsStore;\n","import React from \"react\";\nimport { Flex, GridItem, Icon, Text } from \"@chakra-ui/react\";\nimport { FaHashtag } from \"react-icons/fa\";\nimport { BsPeopleFill } from \"react-icons/bs\";\nimport { useParams } from \"react-router-dom\";\nimport settingsStore from \"stores/settingsStore\";\nimport useGetCurrentChannel from \"hooks/useGetCurrentChannel\";\nimport { cKey } from \"utils/querykeys\";\n\nexport default function ChannelHeader() {\n  const toggleMemberList = settingsStore((state) => state.toggleShowMembers);\n  const { guildId, channelId } = useParams();\n  const channel = useGetCurrentChannel(channelId, cKey(guildId));\n\n  return (\n    <GridItem\n      gridColumn={3}\n      gridRow={\"1\"}\n      bg=\"brandGray.light\"\n      padding=\"10px\"\n      zIndex=\"2\"\n      boxShadow=\"md\"\n    >\n      <Flex align=\"center\" justify=\"space-between\">\n        <Flex align=\"center\">\n          <FaHashtag />\n          <Text ml=\"2\" fontWeight=\"semibold\">\n            {channel?.name}\n          </Text>\n        </Flex>\n        <Icon\n          as={BsPeopleFill}\n          fontSize=\"20px\"\n          mr=\"2\"\n          _hover={{ cursor: \"pointer\" }}\n          onClick={toggleMemberList}\n        />\n      </Flex>\n    </GridItem>\n  );\n}\n","import { api } from \"../apiClient\";\n\nexport const getChannels = (id) => api.get(`/channels/${id}`);\n\nexport const createChannel = (id, body) => api.post(`/channels/${id}`, body);\n\nexport const editChannel = (guildId, channelId, body) =>\n  api.put(`/channels/${guildId}/${channelId}`, body);\n\nexport const deleteChannel = (guildId, channelId) =>\n  api.delete(`/channels/${guildId}/${channelId}`);\n\nexport const getPrivateChannelMembers = () => null;\n","import * as yup from 'yup';\n\nexport const ChannelSchema = yup.object().shape({\n  name: yup.string().min(3).max(30).required('This field is required'),\n  isPublic: yup.boolean().optional().default(true),\n  members: yup\n    .array(\n      yup.string().optional().max(20, 'Must provide memberIds'),\n    )\n    .optional()\n});\n","import {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Flex,\n  FormControl,\n  FormLabel,\n  LightMode,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Switch,\n  Text,\n} from \"@chakra-ui/react\";\nimport {\n  deleteChannel,\n  editChannel,\n  getPrivateChannelMembers,\n} from \"api/handler/channel\";\nimport { getGuildMembers } from \"api/handler/guilds\";\nimport { CUIAutoComplete } from \"chakra-ui-autocomplete\";\nimport { Form, Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { AiOutlineLock } from \"react-icons/ai\";\nimport { FaRegTrashAlt } from \"react-icons/fa\";\nimport { useQuery } from \"react-query\";\nimport useGetCurrentChannel from \"hooks/useGetCurrentChannel\";\nimport { cKey, mKey } from \"utils/querykeys\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport { ChannelSchema } from \"validation/channel.schema\";\nimport InputField from \"components/shared/InputField\";\n\nexport default function ChannelSettingsModal({\n  guildId,\n  channelId,\n  isOpen,\n  onClose,\n}) {\n  const key = mKey(guildId);\n  const { data } = useQuery(key, () =>\n    getGuildMembers(guildId).then((res) => res.data)\n  );\n\n  const channel = useGetCurrentChannel(channelId, cKey(guildId));\n\n  const members = [];\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [screen, setScreen] = useState(\"START\");\n\n  const goBack = () => setScreen(\"START\");\n  const submitClose = () => {\n    setScreen(\"START\");\n    onClose();\n  };\n\n  async function handleEditChannel(values, { setErrors, resetForm }) {\n    try {\n      const ids = [];\n      selectedItems.map((item) => ids.push(item.value));\n      const { data } = await editChannel(guildId, channelId, {\n        ...values,\n        members: ids,\n      });\n      if (data) {\n        resetForm();\n        onClose();\n      }\n    } catch (error) {\n      setErrors(toErrorMap(error));\n    }\n  }\n\n  data?.map((m) =>\n    members.push({ label: m.username, value: m.id, image: m.image })\n  );\n\n  // eslint-disable-next-line\n  const { data: current } = useQuery(`${channelId}-members`, async () => {\n    const { data } = await getPrivateChannelMembers(channelId);\n    const current = members.filter((m) => data.includes(m.value));\n    setSelectedItems(current);\n    return current;\n  });\n\n  const handleCreateItem = (item) => {\n    setSelectedItems((curr) => [...curr, item]);\n  };\n\n  const handleSelectedItemsChange = (selectedItems) => {\n    if (selectedItems) {\n      setSelectedItems(selectedItems);\n    }\n  };\n\n  const ListItem = (selected) => {\n    return (\n      <Flex align=\"center\">\n        <Avatar mr={2} size=\"sm\" src={selected.image} />\n        <Text textColor={\"#000\"}>{selected.label}</Text>\n      </Flex>\n    );\n  };\n\n  if (!channel) return null;\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      {screen === \"START\" && (\n        <ModalContent bg=\"brandGray.light\">\n          <Formik\n            initialValues={{\n              name: channel.name,\n              isPublic: channel.isPublic,\n            }}\n            validationSchema={ChannelSchema}\n            onSubmit={handleEditChannel}\n          >\n            {({ isSubmitting, setFieldValue, values }) => (\n              <Form>\n                <ModalHeader textAlign=\"center\" fontWeight=\"bold\">\n                  Channel Settings\n                </ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                  <InputField label=\"channel name\" name=\"name\" />\n\n                  <FormControl\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"space-between\"\n                    mt=\"4\"\n                  >\n                    <FormLabel mb=\"0\">\n                      <Flex align=\"center\">\n                        <AiOutlineLock />\n                        <Text ml=\"2\">Private Channel</Text>\n                      </Flex>\n                    </FormLabel>\n                    <Switch\n                      defaultChecked={!values.isPublic}\n                      onChange={(e) => {\n                        setFieldValue(\"isPublic\", !e.target.checked);\n                      }}\n                    />\n                  </FormControl>\n                  <Text mt=\"4\" fontSize=\"14px\" textColor=\"brandGray.accent\">\n                    By making a channel private, only selected members will be\n                    able to view this channel\n                  </Text>\n                  {!values.isPublic && (\n                    <Box mt={\"2\"} pb={0}>\n                      <CUIAutoComplete\n                        label=\"Who can access this channel\"\n                        placeholder=\"\"\n                        onCreateItem={handleCreateItem}\n                        items={members}\n                        selectedItems={selectedItems}\n                        itemRenderer={ListItem}\n                        onSelectedItemsChange={(changes) =>\n                          handleSelectedItemsChange(changes.selectedItems)\n                        }\n                      />\n                    </Box>\n                  )}\n\n                  <Divider my={\"2\"} />\n\n                  <LightMode>\n                    <Button\n                      onClick={() => setScreen(\"CONFIRM\")}\n                      colorScheme={\"red\"}\n                      variant=\"ghost\"\n                      fontSize={\"14px\"}\n                      rightIcon={<FaRegTrashAlt />}\n                    >\n                      Delete Channel\n                    </Button>\n                  </LightMode>\n                </ModalBody>\n\n                <ModalFooter bg=\"brandGray.dark\">\n                  <Button\n                    onClick={onClose}\n                    mr={6}\n                    variant=\"link\"\n                    fontSize={\"14px\"}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    background=\"highlight.standard\"\n                    color=\"white\"\n                    type=\"submit\"\n                    _hover={{ bg: \"highlight.hover\" }}\n                    _active={{ bg: \"highlight.active\" }}\n                    _focus={{ boxShadow: \"none\" }}\n                    isLoading={isSubmitting}\n                    fontSize={\"14px\"}\n                  >\n                    Save Changes\n                  </Button>\n                </ModalFooter>\n              </Form>\n            )}\n          </Formik>\n        </ModalContent>\n      )}\n      {screen === \"CONFIRM\" && (\n        <DeleteChannelModal\n          goBack={goBack}\n          submitClose={submitClose}\n          name={channel.name}\n          channelId={channel.id}\n          guildId={guildId}\n        />\n      )}\n    </Modal>\n  );\n}\n\nfunction DeleteChannelModal({ goBack, submitClose, name, channelId, guildId }) {\n  async function handleDeleteChannel() {\n    submitClose();\n    await deleteChannel(guildId, channelId);\n  }\n\n  return (\n    <ModalContent bg=\"brandGray.light\">\n      <ModalHeader fontWeight=\"bold\" pb=\"0\">\n        Delete Channel\n      </ModalHeader>\n      <ModalBody pb={3}>\n        <Text>\n          Are you sure you want to delete #{name}? This cannot be undone.\n        </Text>\n      </ModalBody>\n\n      <ModalFooter bg=\"brandGray.dark\">\n        <Button mr={6} variant=\"link\" onClick={goBack} fontSize={\"14px\"}>\n          Cancel\n        </Button>\n        <LightMode>\n          <Button\n            colorScheme=\"red\"\n            fontSize={\"14px\"}\n            onClick={handleDeleteChannel}\n          >\n            Delete Channel\n          </Button>\n        </LightMode>\n      </ModalFooter>\n    </ModalContent>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Flex, Icon, ListItem, Text, useDisclosure } from \"@chakra-ui/react\";\nimport { FaHashtag, FaUserLock } from \"react-icons/fa\";\nimport { MdSettings } from \"react-icons/md\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport ChannelSettingsModal from \"components/modals/ChannelSettingsModal\";\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\nimport { ChannelNotificationIndicator } from \"components/shared/GuildPills\";\nimport { useQueryClient } from \"react-query\";\nimport { cKey } from \"utils/querykeys\";\n\nexport default function ChannelListItem({ channel, guildId }) {\n  const currentPath = `/channels/${guildId}/${channel.id}`;\n  const location = useLocation();\n  const isActive = location.pathname === currentPath;\n  const [showSettings, setShowSettings] = useState(false);\n\n  const current = userStore((state) => state.current);\n  const guild = useGetCurrentGuild(guildId);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const cache = useQueryClient();\n\n  useEffect(() => {\n    if (channel.hasNotification && isActive) {\n      cache.setQueryData(cKey(guildId), (d) => {\n        const index = d?.findIndex((c) => c.id === channel.id);\n        if (index !== -1) {\n          d[index] = { ...d[index], hasNotification: false };\n        }\n        return d;\n      });\n    }\n  });\n\n  return (\n    <Link to={currentPath}>\n      <ListItem\n        p=\"5px\"\n        m=\"0 10px\"\n        color={\n          isActive || channel.hasNotification ? \"#fff\" : \"brandGray.accent\"\n        }\n        _hover={{\n          bg: \"brandGray.light\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n          color: \"#fff\",\n        }}\n        bg={isActive ? \"brandGray.active\" : undefined}\n        mb=\"2px\"\n        onMouseLeave={() => setShowSettings(false)}\n        onMouseEnter={() => setShowSettings(true)}\n      >\n        {channel.hasNotification && <ChannelNotificationIndicator />}\n        <Flex align=\"center\" justify={\"space-between\"}>\n          <Flex align=\"center\">\n            <Icon\n              as={channel.isPublic ? FaHashtag : FaUserLock}\n              color={\"brandGray.accent\"}\n            />\n            <Text ml=\"2\">{channel.name}</Text>\n          </Flex>\n          {current?.id === guild?.ownerId && (showSettings || isOpen) && (\n            <>\n              <Icon\n                as={MdSettings}\n                color={\"brandGray.accent\"}\n                fontSize={\"12px\"}\n                _hover={{ color: \"#fff\" }}\n                onClick={(e) => {\n                  e.preventDefault();\n                  onOpen();\n                }}\n              />\n              {isOpen && (\n                <ChannelSettingsModal\n                  guildId={guildId}\n                  channelId={channel.id}\n                  isOpen={isOpen}\n                  onClose={onClose}\n                />\n              )}\n            </>\n          )}\n        </Flex>\n      </ListItem>\n    </Link>\n  );\n}\n","import * as yup from 'yup';\n\nexport const MemberSchema = yup.object().shape({\n  nickname: yup\n    .string()\n    .nullable()\n    .min(3)\n    .max(30),\n  color: yup\n    .string()\n    .nullable()\n    .matches(/^#[0-9a-f]{3}(?:[0-9a-f]{3})?$/i, \"The color must be a valid hex color\")\n});","import {\n  Button,\n  Divider,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from \"@chakra-ui/react\";\nimport {\n  changeGuildMemberSettings,\n  getGuildMemberSettings,\n} from \"api/handler/guilds\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { TwitterPicker } from \"react-color\";\nimport { useQuery } from \"react-query\";\nimport userStore from \"stores/userStore\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport { MemberSchema } from \"validation/member.schema\";\nimport InputField from \"components/shared/InputField\";\n\nexport default function EditMemberModal({ guildId, isOpen, onClose }) {\n  const current = userStore((state) => state.current);\n  const { data } = useQuery(`settings-${guildId}`, () =>\n    getGuildMemberSettings(guildId).then((res) => res.data)\n  );\n\n  async function handleEditMemberAppearance(\n    values,\n    { setErrors, setFieldValue }\n  ) {\n    try {\n      if (values.color === \"#fff\") {\n        setFieldValue(\"color\", null);\n      }\n      const { data } = await changeGuildMemberSettings(guildId, values);\n      if (data) {\n        onClose();\n      }\n    } catch (error) {\n      setErrors(toErrorMap(error));\n    }\n  }\n\n  if (!data) return null;\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent bg=\"brandGray.light\">\n        <Formik\n          initialValues={{\n            color: data.color,\n            nickname: data.nickname,\n          }}\n          validationSchema={MemberSchema}\n          onSubmit={handleEditMemberAppearance}\n        >\n          {({ isSubmitting, setFieldValue, values }) => (\n            <Form>\n              <ModalHeader fontWeight=\"bold\" pb={0}>\n                Change Appearance\n              </ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <InputField\n                  color={values.color ?? undefined}\n                  label=\"nickname\"\n                  name=\"nickname\"\n                  value={values.nickname ?? current.username}\n                />\n                <Text\n                  mt={\"2\"}\n                  ml={\"1\"}\n                  color={\"brandGray.accent\"}\n                  _hover={{\n                    cursor: \"pointer\",\n                    color: \"highlight.standard\",\n                  }}\n                  fontSize={\"14px\"}\n                  onClick={() => setFieldValue(\"nickname\", null)}\n                >\n                  Reset Nickname\n                </Text>\n\n                <Divider my={\"4\"} />\n\n                <TwitterPicker\n                  color={values.color || \"#fff\"}\n                  onChangeComplete={(color) => {\n                    if (color) setFieldValue(\"color\", color.hex);\n                  }}\n                  className={\"picker\"}\n                />\n\n                <Text\n                  mt={\"2\"}\n                  ml={\"1\"}\n                  color={\"brandGray.accent\"}\n                  _hover={{\n                    cursor: \"pointer\",\n                    color: \"highlight.standard\",\n                  }}\n                  fontSize={\"14px\"}\n                  onClick={() => setFieldValue(\"color\", \"#fff\")}\n                >\n                  Reset Color\n                </Text>\n              </ModalBody>\n\n              <ModalFooter bg=\"brandGray.dark\">\n                <Button\n                  onClick={onClose}\n                  mr={6}\n                  variant=\"link\"\n                  fontSize={\"14px\"}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  background=\"highlight.standard\"\n                  color=\"white\"\n                  type=\"submit\"\n                  _hover={{ bg: \"highlight.hover\" }}\n                  _active={{ bg: \"highlight.active\" }}\n                  _focus={{ boxShadow: \"none\" }}\n                  isLoading={isSubmitting}\n                  fontSize={\"14px\"}\n                >\n                  Save\n                </Button>\n              </ModalFooter>\n            </Form>\n          )}\n        </Formik>\n      </ModalContent>\n    </Modal>\n  );\n}\n","const channelScrollbarCss = {\n  \"&::-webkit-scrollbar\": {\n    width: \"4px\",\n  },\n  \"&::-webkit-scrollbar-track\": {\n    width: \"4px\",\n  },\n  \"&::-webkit-scrollbar-thumb\": {\n    background: \"brandGray.darker\",\n    borderRadius: \"18px\",\n  },\n};\n\nexport default channelScrollbarCss;\n","import {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Flex,\n  IconButton,\n  LightMode,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  Tooltip,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport {\n  deleteGuild,\n  editGuild,\n  getBanList,\n  invalidateInviteLinks,\n  unbanMember,\n} from \"api/handler/guilds\";\nimport { Form, Formik } from \"formik\";\nimport React, { useRef, useState } from \"react\";\nimport { BiUnlink } from \"react-icons/bi\";\nimport { FaRegTrashAlt } from \"react-icons/fa\";\nimport { ImHammer2 } from \"react-icons/im\";\nimport { IoCheckmarkCircle, IoPersonRemove } from \"react-icons/io5\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport { GuildSchema } from \"validation/guild.schema\";\nimport channelScrollbarCss from \"../layouts/guild/css/ChannelScrollerCSS\";\nimport InputField from \"components/shared/InputField\";\nimport CropImageModal from \"./CropImageModal\";\n\nexport default function GuildSettingsModal({ guildId, isOpen, onClose }) {\n  const guild = useGetCurrentGuild(guildId);\n  const [screen, setScreen] = useState(\"START\");\n  const [isReset, setIsReset] = useState(false);\n\n  const goBack = () => setScreen(\"START\");\n  const submitClose = () => {\n    setScreen(\"START\");\n    onClose();\n  };\n\n  const {\n    isOpen: cropperIsOpen,\n    onOpen: cropperOnOpen,\n    onClose: cropperOnClose,\n  } = useDisclosure();\n\n  const inputFile = useRef(null);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [cropImage, setCropImage] = useState(\"\");\n  const [croppedImage, setCroppedImage] = useState(null);\n\n  async function handleEditGuild(values, { setErrors, resetForm }) {\n    try {\n      const formData = new FormData();\n      formData.append(\"name\", values.name);\n      formData.append(\"image\", croppedImage ?? imageUrl);\n      const { data } = await editGuild(guildId, formData);\n      if (data) {\n        resetForm();\n        onClose();\n      }\n    } catch (error) {\n      setErrors(toErrorMap(error));\n    }\n  }\n\n  function applyCrop(file) {\n    setImageUrl(URL.createObjectURL(file));\n    setCroppedImage(new File([file], \"icon\"));\n    cropperOnClose();\n  }\n\n  async function handleInvalidateInvites() {\n    const { data } = await invalidateInviteLinks(guild.id);\n\n    if (data) {\n      setIsReset(true);\n    }\n  }\n\n  if (!guild) return null;\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      {screen === \"START\" && (\n        <ModalContent bg=\"brandGray.light\">\n          <Formik\n            initialValues={{\n              name: guild.name,\n            }}\n            validationSchema={GuildSchema}\n            onSubmit={handleEditGuild}\n          >\n            {({ isSubmitting }) => (\n              <Form>\n                <ModalHeader textAlign=\"center\" fontWeight=\"bold\" pb={0}>\n                  Server Overview\n                </ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                  <Flex mb=\"4\" justify=\"center\">\n                    <Box textAlign={\"center\"}>\n                      <Tooltip label=\"Change Icon\" aria-label=\"Change Icon\">\n                        <Avatar\n                          size=\"xl\"\n                          name={guild?.name}\n                          bg={\"brandGray.darker\"}\n                          color={\"#fff\"}\n                          src={imageUrl || \"\"}\n                          _hover={{ cursor: \"pointer\", opacity: 0.5 }}\n                          onClick={() => inputFile.current.click()}\n                        />\n                      </Tooltip>\n                      <Text\n                        mt={\"2\"}\n                        _hover={{\n                          cursor: \"pointer\",\n                          color: \"brandGray.accent\",\n                        }}\n                        onClick={() => {\n                          setCroppedImage(null);\n                          setImageUrl(null);\n                        }}\n                      >\n                        Remove\n                      </Text>\n                    </Box>\n                    <input\n                      type=\"file\"\n                      name=\"image\"\n                      accept=\"image/*\"\n                      ref={inputFile}\n                      hidden\n                      onChange={async (e) => {\n                        if (!e.currentTarget.files) return;\n                        setCropImage(\n                          URL.createObjectURL(e.currentTarget.files[0])\n                        );\n                        cropperOnOpen();\n                      }}\n                    />\n                  </Flex>\n\n                  <InputField label=\"server name\" name=\"name\" />\n\n                  <Divider my={\"4\"} />\n\n                  <Text fontWeight={\"semibold\"} mb={2}>\n                    Additional Configuration\n                  </Text>\n\n                  <Flex align={\"center\"} justify={\"space-between\"} mb={\"2\"}>\n                    <Button\n                      onClick={handleInvalidateInvites}\n                      fontSize={\"14px\"}\n                      rightIcon={isReset ? <IoCheckmarkCircle /> : <BiUnlink />}\n                      colorScheme={isReset ? \"green\" : \"gray\"}\n                    >\n                      Invalidate Links\n                    </Button>\n                    <Button\n                      onClick={() => setScreen(\"BANLIST\")}\n                      fontSize={\"14px\"}\n                      rightIcon={<ImHammer2 />}\n                    >\n                      Bans\n                    </Button>\n                  </Flex>\n                  <Flex align={\"center\"} justify={\"space-between\"} mb={\"2\"}>\n                    <LightMode>\n                      <Button\n                        onClick={() => setScreen(\"CONFIRM\")}\n                        colorScheme={\"red\"}\n                        variant=\"ghost\"\n                        fontSize={\"14px\"}\n                        textColor={\"menuRed\"}\n                        rightIcon={<FaRegTrashAlt />}\n                      >\n                        Delete Server\n                      </Button>\n                    </LightMode>\n                  </Flex>\n                </ModalBody>\n\n                <ModalFooter bg=\"brandGray.dark\">\n                  <Button\n                    onClick={onClose}\n                    mr={6}\n                    variant=\"link\"\n                    fontSize={\"14px\"}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    background=\"highlight.standard\"\n                    color=\"white\"\n                    type=\"submit\"\n                    _hover={{ bg: \"highlight.hover\" }}\n                    _active={{ bg: \"highlight.active\" }}\n                    _focus={{ boxShadow: \"none\" }}\n                    isLoading={isSubmitting}\n                    fontSize={\"14px\"}\n                  >\n                    Save Changes\n                  </Button>\n                </ModalFooter>\n              </Form>\n            )}\n          </Formik>\n          {cropperIsOpen && (\n            <CropImageModal\n              isOpen={cropperIsOpen}\n              onClose={cropperOnClose}\n              initialImage={cropImage}\n              applyCrop={applyCrop}\n            />\n          )}\n        </ModalContent>\n      )}\n      {screen === \"CONFIRM\" && (\n        <DeleteGuildModal\n          goBack={goBack}\n          submitClose={submitClose}\n          name={guild.name}\n          guildId={guildId}\n        />\n      )}\n      {screen === \"BANLIST\" && (\n        <BanListModal goBack={goBack} guildId={guildId} />\n      )}\n    </Modal>\n  );\n}\n\nfunction DeleteGuildModal({ goBack, submitClose, name, guildId }) {\n  async function handleDeleteGuild() {\n    submitClose();\n    await deleteGuild(guildId);\n  }\n\n  return (\n    <ModalContent bg=\"brandGray.light\">\n      <ModalHeader fontWeight=\"bold\" pb=\"0\">\n        Delete {name}\n      </ModalHeader>\n      <ModalBody pb={3}>\n        <Text>\n          Are you sure you want to delete <b>{name}</b>? This cannot be undone.\n        </Text>\n      </ModalBody>\n\n      <ModalFooter bg=\"brandGray.dark\">\n        <Button mr={6} variant=\"link\" onClick={goBack} fontSize={\"14px\"}>\n          Cancel\n        </Button>\n        <LightMode>\n          <Button\n            colorScheme=\"red\"\n            fontSize={\"14px\"}\n            onClick={handleDeleteGuild}\n          >\n            Delete Server\n          </Button>\n        </LightMode>\n      </ModalFooter>\n    </ModalContent>\n  );\n}\n\nfunction BanListModal({ goBack, guildId }) {\n  const key = `bans-${guildId}`;\n  const { data } = useQuery(key, () =>\n    getBanList(guildId).then((response) => response.data)\n  );\n  const cache = useQueryClient();\n\n  const unbanUser = async (id) => {\n    const { data } = await unbanMember(guildId, id);\n    if (data) {\n      cache.setQueryData(key, (d) => {\n        return d?.filter((b) => b.id !== id);\n      });\n    }\n  };\n\n  return (\n    <ModalContent bg=\"brandGray.light\" maxH={\"500px\"}>\n      <ModalHeader fontWeight=\"bold\" pb=\"0\">\n        {data?.length} Bans\n      </ModalHeader>\n      <ModalBody pb={3} overflowY={\"auto\"} css={channelScrollbarCss}>\n        <Text mb={2}>Bans are by account. Click on the icon to unban.</Text>\n\n        {data?.map((m) => (\n          <Flex\n            p={\"3\"}\n            _hover={{\n              bg: \"brandGray.dark\",\n              borderRadius: \"5px\",\n            }}\n            align=\"center\"\n            justify=\"space-between\"\n          >\n            <Flex align=\"center\" w={\"full\"}>\n              <Avatar size=\"sm\" src={m.image} />\n              <Text ml=\"2\">{m.username}</Text>\n            </Flex>\n            <IconButton\n              icon={<IoPersonRemove />}\n              borderRadius=\"50%\"\n              aria-label=\"unban user\"\n              onClick={async (e) => {\n                e.preventDefault();\n                await unbanUser(m.id);\n              }}\n            />\n          </Flex>\n        ))}\n        {data?.length === 0 && <Text>No bans yet.</Text>}\n      </ModalBody>\n\n      <ModalFooter bg=\"brandGray.dark\">\n        <Button mr={6} variant=\"link\" onClick={goBack} fontSize={\"14px\"}>\n          Back\n        </Button>\n      </ModalFooter>\n    </ModalContent>\n  );\n}\n","import { Flex, Icon, MenuItem, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport function StyledMenuItem({ label, icon, handleClick }) {\n  return (\n    <MenuItem\n      _hover={{ bg: \"highlight.standard\", borderRadius: \"2px\" }}\n      onClick={handleClick}\n    >\n      <Flex align=\"center\" justify=\"space-between\" w=\"full\">\n        <Text>{label}</Text>\n        <Icon as={icon} />\n      </Flex>\n    </MenuItem>\n  );\n}\n\nexport function StyledRedMenuItem({ label, icon, handleClick }) {\n  return (\n    <MenuItem\n      _hover={{ bg: \"menuRed\", color: \"#fff\", borderRadius: \"2px\" }}\n      onClick={handleClick}\n    >\n      <Flex align=\"center\" justify=\"space-between\" w=\"full\">\n        <Text>{label}</Text>\n        <Icon as={icon} />\n      </Flex>\n    </MenuItem>\n  );\n}\n","import { MenuList } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport default function StyledMenuList({ children }) {\n  return (\n    <MenuList bg=\"brandGray.darkest\" px=\"2\">\n      {children}\n    </MenuList>\n  );\n}\n","import {\n  Flex,\n  GridItem,\n  Heading,\n  Icon,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { leaveGuild } from \"api/handler/guilds\";\nimport React from \"react\";\nimport { FaUserEdit, FaUserPlus } from \"react-icons/fa\";\nimport { FiChevronDown, FiX } from \"react-icons/fi\";\nimport { HiLogout } from \"react-icons/hi\";\nimport { MdAddCircle } from \"react-icons/md\";\nimport { RiSettings5Fill } from \"react-icons/ri\";\nimport { useQueryClient } from \"react-query\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\nimport { gKey } from \"utils/querykeys\";\nimport EditMemberModal from \"components/modals/EditMemberModal\";\nimport GuildSettingsModal from \"components/modals/GuildSettingsModal\";\nimport { StyledMenuItem, StyledRedMenuItem } from \"./StyledMenuItem\";\nimport StyledMenuList from \"./StyledMenuList\";\n\nexport default function GuildMenu({ channelOpen, inviteOpen }) {\n  const { guildId } = useParams();\n  const guild = useGetCurrentGuild(guildId);\n  const history = useHistory();\n  const cache = useQueryClient();\n\n  const user = userStore((state) => state.current);\n  const isOwner = guild?.ownerId === user?.id;\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const {\n    isOpen: memberOpen,\n    onOpen: memberOnOpen,\n    onClose: memberOnClose,\n  } = useDisclosure();\n\n  const handleLeave = async () => {\n    const { data } = await leaveGuild(guildId);\n    if (data) {\n      cache.setQueryData(gKey, (d) => {\n        return d.filter((g) => g.id !== guild?.id);\n      });\n      history.replace(\"/channels/me\");\n    }\n  };\n\n  return (\n    <GridItem\n      gridColumn={2}\n      gridRow={\"1\"}\n      bg=\"brandGray.light\"\n      padding=\"10px\"\n      zIndex=\"2\"\n      boxShadow=\"md\"\n    >\n      <Menu placement=\"bottom-end\" isLazy>\n        {({ isOpen }) => (\n          <>\n            <Flex justify=\"space-between\" align=\"center\">\n              <Heading fontSize=\"20px\">{guild?.name}</Heading>\n              <MenuButton>\n                <Icon as={!isOpen ? FiChevronDown : FiX} />\n              </MenuButton>\n            </Flex>\n            <StyledMenuList>\n              <StyledMenuItem\n                label={\"Invite People\"}\n                icon={FaUserPlus}\n                handleClick={inviteOpen}\n              />\n              {isOwner && (\n                <StyledMenuItem\n                  label={\"Server Settings\"}\n                  icon={RiSettings5Fill}\n                  handleClick={onOpen}\n                />\n              )}\n              {isOwner && (\n                <StyledMenuItem\n                  label={\"Create Channel\"}\n                  icon={MdAddCircle}\n                  handleClick={channelOpen}\n                />\n              )}\n              <MenuDivider />\n              <StyledMenuItem\n                label={\"Change Appearance\"}\n                icon={FaUserEdit}\n                handleClick={memberOnOpen}\n              />\n              {!isOwner && (\n                <>\n                  <MenuDivider />\n                  <StyledRedMenuItem\n                    label={\"Leave Server\"}\n                    icon={HiLogout}\n                    handleClick={handleLeave}\n                  />\n                </>\n              )}\n            </StyledMenuList>\n          </>\n        )}\n      </Menu>\n      {isOpen && (\n        <GuildSettingsModal\n          guildId={guildId}\n          isOpen={isOpen}\n          onClose={onClose}\n        />\n      )}\n      {memberOpen && (\n        <EditMemberModal\n          guildId={guildId}\n          isOpen={memberOpen}\n          onClose={memberOnClose}\n        />\n      )}\n    </GridItem>\n  );\n}\n","import {\n  Avatar,\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Switch,\n  Text,\n} from \"@chakra-ui/react\";\nimport { createChannel } from \"api/handler/channel\";\nimport { getGuildMembers } from \"api/handler/guilds\";\nimport { CUIAutoComplete } from \"chakra-ui-autocomplete\";\nimport { Form, Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { AiOutlineLock } from \"react-icons/ai\";\nimport { useQuery } from \"react-query\";\nimport { mKey } from \"utils/querykeys\";\nimport toErrorMap from \"utils/toErrorMap\";\nimport { ChannelSchema } from \"validation/channel.schema\";\nimport InputField from \"components/shared/InputField\";\n\nexport default function CreateChannelModal({ guildId, isOpen, onClose }) {\n  const key = mKey(guildId);\n  const { data } = useQuery(key, () =>\n    getGuildMembers(guildId).then((res) => res.data)\n  );\n\n  async function handleCreateChannel(values, { setErrors, resetForm }) {\n    try {\n      const ids = [];\n      selectedItems.map((item) => ids.push(item.value));\n      const { data } = await createChannel(guildId, {\n        ...values,\n        members: ids,\n      });\n      if (data) {\n        resetForm();\n        onClose();\n      }\n    } catch (error) {\n      setErrors(toErrorMap(error));\n    }\n  }\n\n  const members = [];\n  const [selectedItems, setSelectedItems] = useState([]);\n\n  data?.map((m) =>\n    members.push({ label: m.username, value: m.id, image: m.image })\n  );\n\n  const handleCreateItem = (item) => {\n    setSelectedItems((curr) => [...curr, item]);\n  };\n\n  const handleSelectedItemsChange = (selectedItems) => {\n    if (selectedItems) {\n      setSelectedItems(selectedItems);\n    }\n  };\n\n  const ListItem = (selected) => {\n    return (\n      <Flex align=\"center\">\n        <Avatar mr={2} size=\"sm\" src={selected.image} />\n        <Text textColor={\"#000\"}>{selected.label}</Text>\n      </Flex>\n    );\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent bg=\"brandGray.light\">\n        <Formik\n          initialValues={{\n            name: \"\",\n            isPublic: true,\n          }}\n          validationSchema={ChannelSchema}\n          onSubmit={handleCreateChannel}\n        >\n          {({ isSubmitting, setFieldValue, values }) => (\n            <Form>\n              <ModalHeader textAlign=\"center\" fontWeight=\"bold\">\n                Create Text Channel\n              </ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <InputField label=\"channel name\" name=\"name\" />\n\n                <FormControl\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  justifyContent=\"space-between\"\n                  mt=\"4\"\n                >\n                  <FormLabel htmlFor=\"email-alerts\" mb=\"0\">\n                    <Flex align=\"center\">\n                      <AiOutlineLock />\n                      <Text ml=\"2\">Private Channel</Text>\n                    </Flex>\n                  </FormLabel>\n                  <Switch\n                    onChange={(e) => {\n                      setFieldValue(\"isPublic\", !e.target.checked);\n                    }}\n                  />\n                </FormControl>\n                <Text mt=\"4\" fontSize=\"14px\" textColor=\"brandGray.accent\">\n                  By making a channel private, only selected members will be\n                  able to view this channel\n                </Text>\n                {!values.isPublic && (\n                  <Box mt={\"2\"} pb={0}>\n                    <CUIAutoComplete\n                      label=\"Who can access this channel\"\n                      placeholder=\"\"\n                      onCreateItem={handleCreateItem}\n                      items={members}\n                      selectedItems={selectedItems}\n                      itemRenderer={ListItem}\n                      onSelectedItemsChange={(changes) =>\n                        handleSelectedItemsChange(changes.selectedItems)\n                      }\n                    />\n                  </Box>\n                )}\n              </ModalBody>\n\n              <ModalFooter bg=\"brandGray.dark\">\n                <Button\n                  onClick={onClose}\n                  fontSize={\"14px\"}\n                  mr={6}\n                  variant=\"link\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  background=\"highlight.standard\"\n                  color=\"white\"\n                  type=\"submit\"\n                  fontSize={\"14px\"}\n                  _hover={{ bg: \"highlight.hover\" }}\n                  _active={{ bg: \"highlight.active\" }}\n                  _focus={{ boxShadow: \"none\" }}\n                  isLoading={isSubmitting}\n                >\n                  Create Channel\n                </Button>\n              </ModalFooter>\n            </Form>\n          )}\n        </Formik>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import {\n  Button,\n  Checkbox,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  useClipboard,\n} from \"@chakra-ui/react\";\nimport { getInviteLink } from \"api/handler/guilds\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function InviteModal({ isOpen, onClose }) {\n  const { guildId } = useParams();\n  const [inviteLink, setInviteLink] = useState(\"\");\n  const { hasCopied, onCopy } = useClipboard(inviteLink);\n  const [isPermanent, setPermanent] = useState(false);\n\n  useEffect(() => {\n    if (isOpen) {\n      async function fetchLink() {\n        const { data } = await getInviteLink(guildId, isPermanent);\n        if (data) {\n          setInviteLink(data);\n        }\n      }\n      fetchLink();\n    }\n  }, [isOpen, guildId, isPermanent]);\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent bg=\"brandGray.light\">\n        <ModalHeader textAlign=\"center\" fontWeight=\"bold\" pb={\"0\"}>\n          Invite Link\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Text mb=\"4\">\n            Share this link with others to grant access to this server\n          </Text>\n\n          <Checkbox onChange={(e) => setPermanent(e.target.checked)} mb={4}>\n            Make it unlimited / Never reset\n          </Checkbox>\n\n          <InputGroup>\n            <Input\n              bg=\"brandGray.dark\"\n              borderColor={hasCopied ? \"brandGreen\" : \"black\"}\n              borderRadius=\"3px\"\n              focusBorderColor=\"highlight.standard\"\n              value={inviteLink}\n              isReadOnly\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button\n                h=\"1.75rem\"\n                size=\"sm\"\n                bg={hasCopied ? \"brandGreen\" : \"highlight.standard\"}\n                color=\"white\"\n                type=\"submit\"\n                fontSize={\"14px\"}\n                _hover={{ bg: \"highlight.hover\" }}\n                _active={{ bg: \"highlight.active\" }}\n                _focus={{ boxShadow: \"none\" }}\n                onClick={onCopy}\n              >\n                {hasCopied ? \"Copied\" : \"Copy\"}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n\n          <Text my={\"2\"} fontSize={\"12px\"}>\n            {isPermanent\n              ? \"Your invite link won't expire\"\n              : \"Your invite link expires in 1 day and can only be used once\"}\n          </Text>\n        </ModalBody>\n\n        <ModalFooter bg=\"brandGray.dark\" />\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { Box, GridItem, UnorderedList, useDisclosure } from \"@chakra-ui/react\";\nimport { getChannels } from \"api/handler/channel\";\nimport useChannelSocket from \"api/ws/useChannelSocket\";\nimport ChannelListItem from \"components/items/ChannelListItem\";\nimport GuildMenu from \"components/menus/GuildMenu\";\nimport CreateChannelModal from \"components/modals/CreateChannelModal\";\nimport InviteModal from \"components/modals/InviteModal\";\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { cKey } from \"utils/querykeys\";\nimport AccountBar from \"../AccountBar\";\nimport channelScrollbarCss from \"./css/ChannelScrollerCSS\";\n\nexport default function Channels() {\n  const {\n    isOpen: inviteIsOpen,\n    onOpen: inviteOpen,\n    onClose: inviteClose,\n  } = useDisclosure();\n  const {\n    isOpen: channelIsOpen,\n    onOpen: channelOpen,\n    onClose: channelClose,\n  } = useDisclosure();\n\n  const { guildId } = useParams();\n  const key = cKey(guildId);\n\n  const { data } = useQuery(key, () =>\n    getChannels(guildId).then((res) => res.data)\n  );\n\n  useChannelSocket(guildId, key);\n\n  return (\n    <>\n      <GuildMenu channelOpen={channelOpen} inviteOpen={inviteOpen} />\n      <GridItem\n        gridColumn={2}\n        gridRow={\"2/4\"}\n        bg=\"brandGray.dark\"\n        overflowY=\"hidden\"\n        _hover={{ overflowY: \"auto\" }}\n        css={channelScrollbarCss}\n      >\n        {inviteIsOpen && (\n          <InviteModal isOpen={inviteIsOpen} onClose={inviteClose} />\n        )}\n        {channelIsOpen && (\n          <CreateChannelModal\n            guildId={guildId}\n            onClose={channelClose}\n            isOpen={channelIsOpen}\n          />\n        )}\n        <UnorderedList listStyleType=\"none\" ml=\"0\" mt=\"4\">\n          {data?.map((channel) => (\n            <ChannelListItem\n              key={channel.id}\n              channel={channel}\n              guildId={guildId}\n            />\n          ))}\n          <Box h=\"16\" />\n        </UnorderedList>\n        <AccountBar />\n      </GridItem>\n    </>\n  );\n}\n","import { useEffect } from \"react\";\nimport getSocket from \"../getSocket\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useQueryClient } from \"react-query\";\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\n\nexport default function useChannelSocket(guildId, key) {\n  const location = useLocation();\n  const history = useHistory();\n  const cache = useQueryClient();\n  const guild = useGetCurrentGuild(guildId);\n\n  useEffect(() => {\n    const socket = getSocket();\n    socket.emit(\"joinGuild\", guildId);\n\n    const disconnect = () => {\n      socket.emit(\"leaveGuild\", guildId);\n      socket.disconnect();\n    };\n\n    socket.on(\"add_channel\", (newChannel) => {\n      cache.invalidateQueries(key);\n      // cache.setQueryData(key, (data) => {\n      //   return [...data, newChannel];\n      // });\n    });\n\n    socket.on(\"edit_channel\", (editedChannel) => {\n      cache.setQueryData(key, (d) => {\n        const index = d?.findIndex((c) => c.id === editedChannel.id);\n        if (index !== -1) {\n          d[index] = editedChannel;\n        } else if (editedChannel.isPublic) {\n          d.push(editedChannel);\n        }\n        return d;\n      });\n    });\n\n    socket.on(\"delete_channel\", (deleteId) => {\n      cache.setQueryData(key, (d) => {\n        const currentPath = `/channels/${guildId}/${deleteId}`;\n        if (location.pathname === currentPath && guild) {\n          if (deleteId === guild.default_channel_id) {\n            history.replace(\"/channels/me\");\n          } else {\n            history.replace(`${guild.default_channel_id}`);\n          }\n        }\n        return d?.filter((c) => c.id !== deleteId);\n      });\n    });\n\n    socket.on(\"new_notification\", (id) => {\n      const currentPath = `/channels/${guildId}/${id}`;\n      if (location.pathname !== currentPath) {\n        cache.setQueryData(key, (d) => {\n          const index = d?.findIndex((c) => c.id === id);\n          if (index !== -1) {\n            d[index] = { ...d[index], hasNotification: true };\n          }\n          return d;\n        });\n      }\n    });\n\n    window.addEventListener(\"beforeunload\", disconnect);\n\n    return () => disconnect();\n  }, [guildId, key, cache, history, location, guild]);\n}\n","import { Avatar, AvatarBadge, Flex, ListItem, Text } from \"@chakra-ui/react\";\nimport MemberContextMenu from \"components/menus/MemberContextMenu\";\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\nimport React from \"react\";\nimport { useContextMenu } from \"react-contexify\";\nimport { useParams } from \"react-router-dom\";\nimport userStore from \"stores/userStore\";\n\nexport default function MemberListItem({ member }) {\n  const { guildId } = useParams();\n  const current = userStore((state) => state.current);\n  const guild = useGetCurrentGuild(guildId);\n  const isOwner = guild !== undefined && guild.ownerId === current?.id;\n  const { show } = useContextMenu({\n    id: member.id,\n  });\n\n  return (\n    <>\n      <ListItem\n        p=\"2\"\n        mx=\"10px\"\n        color={\"brandGray.accent\"}\n        _hover={{\n          bg: \"brandGray.light\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n          color: \"#fff\",\n        }}\n        onContextMenu={show}\n      >\n        <Flex align=\"center\">\n          <Avatar size=\"sm\" src={member.image}>\n            <AvatarBadge\n              boxSize=\"1.25em\"\n              bg={member.isOnline ? \"green.500\" : \"gray.500\"}\n            />\n          </Avatar>\n          <Text ml=\"2\">{member.username}</Text>\n        </Flex>\n      </ListItem>\n      {member.id !== current?.id && (\n        <MemberContextMenu member={member} isOwner={isOwner} id={member.id} />\n      )}\n    </>\n  );\n}\n","const memberScrollbarCss = {\n  \"&::-webkit-scrollbar\": {\n    width: \"4px\",\n  },\n  \"&::-webkit-scrollbar-track\": {\n    width: \"4px\",\n  },\n  \"&::-webkit-scrollbar-thumb\": {\n    background: \"brandGray.darker\",\n    borderRadius: \"18px\",\n  },\n};\n\nexport default memberScrollbarCss;\n","import { GridItem, UnorderedList } from \"@chakra-ui/react\";\nimport { getGuildMembers } from \"api/handler/guilds\";\nimport useMemberSocket from \"api/ws/useMemberSocket\";\nimport MemberListItem from \"components/items/MemberListItem\";\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { mKey } from \"utils/querykeys\";\nimport OnlineLabel from \"components/sections/OnlineLabel\";\nimport memberScrollbarCss from \"./css/MemberScrollerCSS\";\n\nexport default function MemberList() {\n  const { guildId } = useParams();\n  const key = mKey(guildId);\n  const { data } = useQuery(key, () =>\n    getGuildMembers(guildId).then((res) => res.data)\n  );\n\n  const online = [];\n  const offline = [];\n\n  if (data) {\n    data.forEach((member) => {\n      if (member.isOnline) {\n        online.push(member);\n      } else {\n        offline.push(member);\n      }\n    });\n  }\n\n  useMemberSocket(guildId, key);\n\n  return (\n    <GridItem\n      gridColumn={4}\n      gridRow={\"1 / 4\"}\n      bg=\"memberList\"\n      overflowY=\"hidden\"\n      _hover={{ overflowY: \"auto\" }}\n      css={memberScrollbarCss}\n    >\n      <UnorderedList listStyleType=\"none\" ml=\"0\">\n        <OnlineLabel label={`online—${online.length}`} />\n        {online.map((m) => (\n          <MemberListItem key={m.id} member={m} />\n        ))}\n        <OnlineLabel label={`offline—${offline.length}`} />\n        {offline.map((m) => (\n          <MemberListItem key={m.id} member={m} />\n        ))}\n      </UnorderedList>\n    </GridItem>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport getSocket from \"../getSocket\";\n\nexport default function useMemberSocket(guildId, key) {\n  const cache = useQueryClient();\n\n  useEffect(() => {\n    const socket = getSocket();\n    socket.emit(\"joinGuild\", guildId);\n    socket.on(\"add_member\", (newMember) => {\n      cache.setQueryData(key, (data) => {\n        return [...data, newMember].sort((a, b) =>\n          a.username.localeCompare(b.username)\n        );\n      });\n    });\n\n    socket.on(\"remove_member\", (memberId) => {\n      cache.setQueryData(key, (data) => {\n        return [...data?.filter((m) => m.id !== memberId)];\n      });\n    });\n\n    socket.on(\"toggle_online\", (memberId) => {\n      cache.invalidateQueries(key);\n    });\n\n    // //setQueryData(key, (data) => {\n    //   const index = data?.findIndex((m) => m.id === memberId);\n    //   if (index !== -1) {\n    //     data[index].isOnline = true;\n    //   }\n    //   return data;\n    // });\n\n    socket.on(\"toggle_offline\", (memberId) => {\n      cache.setQueryData(key, (data) => {\n        const index = data?.findIndex((m) => m.id === memberId);\n        if (index !== -1) {\n          data[index].isOnline = false;\n        }\n        return data;\n      });\n    });\n\n    return () => {\n      socket.emit(\"leaveRoom\", guildId);\n      socket.disconnect();\n    };\n  }, [key, cache, guildId]);\n}\n","import React from \"react\";\nimport settingsStore from \"stores/settingsStore\";\nimport AppLayout from \"components/layouts/AppLayout\";\nimport ChannelHeader from \"components/layouts/guild/ChannelHeader\";\nimport Channels from \"components/layouts/guild/Channels\";\nimport ChatScreen from \"components/layouts/guild/chat/ChatScreen\";\nimport MessageInput from \"components/layouts/guild/chat/MessageInput\";\nimport GuildList from \"components/layouts/guild/GuildList\";\nimport MemberList from \"components/layouts/guild/MemberList\";\n\nexport default function ViewGuild() {\n  const showMemberList = settingsStore((state) => state.showMembers);\n\n  return (\n    <AppLayout showLastColumn={showMemberList}>\n      <GuildList />\n      <Channels />\n      <ChannelHeader />\n      <ChatScreen />\n      <MessageInput />\n      {showMemberList && <MemberList />}\n    </AppLayout>\n  );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Account from \"./pages/Account\";\nimport AuthRoute from \"./pages/AuthRoute\";\nimport ForgotPassword from \"./pages/ForgotPassword\";\nimport Home from \"./pages/Home\";\nimport Invite from \"./pages/Invite\";\nimport Landing from \"./pages/Landing\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport ResetPassword from \"./pages/ResetPassword\";\nimport ViewGuild from \"./pages/ViewGuild\";\n\nexport default function App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Landing} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={Register} />\n      <Route path=\"/forgot-password\" component={ForgotPassword} />\n      <Route path=\"/reset-password/:token\" component={ResetPassword} />\n      <AuthRoute exact path=\"/channels/me\" component={Home} />\n      <AuthRoute exact path=\"/channels/me/:channelId\" component={Home} />\n      <AuthRoute\n        exact\n        path=\"/channels/:guildId/:channelId\"\n        component={ViewGuild}\n      />\n      <AuthRoute exact path=\"/account\" component={Account} />\n      <AuthRoute exact path=\"/:link\" component={Invite} />\n    </Switch>\n  );\n}\n","import AppProviders from \"AppProviders\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <AppProviders>\n    <App />\n  </AppProviders>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}